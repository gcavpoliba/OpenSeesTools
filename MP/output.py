############### PLEASE READ THE DISCLAIMER AND THE DESCRIPTION IN THE GITHUB PAGE #############

import os
import openseespy.opensees as ops
import numpy as nup
ops.wipe()
import math as mm
import time as tt
pid = ops.getPID()
np = ops.getNP()
ops.barrier()
ops.model("basicBuilder","-ndm",3,"-ndf",4)
ops.nDMaterial('PressureDependMultiYield02',1, 3, 1.8, 90000.0, 220000.0, 31.0, 2.5, 80, 0.5, 26.0, 0.067, 0.23, 0.06, 0.27)
ops.model("basicBuilder","-ndm",3,"-ndf",4)
if pid == 0:
    ops.node(1, 0.0, 0.0, 10.0)
if pid == 20:
    ops.node(2, 0.0, 0.0, 0.0)
if pid == 4:
    ops.node(3, 0.0, 10.0, 10.0)
if pid == 24:
    ops.node(4, 0.0, 10.0, 0.0)
if pid == 0:
    ops.node(5, 10.0, 0.0, 10.0)
if pid == 20:
    ops.node(6, 10.0, 0.0, 0.0)
if pid == 4:
    ops.node(7, 10.0, 10.0, 10.0)
if pid == 24:
    ops.node(8, 10.0, 10.0, 0.0)
if pid == 15:
    ops.node(9, 0.0, 0.0, 2.0)
if pid == 20:
    ops.node(9, 0.0, 0.0, 2.0)
if pid == 10:
    ops.node(10, 0.0, 0.0, 4.0)
if pid == 15:
    ops.node(10, 0.0, 0.0, 4.0)
if pid == 5:
    ops.node(11, 0.0, 0.0, 6.0)
if pid == 10:
    ops.node(11, 0.0, 0.0, 6.0)
if pid == 0:
    ops.node(12, 0.0, 0.0, 8.0)
if pid == 5:
    ops.node(12, 0.0, 0.0, 8.0)
if pid == 0:
    ops.node(13, 0.0, 2.0, 10.0)
if pid == 1:
    ops.node(13, 0.0, 2.0, 10.0)
if pid == 1:
    ops.node(14, 0.0, 4.0, 10.0)
if pid == 2:
    ops.node(14, 0.0, 4.0, 10.0)
if pid == 2:
    ops.node(15, 0.0, 6.0, 10.0)
if pid == 3:
    ops.node(15, 0.0, 6.0, 10.0)
if pid == 3:
    ops.node(16, 0.0, 8.0, 10.0)
if pid == 4:
    ops.node(16, 0.0, 8.0, 10.0)
if pid == 19:
    ops.node(17, 0.0, 10.0, 2.0)
if pid == 24:
    ops.node(17, 0.0, 10.0, 2.0)
if pid == 14:
    ops.node(18, 0.0, 10.0, 4.0)
if pid == 19:
    ops.node(18, 0.0, 10.0, 4.0)
if pid == 9:
    ops.node(19, 0.0, 10.0, 6.0)
if pid == 14:
    ops.node(19, 0.0, 10.0, 6.0)
if pid == 4:
    ops.node(20, 0.0, 10.0, 8.0)
if pid == 9:
    ops.node(20, 0.0, 10.0, 8.0)
if pid == 20:
    ops.node(21, 0.0, 2.0, 0.0)
if pid == 21:
    ops.node(21, 0.0, 2.0, 0.0)
if pid == 21:
    ops.node(22, 0.0, 4.0, 0.0)
if pid == 22:
    ops.node(22, 0.0, 4.0, 0.0)
if pid == 22:
    ops.node(23, 0.0, 6.0, 0.0)
if pid == 23:
    ops.node(23, 0.0, 6.0, 0.0)
if pid == 23:
    ops.node(24, 0.0, 8.0, 0.0)
if pid == 24:
    ops.node(24, 0.0, 8.0, 0.0)
if pid == 15:
    ops.node(25, 10.0, 0.0, 2.0)
if pid == 20:
    ops.node(25, 10.0, 0.0, 2.0)
if pid == 10:
    ops.node(26, 10.0, 0.0, 4.0)
if pid == 15:
    ops.node(26, 10.0, 0.0, 4.0)
if pid == 5:
    ops.node(27, 10.0, 0.0, 6.0)
if pid == 10:
    ops.node(27, 10.0, 0.0, 6.0)
if pid == 0:
    ops.node(28, 10.0, 0.0, 8.0)
if pid == 5:
    ops.node(28, 10.0, 0.0, 8.0)
if pid == 0:
    ops.node(29, 10.0, 2.0, 10.0)
if pid == 1:
    ops.node(29, 10.0, 2.0, 10.0)
if pid == 1:
    ops.node(30, 10.0, 4.0, 10.0)
if pid == 2:
    ops.node(30, 10.0, 4.0, 10.0)
if pid == 2:
    ops.node(31, 10.0, 6.0, 10.0)
if pid == 3:
    ops.node(31, 10.0, 6.0, 10.0)
if pid == 3:
    ops.node(32, 10.0, 8.0, 10.0)
if pid == 4:
    ops.node(32, 10.0, 8.0, 10.0)
if pid == 19:
    ops.node(33, 10.0, 10.0, 2.0)
if pid == 24:
    ops.node(33, 10.0, 10.0, 2.0)
if pid == 14:
    ops.node(34, 10.0, 10.0, 4.0)
if pid == 19:
    ops.node(34, 10.0, 10.0, 4.0)
if pid == 9:
    ops.node(35, 10.0, 10.0, 6.0)
if pid == 14:
    ops.node(35, 10.0, 10.0, 6.0)
if pid == 4:
    ops.node(36, 10.0, 10.0, 8.0)
if pid == 9:
    ops.node(36, 10.0, 10.0, 8.0)
if pid == 20:
    ops.node(37, 10.0, 2.0, 0.0)
if pid == 21:
    ops.node(37, 10.0, 2.0, 0.0)
if pid == 21:
    ops.node(38, 10.0, 4.0, 0.0)
if pid == 22:
    ops.node(38, 10.0, 4.0, 0.0)
if pid == 22:
    ops.node(39, 10.0, 6.0, 0.0)
if pid == 23:
    ops.node(39, 10.0, 6.0, 0.0)
if pid == 23:
    ops.node(40, 10.0, 8.0, 0.0)
if pid == 24:
    ops.node(40, 10.0, 8.0, 0.0)
if pid == 20:
    ops.node(41, 2.0, 0.0, 0.0)
if pid == 20:
    ops.node(42, 4.0, 0.0, 0.0)
if pid == 20:
    ops.node(43, 6.0, 0.0, 0.0)
if pid == 20:
    ops.node(44, 8.0, 0.0, 0.0)
if pid == 0:
    ops.node(45, 2.0, 0.0, 10.0)
if pid == 0:
    ops.node(46, 4.0, 0.0, 10.0)
if pid == 0:
    ops.node(47, 6.0, 0.0, 10.0)
if pid == 0:
    ops.node(48, 8.0, 0.0, 10.0)
if pid == 24:
    ops.node(49, 2.0, 10.0, 0.0)
if pid == 24:
    ops.node(50, 4.0, 10.0, 0.0)
if pid == 24:
    ops.node(51, 6.0, 10.0, 0.0)
if pid == 24:
    ops.node(52, 8.0, 10.0, 0.0)
if pid == 4:
    ops.node(53, 2.0, 10.0, 10.0)
if pid == 4:
    ops.node(54, 4.0, 10.0, 10.0)
if pid == 4:
    ops.node(55, 6.0, 10.0, 10.0)
if pid == 4:
    ops.node(56, 8.0, 10.0, 10.0)
if pid == 15:
    ops.node(57, 0.0, 2.0, 2.0)
if pid == 16:
    ops.node(57, 0.0, 2.0, 2.0)
if pid == 20:
    ops.node(57, 0.0, 2.0, 2.0)
if pid == 21:
    ops.node(57, 0.0, 2.0, 2.0)
if pid == 16:
    ops.node(58, 0.0, 3.999999999999999, 2.0)
if pid == 17:
    ops.node(58, 0.0, 3.999999999999999, 2.0)
if pid == 21:
    ops.node(58, 0.0, 3.999999999999999, 2.0)
if pid == 22:
    ops.node(58, 0.0, 3.999999999999999, 2.0)
if pid == 17:
    ops.node(59, 0.0, 6.0, 2.0)
if pid == 18:
    ops.node(59, 0.0, 6.0, 2.0)
if pid == 22:
    ops.node(59, 0.0, 6.0, 2.0)
if pid == 23:
    ops.node(59, 0.0, 6.0, 2.0)
if pid == 18:
    ops.node(60, 0.0, 7.999999999999998, 2.0)
if pid == 19:
    ops.node(60, 0.0, 7.999999999999998, 2.0)
if pid == 23:
    ops.node(60, 0.0, 7.999999999999998, 2.0)
if pid == 24:
    ops.node(60, 0.0, 7.999999999999998, 2.0)
if pid == 10:
    ops.node(61, 0.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(61, 0.0, 2.0, 3.999999999999999)
if pid == 15:
    ops.node(61, 0.0, 2.0, 3.999999999999999)
if pid == 16:
    ops.node(61, 0.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(62, 0.0, 4.0, 4.0)
if pid == 12:
    ops.node(62, 0.0, 4.0, 4.0)
if pid == 16:
    ops.node(62, 0.0, 4.0, 4.0)
if pid == 17:
    ops.node(62, 0.0, 4.0, 4.0)
if pid == 12:
    ops.node(63, 0.0, 6.0, 4.0)
if pid == 13:
    ops.node(63, 0.0, 6.0, 4.0)
if pid == 17:
    ops.node(63, 0.0, 6.0, 4.0)
if pid == 18:
    ops.node(63, 0.0, 6.0, 4.0)
if pid == 13:
    ops.node(64, 0.0, 8.0, 4.0)
if pid == 14:
    ops.node(64, 0.0, 8.0, 4.0)
if pid == 18:
    ops.node(64, 0.0, 8.0, 4.0)
if pid == 19:
    ops.node(64, 0.0, 8.0, 4.0)
if pid == 5:
    ops.node(65, 0.0, 2.0, 6.0)
if pid == 6:
    ops.node(65, 0.0, 2.0, 6.0)
if pid == 10:
    ops.node(65, 0.0, 2.0, 6.0)
if pid == 11:
    ops.node(65, 0.0, 2.0, 6.0)
if pid == 6:
    ops.node(66, 0.0, 4.0, 6.0)
if pid == 7:
    ops.node(66, 0.0, 4.0, 6.0)
if pid == 11:
    ops.node(66, 0.0, 4.0, 6.0)
if pid == 12:
    ops.node(66, 0.0, 4.0, 6.0)
if pid == 7:
    ops.node(67, 0.0, 6.0, 6.0)
if pid == 8:
    ops.node(67, 0.0, 6.0, 6.0)
if pid == 12:
    ops.node(67, 0.0, 6.0, 6.0)
if pid == 13:
    ops.node(67, 0.0, 6.0, 6.0)
if pid == 8:
    ops.node(68, 0.0, 8.0, 6.0)
if pid == 9:
    ops.node(68, 0.0, 8.0, 6.0)
if pid == 13:
    ops.node(68, 0.0, 8.0, 6.0)
if pid == 14:
    ops.node(68, 0.0, 8.0, 6.0)
if pid == 0:
    ops.node(69, 0.0, 2.0, 7.999999999999998)
if pid == 1:
    ops.node(69, 0.0, 2.0, 7.999999999999998)
if pid == 5:
    ops.node(69, 0.0, 2.0, 7.999999999999998)
if pid == 6:
    ops.node(69, 0.0, 2.0, 7.999999999999998)
if pid == 1:
    ops.node(70, 0.0, 4.0, 8.0)
if pid == 2:
    ops.node(70, 0.0, 4.0, 8.0)
if pid == 6:
    ops.node(70, 0.0, 4.0, 8.0)
if pid == 7:
    ops.node(70, 0.0, 4.0, 8.0)
if pid == 2:
    ops.node(71, 0.0, 6.0, 8.0)
if pid == 3:
    ops.node(71, 0.0, 6.0, 8.0)
if pid == 7:
    ops.node(71, 0.0, 6.0, 8.0)
if pid == 8:
    ops.node(71, 0.0, 6.0, 8.0)
if pid == 3:
    ops.node(72, 0.0, 8.0, 8.0)
if pid == 4:
    ops.node(72, 0.0, 8.0, 8.0)
if pid == 8:
    ops.node(72, 0.0, 8.0, 8.0)
if pid == 9:
    ops.node(72, 0.0, 8.0, 8.0)
if pid == 0:
    ops.node(73, 10.0, 2.0, 7.999999999999998)
if pid == 1:
    ops.node(73, 10.0, 2.0, 7.999999999999998)
if pid == 5:
    ops.node(73, 10.0, 2.0, 7.999999999999998)
if pid == 6:
    ops.node(73, 10.0, 2.0, 7.999999999999998)
if pid == 1:
    ops.node(74, 10.0, 3.999999999999999, 8.0)
if pid == 2:
    ops.node(74, 10.0, 3.999999999999999, 8.0)
if pid == 6:
    ops.node(74, 10.0, 3.999999999999999, 8.0)
if pid == 7:
    ops.node(74, 10.0, 3.999999999999999, 8.0)
if pid == 2:
    ops.node(75, 10.0, 6.0, 8.0)
if pid == 3:
    ops.node(75, 10.0, 6.0, 8.0)
if pid == 7:
    ops.node(75, 10.0, 6.0, 8.0)
if pid == 8:
    ops.node(75, 10.0, 6.0, 8.0)
if pid == 3:
    ops.node(76, 10.0, 7.999999999999998, 8.0)
if pid == 4:
    ops.node(76, 10.0, 7.999999999999998, 8.0)
if pid == 8:
    ops.node(76, 10.0, 7.999999999999998, 8.0)
if pid == 9:
    ops.node(76, 10.0, 7.999999999999998, 8.0)
if pid == 5:
    ops.node(77, 10.0, 2.0, 6.0)
if pid == 6:
    ops.node(77, 10.0, 2.0, 6.0)
if pid == 10:
    ops.node(77, 10.0, 2.0, 6.0)
if pid == 11:
    ops.node(77, 10.0, 2.0, 6.0)
if pid == 6:
    ops.node(78, 10.0, 4.0, 6.0)
if pid == 7:
    ops.node(78, 10.0, 4.0, 6.0)
if pid == 11:
    ops.node(78, 10.0, 4.0, 6.0)
if pid == 12:
    ops.node(78, 10.0, 4.0, 6.0)
if pid == 7:
    ops.node(79, 10.0, 6.0, 6.0)
if pid == 8:
    ops.node(79, 10.0, 6.0, 6.0)
if pid == 12:
    ops.node(79, 10.0, 6.0, 6.0)
if pid == 13:
    ops.node(79, 10.0, 6.0, 6.0)
if pid == 8:
    ops.node(80, 10.0, 8.0, 6.0)
if pid == 9:
    ops.node(80, 10.0, 8.0, 6.0)
if pid == 13:
    ops.node(80, 10.0, 8.0, 6.0)
if pid == 14:
    ops.node(80, 10.0, 8.0, 6.0)
if pid == 10:
    ops.node(81, 10.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(81, 10.0, 2.0, 3.999999999999999)
if pid == 15:
    ops.node(81, 10.0, 2.0, 3.999999999999999)
if pid == 16:
    ops.node(81, 10.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(82, 10.0, 4.0, 4.0)
if pid == 12:
    ops.node(82, 10.0, 4.0, 4.0)
if pid == 16:
    ops.node(82, 10.0, 4.0, 4.0)
if pid == 17:
    ops.node(82, 10.0, 4.0, 4.0)
if pid == 12:
    ops.node(83, 10.0, 6.0, 4.0)
if pid == 13:
    ops.node(83, 10.0, 6.0, 4.0)
if pid == 17:
    ops.node(83, 10.0, 6.0, 4.0)
if pid == 18:
    ops.node(83, 10.0, 6.0, 4.0)
if pid == 13:
    ops.node(84, 10.0, 8.0, 4.0)
if pid == 14:
    ops.node(84, 10.0, 8.0, 4.0)
if pid == 18:
    ops.node(84, 10.0, 8.0, 4.0)
if pid == 19:
    ops.node(84, 10.0, 8.0, 4.0)
if pid == 15:
    ops.node(85, 10.0, 2.0, 2.0)
if pid == 16:
    ops.node(85, 10.0, 2.0, 2.0)
if pid == 20:
    ops.node(85, 10.0, 2.0, 2.0)
if pid == 21:
    ops.node(85, 10.0, 2.0, 2.0)
if pid == 16:
    ops.node(86, 10.0, 4.0, 2.0)
if pid == 17:
    ops.node(86, 10.0, 4.0, 2.0)
if pid == 21:
    ops.node(86, 10.0, 4.0, 2.0)
if pid == 22:
    ops.node(86, 10.0, 4.0, 2.0)
if pid == 17:
    ops.node(87, 10.0, 6.0, 2.0)
if pid == 18:
    ops.node(87, 10.0, 6.0, 2.0)
if pid == 22:
    ops.node(87, 10.0, 6.0, 2.0)
if pid == 23:
    ops.node(87, 10.0, 6.0, 2.0)
if pid == 18:
    ops.node(88, 10.0, 8.0, 2.0)
if pid == 19:
    ops.node(88, 10.0, 8.0, 2.0)
if pid == 23:
    ops.node(88, 10.0, 8.0, 2.0)
if pid == 24:
    ops.node(88, 10.0, 8.0, 2.0)
if pid == 15:
    ops.node(89, 2.0, 0.0, 2.0)
if pid == 20:
    ops.node(89, 2.0, 0.0, 2.0)
if pid == 10:
    ops.node(90, 2.0, 0.0, 3.999999999999999)
if pid == 15:
    ops.node(90, 2.0, 0.0, 3.999999999999999)
if pid == 5:
    ops.node(91, 2.0, 0.0, 6.0)
if pid == 10:
    ops.node(91, 2.0, 0.0, 6.0)
if pid == 0:
    ops.node(92, 2.0, 0.0, 7.999999999999998)
if pid == 5:
    ops.node(92, 2.0, 0.0, 7.999999999999998)
if pid == 15:
    ops.node(93, 3.999999999999999, 0.0, 2.0)
if pid == 20:
    ops.node(93, 3.999999999999999, 0.0, 2.0)
if pid == 10:
    ops.node(94, 4.0, 0.0, 4.0)
if pid == 15:
    ops.node(94, 4.0, 0.0, 4.0)
if pid == 5:
    ops.node(95, 4.0, 0.0, 6.0)
if pid == 10:
    ops.node(95, 4.0, 0.0, 6.0)
if pid == 0:
    ops.node(96, 4.0, 0.0, 8.0)
if pid == 5:
    ops.node(96, 4.0, 0.0, 8.0)
if pid == 15:
    ops.node(97, 6.0, 0.0, 2.0)
if pid == 20:
    ops.node(97, 6.0, 0.0, 2.0)
if pid == 10:
    ops.node(98, 6.0, 0.0, 4.0)
if pid == 15:
    ops.node(98, 6.0, 0.0, 4.0)
if pid == 5:
    ops.node(99, 6.0, 0.0, 6.0)
if pid == 10:
    ops.node(99, 6.0, 0.0, 6.0)
if pid == 0:
    ops.node(100, 6.0, 0.0, 8.0)
if pid == 5:
    ops.node(100, 6.0, 0.0, 8.0)
if pid == 15:
    ops.node(101, 7.999999999999998, 0.0, 2.0)
if pid == 20:
    ops.node(101, 7.999999999999998, 0.0, 2.0)
if pid == 10:
    ops.node(102, 8.0, 0.0, 4.0)
if pid == 15:
    ops.node(102, 8.0, 0.0, 4.0)
if pid == 5:
    ops.node(103, 8.0, 0.0, 6.0)
if pid == 10:
    ops.node(103, 8.0, 0.0, 6.0)
if pid == 0:
    ops.node(104, 8.0, 0.0, 8.0)
if pid == 5:
    ops.node(104, 8.0, 0.0, 8.0)
if pid == 19:
    ops.node(105, 7.999999999999998, 10.0, 2.0)
if pid == 24:
    ops.node(105, 7.999999999999998, 10.0, 2.0)
if pid == 14:
    ops.node(106, 8.0, 10.0, 3.999999999999999)
if pid == 19:
    ops.node(106, 8.0, 10.0, 3.999999999999999)
if pid == 9:
    ops.node(107, 8.0, 10.0, 6.0)
if pid == 14:
    ops.node(107, 8.0, 10.0, 6.0)
if pid == 4:
    ops.node(108, 8.0, 10.0, 7.999999999999998)
if pid == 9:
    ops.node(108, 8.0, 10.0, 7.999999999999998)
if pid == 19:
    ops.node(109, 6.0, 10.0, 2.0)
if pid == 24:
    ops.node(109, 6.0, 10.0, 2.0)
if pid == 14:
    ops.node(110, 6.0, 10.0, 4.0)
if pid == 19:
    ops.node(110, 6.0, 10.0, 4.0)
if pid == 9:
    ops.node(111, 6.0, 10.0, 6.0)
if pid == 14:
    ops.node(111, 6.0, 10.0, 6.0)
if pid == 4:
    ops.node(112, 6.0, 10.0, 8.0)
if pid == 9:
    ops.node(112, 6.0, 10.0, 8.0)
if pid == 19:
    ops.node(113, 3.999999999999999, 10.0, 2.0)
if pid == 24:
    ops.node(113, 3.999999999999999, 10.0, 2.0)
if pid == 14:
    ops.node(114, 4.0, 10.0, 4.0)
if pid == 19:
    ops.node(114, 4.0, 10.0, 4.0)
if pid == 9:
    ops.node(115, 4.0, 10.0, 6.0)
if pid == 14:
    ops.node(115, 4.0, 10.0, 6.0)
if pid == 4:
    ops.node(116, 4.0, 10.0, 8.0)
if pid == 9:
    ops.node(116, 4.0, 10.0, 8.0)
if pid == 19:
    ops.node(117, 2.0, 10.0, 2.0)
if pid == 24:
    ops.node(117, 2.0, 10.0, 2.0)
if pid == 14:
    ops.node(118, 2.0, 10.0, 4.0)
if pid == 19:
    ops.node(118, 2.0, 10.0, 4.0)
if pid == 9:
    ops.node(119, 2.0, 10.0, 6.0)
if pid == 14:
    ops.node(119, 2.0, 10.0, 6.0)
if pid == 4:
    ops.node(120, 2.0, 10.0, 8.0)
if pid == 9:
    ops.node(120, 2.0, 10.0, 8.0)
if pid == 20:
    ops.node(121, 2.0, 2.0, 0.0)
if pid == 21:
    ops.node(121, 2.0, 2.0, 0.0)
if pid == 20:
    ops.node(122, 3.999999999999999, 2.0, 0.0)
if pid == 21:
    ops.node(122, 3.999999999999999, 2.0, 0.0)
if pid == 20:
    ops.node(123, 6.0, 2.0, 0.0)
if pid == 21:
    ops.node(123, 6.0, 2.0, 0.0)
if pid == 20:
    ops.node(124, 7.999999999999998, 2.0, 0.0)
if pid == 21:
    ops.node(124, 7.999999999999998, 2.0, 0.0)
if pid == 21:
    ops.node(125, 2.0, 3.999999999999999, 0.0)
if pid == 22:
    ops.node(125, 2.0, 3.999999999999999, 0.0)
if pid == 21:
    ops.node(126, 4.0, 4.0, 0.0)
if pid == 22:
    ops.node(126, 4.0, 4.0, 0.0)
if pid == 21:
    ops.node(127, 6.0, 4.0, 0.0)
if pid == 22:
    ops.node(127, 6.0, 4.0, 0.0)
if pid == 21:
    ops.node(128, 8.0, 4.0, 0.0)
if pid == 22:
    ops.node(128, 8.0, 4.0, 0.0)
if pid == 22:
    ops.node(129, 2.0, 6.0, 0.0)
if pid == 23:
    ops.node(129, 2.0, 6.0, 0.0)
if pid == 22:
    ops.node(130, 4.0, 6.0, 0.0)
if pid == 23:
    ops.node(130, 4.0, 6.0, 0.0)
if pid == 22:
    ops.node(131, 6.0, 6.0, 0.0)
if pid == 23:
    ops.node(131, 6.0, 6.0, 0.0)
if pid == 22:
    ops.node(132, 8.0, 6.0, 0.0)
if pid == 23:
    ops.node(132, 8.0, 6.0, 0.0)
if pid == 23:
    ops.node(133, 2.0, 7.999999999999998, 0.0)
if pid == 24:
    ops.node(133, 2.0, 7.999999999999998, 0.0)
if pid == 23:
    ops.node(134, 4.0, 8.0, 0.0)
if pid == 24:
    ops.node(134, 4.0, 8.0, 0.0)
if pid == 23:
    ops.node(135, 6.0, 8.0, 0.0)
if pid == 24:
    ops.node(135, 6.0, 8.0, 0.0)
if pid == 23:
    ops.node(136, 8.0, 8.0, 0.0)
if pid == 24:
    ops.node(136, 8.0, 8.0, 0.0)
if pid == 3:
    ops.node(137, 2.0, 7.999999999999998, 10.0)
if pid == 4:
    ops.node(137, 2.0, 7.999999999999998, 10.0)
if pid == 3:
    ops.node(138, 3.999999999999999, 8.0, 10.0)
if pid == 4:
    ops.node(138, 3.999999999999999, 8.0, 10.0)
if pid == 3:
    ops.node(139, 6.0, 8.0, 10.0)
if pid == 4:
    ops.node(139, 6.0, 8.0, 10.0)
if pid == 3:
    ops.node(140, 7.999999999999998, 8.0, 10.0)
if pid == 4:
    ops.node(140, 7.999999999999998, 8.0, 10.0)
if pid == 2:
    ops.node(141, 2.0, 6.0, 10.0)
if pid == 3:
    ops.node(141, 2.0, 6.0, 10.0)
if pid == 2:
    ops.node(142, 4.0, 6.0, 10.0)
if pid == 3:
    ops.node(142, 4.0, 6.0, 10.0)
if pid == 2:
    ops.node(143, 6.0, 6.0, 10.0)
if pid == 3:
    ops.node(143, 6.0, 6.0, 10.0)
if pid == 2:
    ops.node(144, 8.0, 6.0, 10.0)
if pid == 3:
    ops.node(144, 8.0, 6.0, 10.0)
if pid == 1:
    ops.node(145, 2.0, 3.999999999999999, 10.0)
if pid == 2:
    ops.node(145, 2.0, 3.999999999999999, 10.0)
if pid == 1:
    ops.node(146, 4.0, 4.0, 10.0)
if pid == 2:
    ops.node(146, 4.0, 4.0, 10.0)
if pid == 1:
    ops.node(147, 6.0, 4.0, 10.0)
if pid == 2:
    ops.node(147, 6.0, 4.0, 10.0)
if pid == 1:
    ops.node(148, 8.0, 4.0, 10.0)
if pid == 2:
    ops.node(148, 8.0, 4.0, 10.0)
if pid == 0:
    ops.node(149, 2.0, 2.0, 10.0)
if pid == 1:
    ops.node(149, 2.0, 2.0, 10.0)
if pid == 0:
    ops.node(150, 4.0, 2.0, 10.0)
if pid == 1:
    ops.node(150, 4.0, 2.0, 10.0)
if pid == 0:
    ops.node(151, 6.0, 2.0, 10.0)
if pid == 1:
    ops.node(151, 6.0, 2.0, 10.0)
if pid == 0:
    ops.node(152, 8.0, 2.0, 10.0)
if pid == 1:
    ops.node(152, 8.0, 2.0, 10.0)
if pid == 0:
    ops.node(153, 2.0, 2.0, 7.999999999999996)
if pid == 1:
    ops.node(153, 2.0, 2.0, 7.999999999999996)
if pid == 5:
    ops.node(153, 2.0, 2.0, 7.999999999999996)
if pid == 6:
    ops.node(153, 2.0, 2.0, 7.999999999999996)
if pid == 0:
    ops.node(154, 4.0, 2.0, 7.999999999999996)
if pid == 1:
    ops.node(154, 4.0, 2.0, 7.999999999999996)
if pid == 5:
    ops.node(154, 4.0, 2.0, 7.999999999999996)
if pid == 6:
    ops.node(154, 4.0, 2.0, 7.999999999999996)
if pid == 0:
    ops.node(155, 6.0, 2.0, 7.999999999999996)
if pid == 1:
    ops.node(155, 6.0, 2.0, 7.999999999999996)
if pid == 5:
    ops.node(155, 6.0, 2.0, 7.999999999999996)
if pid == 6:
    ops.node(155, 6.0, 2.0, 7.999999999999996)
if pid == 0:
    ops.node(156, 8.0, 1.999999999999999, 7.999999999999996)
if pid == 1:
    ops.node(156, 8.0, 1.999999999999999, 7.999999999999996)
if pid == 5:
    ops.node(156, 8.0, 1.999999999999999, 7.999999999999996)
if pid == 6:
    ops.node(156, 8.0, 1.999999999999999, 7.999999999999996)
if pid == 1:
    ops.node(157, 2.0, 4.0, 8.0)
if pid == 2:
    ops.node(157, 2.0, 4.0, 8.0)
if pid == 6:
    ops.node(157, 2.0, 4.0, 8.0)
if pid == 7:
    ops.node(157, 2.0, 4.0, 8.0)
if pid == 1:
    ops.node(158, 4.0, 4.0, 8.0)
if pid == 2:
    ops.node(158, 4.0, 4.0, 8.0)
if pid == 6:
    ops.node(158, 4.0, 4.0, 8.0)
if pid == 7:
    ops.node(158, 4.0, 4.0, 8.0)
if pid == 1:
    ops.node(159, 6.0, 4.0, 8.0)
if pid == 2:
    ops.node(159, 6.0, 4.0, 8.0)
if pid == 6:
    ops.node(159, 6.0, 4.0, 8.0)
if pid == 7:
    ops.node(159, 6.0, 4.0, 8.0)
if pid == 1:
    ops.node(160, 8.0, 4.0, 8.000000000000004)
if pid == 2:
    ops.node(160, 8.0, 4.0, 8.000000000000004)
if pid == 6:
    ops.node(160, 8.0, 4.0, 8.000000000000004)
if pid == 7:
    ops.node(160, 8.0, 4.0, 8.000000000000004)
if pid == 2:
    ops.node(161, 2.0, 5.999999999999996, 8.0)
if pid == 3:
    ops.node(161, 2.0, 5.999999999999996, 8.0)
if pid == 7:
    ops.node(161, 2.0, 5.999999999999996, 8.0)
if pid == 8:
    ops.node(161, 2.0, 5.999999999999996, 8.0)
if pid == 2:
    ops.node(162, 4.0, 6.0, 8.0)
if pid == 3:
    ops.node(162, 4.0, 6.0, 8.0)
if pid == 7:
    ops.node(162, 4.0, 6.0, 8.0)
if pid == 8:
    ops.node(162, 4.0, 6.0, 8.0)
if pid == 2:
    ops.node(163, 5.999999999999996, 6.0, 8.0)
if pid == 3:
    ops.node(163, 5.999999999999996, 6.0, 8.0)
if pid == 7:
    ops.node(163, 5.999999999999996, 6.0, 8.0)
if pid == 8:
    ops.node(163, 5.999999999999996, 6.0, 8.0)
if pid == 2:
    ops.node(164, 8.0, 5.999999999999996, 8.000000000000004)
if pid == 3:
    ops.node(164, 8.0, 5.999999999999996, 8.000000000000004)
if pid == 7:
    ops.node(164, 8.0, 5.999999999999996, 8.000000000000004)
if pid == 8:
    ops.node(164, 8.0, 5.999999999999996, 8.000000000000004)
if pid == 3:
    ops.node(165, 1.999999999999999, 8.0, 8.0)
if pid == 4:
    ops.node(165, 1.999999999999999, 8.0, 8.0)
if pid == 8:
    ops.node(165, 1.999999999999999, 8.0, 8.0)
if pid == 9:
    ops.node(165, 1.999999999999999, 8.0, 8.0)
if pid == 3:
    ops.node(166, 4.0, 8.0, 8.0)
if pid == 4:
    ops.node(166, 4.0, 8.0, 8.0)
if pid == 8:
    ops.node(166, 4.0, 8.0, 8.0)
if pid == 9:
    ops.node(166, 4.0, 8.0, 8.0)
if pid == 3:
    ops.node(167, 6.0, 8.0, 8.0)
if pid == 4:
    ops.node(167, 6.0, 8.0, 8.0)
if pid == 8:
    ops.node(167, 6.0, 8.0, 8.0)
if pid == 9:
    ops.node(167, 6.0, 8.0, 8.0)
if pid == 3:
    ops.node(168, 8.0, 8.0, 7.999999999999996)
if pid == 4:
    ops.node(168, 8.0, 8.0, 7.999999999999996)
if pid == 8:
    ops.node(168, 8.0, 8.0, 7.999999999999996)
if pid == 9:
    ops.node(168, 8.0, 8.0, 7.999999999999996)
if pid == 5:
    ops.node(169, 2.0, 2.0, 6.000000000000004)
if pid == 6:
    ops.node(169, 2.0, 2.0, 6.000000000000004)
if pid == 10:
    ops.node(169, 2.0, 2.0, 6.000000000000004)
if pid == 11:
    ops.node(169, 2.0, 2.0, 6.000000000000004)
if pid == 5:
    ops.node(170, 4.0, 2.0, 6.0)
if pid == 6:
    ops.node(170, 4.0, 2.0, 6.0)
if pid == 10:
    ops.node(170, 4.0, 2.0, 6.0)
if pid == 11:
    ops.node(170, 4.0, 2.0, 6.0)
if pid == 5:
    ops.node(171, 6.0, 2.0, 6.0)
if pid == 6:
    ops.node(171, 6.0, 2.0, 6.0)
if pid == 10:
    ops.node(171, 6.0, 2.0, 6.0)
if pid == 11:
    ops.node(171, 6.0, 2.0, 6.0)
if pid == 5:
    ops.node(172, 8.0, 2.0, 6.0)
if pid == 6:
    ops.node(172, 8.0, 2.0, 6.0)
if pid == 10:
    ops.node(172, 8.0, 2.0, 6.0)
if pid == 11:
    ops.node(172, 8.0, 2.0, 6.0)
if pid == 6:
    ops.node(173, 1.999999999999999, 3.999999999999998, 5.999999999999996)
if pid == 7:
    ops.node(173, 1.999999999999999, 3.999999999999998, 5.999999999999996)
if pid == 11:
    ops.node(173, 1.999999999999999, 3.999999999999998, 5.999999999999996)
if pid == 12:
    ops.node(173, 1.999999999999999, 3.999999999999998, 5.999999999999996)
if pid == 6:
    ops.node(174, 4.0, 4.0, 6.0)
if pid == 7:
    ops.node(174, 4.0, 4.0, 6.0)
if pid == 11:
    ops.node(174, 4.0, 4.0, 6.0)
if pid == 12:
    ops.node(174, 4.0, 4.0, 6.0)
if pid == 6:
    ops.node(175, 6.0, 4.0, 6.0)
if pid == 7:
    ops.node(175, 6.0, 4.0, 6.0)
if pid == 11:
    ops.node(175, 6.0, 4.0, 6.0)
if pid == 12:
    ops.node(175, 6.0, 4.0, 6.0)
if pid == 6:
    ops.node(176, 8.0, 4.0, 6.0)
if pid == 7:
    ops.node(176, 8.0, 4.0, 6.0)
if pid == 11:
    ops.node(176, 8.0, 4.0, 6.0)
if pid == 12:
    ops.node(176, 8.0, 4.0, 6.0)
if pid == 7:
    ops.node(177, 2.0, 6.0, 6.0)
if pid == 8:
    ops.node(177, 2.0, 6.0, 6.0)
if pid == 12:
    ops.node(177, 2.0, 6.0, 6.0)
if pid == 13:
    ops.node(177, 2.0, 6.0, 6.0)
if pid == 7:
    ops.node(178, 4.0, 6.0, 6.0)
if pid == 8:
    ops.node(178, 4.0, 6.0, 6.0)
if pid == 12:
    ops.node(178, 4.0, 6.0, 6.0)
if pid == 13:
    ops.node(178, 4.0, 6.0, 6.0)
if pid == 7:
    ops.node(179, 6.0, 6.0, 6.0)
if pid == 8:
    ops.node(179, 6.0, 6.0, 6.0)
if pid == 12:
    ops.node(179, 6.0, 6.0, 6.0)
if pid == 13:
    ops.node(179, 6.0, 6.0, 6.0)
if pid == 7:
    ops.node(180, 8.0, 6.0, 6.0)
if pid == 8:
    ops.node(180, 8.0, 6.0, 6.0)
if pid == 12:
    ops.node(180, 8.0, 6.0, 6.0)
if pid == 13:
    ops.node(180, 8.0, 6.0, 6.0)
if pid == 8:
    ops.node(181, 1.999999999999998, 7.999999999999996, 5.999999999999996)
if pid == 9:
    ops.node(181, 1.999999999999998, 7.999999999999996, 5.999999999999996)
if pid == 13:
    ops.node(181, 1.999999999999998, 7.999999999999996, 5.999999999999996)
if pid == 14:
    ops.node(181, 1.999999999999998, 7.999999999999996, 5.999999999999996)
if pid == 8:
    ops.node(182, 3.999999999999998, 8.0, 6.0)
if pid == 9:
    ops.node(182, 3.999999999999998, 8.0, 6.0)
if pid == 13:
    ops.node(182, 3.999999999999998, 8.0, 6.0)
if pid == 14:
    ops.node(182, 3.999999999999998, 8.0, 6.0)
if pid == 8:
    ops.node(183, 6.0, 8.0, 6.0)
if pid == 9:
    ops.node(183, 6.0, 8.0, 6.0)
if pid == 13:
    ops.node(183, 6.0, 8.0, 6.0)
if pid == 14:
    ops.node(183, 6.0, 8.0, 6.0)
if pid == 8:
    ops.node(184, 7.999999999999996, 8.0, 6.0)
if pid == 9:
    ops.node(184, 7.999999999999996, 8.0, 6.0)
if pid == 13:
    ops.node(184, 7.999999999999996, 8.0, 6.0)
if pid == 14:
    ops.node(184, 7.999999999999996, 8.0, 6.0)
if pid == 10:
    ops.node(185, 2.0, 2.0, 3.999999999999996)
if pid == 11:
    ops.node(185, 2.0, 2.0, 3.999999999999996)
if pid == 15:
    ops.node(185, 2.0, 2.0, 3.999999999999996)
if pid == 16:
    ops.node(185, 2.0, 2.0, 3.999999999999996)
if pid == 10:
    ops.node(186, 4.0, 2.0, 3.999999999999998)
if pid == 11:
    ops.node(186, 4.0, 2.0, 3.999999999999998)
if pid == 15:
    ops.node(186, 4.0, 2.0, 3.999999999999998)
if pid == 16:
    ops.node(186, 4.0, 2.0, 3.999999999999998)
if pid == 10:
    ops.node(187, 6.0, 2.0, 4.0)
if pid == 11:
    ops.node(187, 6.0, 2.0, 4.0)
if pid == 15:
    ops.node(187, 6.0, 2.0, 4.0)
if pid == 16:
    ops.node(187, 6.0, 2.0, 4.0)
if pid == 10:
    ops.node(188, 8.0, 2.0, 3.999999999999998)
if pid == 11:
    ops.node(188, 8.0, 2.0, 3.999999999999998)
if pid == 15:
    ops.node(188, 8.0, 2.0, 3.999999999999998)
if pid == 16:
    ops.node(188, 8.0, 2.0, 3.999999999999998)
if pid == 11:
    ops.node(189, 2.0, 4.0, 4.0)
if pid == 12:
    ops.node(189, 2.0, 4.0, 4.0)
if pid == 16:
    ops.node(189, 2.0, 4.0, 4.0)
if pid == 17:
    ops.node(189, 2.0, 4.0, 4.0)
if pid == 11:
    ops.node(190, 4.0, 4.0, 4.0)
if pid == 12:
    ops.node(190, 4.0, 4.0, 4.0)
if pid == 16:
    ops.node(190, 4.0, 4.0, 4.0)
if pid == 17:
    ops.node(190, 4.0, 4.0, 4.0)
if pid == 11:
    ops.node(191, 6.0, 4.0, 4.0)
if pid == 12:
    ops.node(191, 6.0, 4.0, 4.0)
if pid == 16:
    ops.node(191, 6.0, 4.0, 4.0)
if pid == 17:
    ops.node(191, 6.0, 4.0, 4.0)
if pid == 11:
    ops.node(192, 8.0, 4.0, 4.0)
if pid == 12:
    ops.node(192, 8.0, 4.0, 4.0)
if pid == 16:
    ops.node(192, 8.0, 4.0, 4.0)
if pid == 17:
    ops.node(192, 8.0, 4.0, 4.0)
if pid == 12:
    ops.node(193, 2.0, 6.0, 4.0)
if pid == 13:
    ops.node(193, 2.0, 6.0, 4.0)
if pid == 17:
    ops.node(193, 2.0, 6.0, 4.0)
if pid == 18:
    ops.node(193, 2.0, 6.0, 4.0)
if pid == 12:
    ops.node(194, 4.0, 6.0, 4.0)
if pid == 13:
    ops.node(194, 4.0, 6.0, 4.0)
if pid == 17:
    ops.node(194, 4.0, 6.0, 4.0)
if pid == 18:
    ops.node(194, 4.0, 6.0, 4.0)
if pid == 12:
    ops.node(195, 6.0, 6.0, 4.0)
if pid == 13:
    ops.node(195, 6.0, 6.0, 4.0)
if pid == 17:
    ops.node(195, 6.0, 6.0, 4.0)
if pid == 18:
    ops.node(195, 6.0, 6.0, 4.0)
if pid == 12:
    ops.node(196, 8.0, 6.0, 4.0)
if pid == 13:
    ops.node(196, 8.0, 6.0, 4.0)
if pid == 17:
    ops.node(196, 8.0, 6.0, 4.0)
if pid == 18:
    ops.node(196, 8.0, 6.0, 4.0)
if pid == 13:
    ops.node(197, 2.0, 8.0, 4.0)
if pid == 14:
    ops.node(197, 2.0, 8.0, 4.0)
if pid == 18:
    ops.node(197, 2.0, 8.0, 4.0)
if pid == 19:
    ops.node(197, 2.0, 8.0, 4.0)
if pid == 13:
    ops.node(198, 4.0, 8.0, 4.0)
if pid == 14:
    ops.node(198, 4.0, 8.0, 4.0)
if pid == 18:
    ops.node(198, 4.0, 8.0, 4.0)
if pid == 19:
    ops.node(198, 4.0, 8.0, 4.0)
if pid == 13:
    ops.node(199, 6.0, 8.0, 4.0)
if pid == 14:
    ops.node(199, 6.0, 8.0, 4.0)
if pid == 18:
    ops.node(199, 6.0, 8.0, 4.0)
if pid == 19:
    ops.node(199, 6.0, 8.0, 4.0)
if pid == 13:
    ops.node(200, 8.0, 8.0, 3.999999999999998)
if pid == 14:
    ops.node(200, 8.0, 8.0, 3.999999999999998)
if pid == 18:
    ops.node(200, 8.0, 8.0, 3.999999999999998)
if pid == 19:
    ops.node(200, 8.0, 8.0, 3.999999999999998)
if pid == 15:
    ops.node(201, 2.0, 1.999999999999999, 1.999999999999999)
if pid == 16:
    ops.node(201, 2.0, 1.999999999999999, 1.999999999999999)
if pid == 20:
    ops.node(201, 2.0, 1.999999999999999, 1.999999999999999)
if pid == 21:
    ops.node(201, 2.0, 1.999999999999999, 1.999999999999999)
if pid == 15:
    ops.node(202, 3.999999999999996, 2.0, 1.999999999999999)
if pid == 16:
    ops.node(202, 3.999999999999996, 2.0, 1.999999999999999)
if pid == 20:
    ops.node(202, 3.999999999999996, 2.0, 1.999999999999999)
if pid == 21:
    ops.node(202, 3.999999999999996, 2.0, 1.999999999999999)
if pid == 15:
    ops.node(203, 6.0, 2.0, 2.0)
if pid == 16:
    ops.node(203, 6.0, 2.0, 2.0)
if pid == 20:
    ops.node(203, 6.0, 2.0, 2.0)
if pid == 21:
    ops.node(203, 6.0, 2.0, 2.0)
if pid == 15:
    ops.node(204, 7.999999999999993, 2.0, 2.0)
if pid == 16:
    ops.node(204, 7.999999999999993, 2.0, 2.0)
if pid == 20:
    ops.node(204, 7.999999999999993, 2.0, 2.0)
if pid == 21:
    ops.node(204, 7.999999999999993, 2.0, 2.0)
if pid == 16:
    ops.node(205, 2.0, 3.999999999999996, 2.0)
if pid == 17:
    ops.node(205, 2.0, 3.999999999999996, 2.0)
if pid == 21:
    ops.node(205, 2.0, 3.999999999999996, 2.0)
if pid == 22:
    ops.node(205, 2.0, 3.999999999999996, 2.0)
if pid == 16:
    ops.node(206, 3.999999999999998, 4.0, 1.999999999999999)
if pid == 17:
    ops.node(206, 3.999999999999998, 4.0, 1.999999999999999)
if pid == 21:
    ops.node(206, 3.999999999999998, 4.0, 1.999999999999999)
if pid == 22:
    ops.node(206, 3.999999999999998, 4.0, 1.999999999999999)
if pid == 16:
    ops.node(207, 6.0, 4.0, 2.0)
if pid == 17:
    ops.node(207, 6.0, 4.0, 2.0)
if pid == 21:
    ops.node(207, 6.0, 4.0, 2.0)
if pid == 22:
    ops.node(207, 6.0, 4.0, 2.0)
if pid == 16:
    ops.node(208, 7.999999999999996, 4.0, 1.999999999999999)
if pid == 17:
    ops.node(208, 7.999999999999996, 4.0, 1.999999999999999)
if pid == 21:
    ops.node(208, 7.999999999999996, 4.0, 1.999999999999999)
if pid == 22:
    ops.node(208, 7.999999999999996, 4.0, 1.999999999999999)
if pid == 17:
    ops.node(209, 2.0, 6.0, 2.0)
if pid == 18:
    ops.node(209, 2.0, 6.0, 2.0)
if pid == 22:
    ops.node(209, 2.0, 6.0, 2.0)
if pid == 23:
    ops.node(209, 2.0, 6.0, 2.0)
if pid == 17:
    ops.node(210, 3.999999999999998, 6.0, 2.0)
if pid == 18:
    ops.node(210, 3.999999999999998, 6.0, 2.0)
if pid == 22:
    ops.node(210, 3.999999999999998, 6.0, 2.0)
if pid == 23:
    ops.node(210, 3.999999999999998, 6.0, 2.0)
if pid == 17:
    ops.node(211, 6.0, 6.0, 2.0)
if pid == 18:
    ops.node(211, 6.0, 6.0, 2.0)
if pid == 22:
    ops.node(211, 6.0, 6.0, 2.0)
if pid == 23:
    ops.node(211, 6.0, 6.0, 2.0)
if pid == 17:
    ops.node(212, 7.999999999999996, 6.0, 1.999999999999998)
if pid == 18:
    ops.node(212, 7.999999999999996, 6.0, 1.999999999999998)
if pid == 22:
    ops.node(212, 7.999999999999996, 6.0, 1.999999999999998)
if pid == 23:
    ops.node(212, 7.999999999999996, 6.0, 1.999999999999998)
if pid == 18:
    ops.node(213, 2.0, 7.999999999999993, 2.0)
if pid == 19:
    ops.node(213, 2.0, 7.999999999999993, 2.0)
if pid == 23:
    ops.node(213, 2.0, 7.999999999999993, 2.0)
if pid == 24:
    ops.node(213, 2.0, 7.999999999999993, 2.0)
if pid == 18:
    ops.node(214, 3.999999999999996, 8.0, 1.999999999999999)
if pid == 19:
    ops.node(214, 3.999999999999996, 8.0, 1.999999999999999)
if pid == 23:
    ops.node(214, 3.999999999999996, 8.0, 1.999999999999999)
if pid == 24:
    ops.node(214, 3.999999999999996, 8.0, 1.999999999999999)
if pid == 18:
    ops.node(215, 6.0, 8.0, 2.000000000000002)
if pid == 19:
    ops.node(215, 6.0, 8.0, 2.000000000000002)
if pid == 23:
    ops.node(215, 6.0, 8.0, 2.000000000000002)
if pid == 24:
    ops.node(215, 6.0, 8.0, 2.000000000000002)
if pid == 18:
    ops.node(216, 7.999999999999993, 8.0, 1.999999999999999)
if pid == 19:
    ops.node(216, 7.999999999999993, 8.0, 1.999999999999999)
if pid == 23:
    ops.node(216, 7.999999999999993, 8.0, 1.999999999999999)
if pid == 24:
    ops.node(216, 7.999999999999993, 8.0, 1.999999999999999)
ops.model("basicBuilder","-ndm",3,"-ndf",3)
if pid == 20:
    ops.node(217, 0.0, 0.0, 1.0)
if pid == 15:
    ops.node(218, 0.0, 0.0, 3.0)
if pid == 10:
    ops.node(219, 0.0, 0.0, 5.0)
if pid == 5:
    ops.node(220, 0.0, 0.0, 7.0)
if pid == 0:
    ops.node(221, 0.0, 0.0, 9.0)
if pid == 0:
    ops.node(222, 0.0, 1.0, 10.0)
if pid == 1:
    ops.node(223, 0.0, 3.0, 10.0)
if pid == 2:
    ops.node(224, 0.0, 5.0, 10.0)
if pid == 3:
    ops.node(225, 0.0, 7.0, 10.0)
if pid == 4:
    ops.node(226, 0.0, 9.0, 10.0)
if pid == 24:
    ops.node(227, 0.0, 10.0, 1.0)
if pid == 19:
    ops.node(228, 0.0, 10.0, 3.0)
if pid == 14:
    ops.node(229, 0.0, 10.0, 5.0)
if pid == 9:
    ops.node(230, 0.0, 10.0, 7.0)
if pid == 4:
    ops.node(231, 0.0, 10.0, 9.0)
if pid == 20:
    ops.node(232, 0.0, 1.0, 0.0)
if pid == 21:
    ops.node(233, 0.0, 3.0, 0.0)
if pid == 22:
    ops.node(234, 0.0, 5.0, 0.0)
if pid == 23:
    ops.node(235, 0.0, 7.0, 0.0)
if pid == 24:
    ops.node(236, 0.0, 9.0, 0.0)
if pid == 20:
    ops.node(237, 10.0, 0.0, 1.0)
if pid == 15:
    ops.node(238, 10.0, 0.0, 3.0)
if pid == 10:
    ops.node(239, 10.0, 0.0, 5.0)
if pid == 5:
    ops.node(240, 10.0, 0.0, 7.0)
if pid == 0:
    ops.node(241, 10.0, 0.0, 9.0)
if pid == 0:
    ops.node(242, 10.0, 1.0, 10.0)
if pid == 1:
    ops.node(243, 10.0, 3.0, 10.0)
if pid == 2:
    ops.node(244, 10.0, 5.0, 10.0)
if pid == 3:
    ops.node(245, 10.0, 7.0, 10.0)
if pid == 4:
    ops.node(246, 10.0, 9.0, 10.0)
if pid == 24:
    ops.node(247, 10.0, 10.0, 1.0)
if pid == 19:
    ops.node(248, 10.0, 10.0, 3.0)
if pid == 14:
    ops.node(249, 10.0, 10.0, 5.0)
if pid == 9:
    ops.node(250, 10.0, 10.0, 7.0)
if pid == 4:
    ops.node(251, 10.0, 10.0, 9.0)
if pid == 20:
    ops.node(252, 10.0, 1.0, 0.0)
if pid == 21:
    ops.node(253, 10.0, 3.0, 0.0)
if pid == 22:
    ops.node(254, 10.0, 5.0, 0.0)
if pid == 23:
    ops.node(255, 10.0, 7.0, 0.0)
if pid == 24:
    ops.node(256, 10.0, 9.0, 0.0)
if pid == 20:
    ops.node(257, 1.0, 0.0, 0.0)
if pid == 20:
    ops.node(258, 3.0, 0.0, 0.0)
if pid == 20:
    ops.node(259, 5.0, 0.0, 0.0)
if pid == 20:
    ops.node(260, 7.0, 0.0, 0.0)
if pid == 20:
    ops.node(261, 9.0, 0.0, 0.0)
if pid == 0:
    ops.node(262, 1.0, 0.0, 10.0)
if pid == 0:
    ops.node(263, 3.0, 0.0, 10.0)
if pid == 0:
    ops.node(264, 5.0, 0.0, 10.0)
if pid == 0:
    ops.node(265, 7.0, 0.0, 10.0)
if pid == 0:
    ops.node(266, 9.0, 0.0, 10.0)
if pid == 24:
    ops.node(267, 1.0, 10.0, 0.0)
if pid == 24:
    ops.node(268, 3.0, 10.0, 0.0)
if pid == 24:
    ops.node(269, 5.0, 10.0, 0.0)
if pid == 24:
    ops.node(270, 7.0, 10.0, 0.0)
if pid == 24:
    ops.node(271, 9.0, 10.0, 0.0)
if pid == 4:
    ops.node(272, 1.0, 10.0, 10.0)
if pid == 4:
    ops.node(273, 3.0, 10.0, 10.0)
if pid == 4:
    ops.node(274, 5.0, 10.0, 10.0)
if pid == 4:
    ops.node(275, 7.0, 10.0, 10.0)
if pid == 4:
    ops.node(276, 9.0, 10.0, 10.0)
if pid == 15:
    ops.node(277, 0.0, 0.9999999999999998, 2.0)
if pid == 20:
    ops.node(277, 0.0, 0.9999999999999998, 2.0)
if pid == 20:
    ops.node(278, 0.0, 2.0, 0.9999999999999998)
if pid == 21:
    ops.node(278, 0.0, 2.0, 0.9999999999999998)
if pid == 16:
    ops.node(279, 0.0, 2.999999999999999, 2.0)
if pid == 21:
    ops.node(279, 0.0, 2.999999999999999, 2.0)
if pid == 21:
    ops.node(280, 0.0, 4.0, 1.0)
if pid == 22:
    ops.node(280, 0.0, 4.0, 1.0)
if pid == 17:
    ops.node(281, 0.0, 5.0, 2.0)
if pid == 22:
    ops.node(281, 0.0, 5.0, 2.0)
if pid == 22:
    ops.node(282, 0.0, 6.0, 1.0)
if pid == 23:
    ops.node(282, 0.0, 6.0, 1.0)
if pid == 18:
    ops.node(283, 0.0, 6.999999999999999, 2.0)
if pid == 23:
    ops.node(283, 0.0, 6.999999999999999, 2.0)
if pid == 23:
    ops.node(284, 0.0, 7.999999999999999, 1.0)
if pid == 24:
    ops.node(284, 0.0, 7.999999999999999, 1.0)
if pid == 19:
    ops.node(285, 0.0, 9.0, 2.0)
if pid == 24:
    ops.node(285, 0.0, 9.0, 2.0)
if pid == 10:
    ops.node(286, 0.0, 1.0, 4.0)
if pid == 15:
    ops.node(286, 0.0, 1.0, 4.0)
if pid == 15:
    ops.node(287, 0.0, 2.0, 2.999999999999999)
if pid == 16:
    ops.node(287, 0.0, 2.0, 2.999999999999999)
if pid == 11:
    ops.node(288, 0.0, 3.0, 4.0)
if pid == 16:
    ops.node(288, 0.0, 3.0, 4.0)
if pid == 16:
    ops.node(289, 0.0, 4.0, 3.0)
if pid == 17:
    ops.node(289, 0.0, 4.0, 3.0)
if pid == 12:
    ops.node(290, 0.0, 5.0, 4.0)
if pid == 17:
    ops.node(290, 0.0, 5.0, 4.0)
if pid == 17:
    ops.node(291, 0.0, 6.0, 3.0)
if pid == 18:
    ops.node(291, 0.0, 6.0, 3.0)
if pid == 13:
    ops.node(292, 0.0, 7.0, 4.0)
if pid == 18:
    ops.node(292, 0.0, 7.0, 4.0)
if pid == 18:
    ops.node(293, 0.0, 7.999999999999999, 3.0)
if pid == 19:
    ops.node(293, 0.0, 7.999999999999999, 3.0)
if pid == 14:
    ops.node(294, 0.0, 9.0, 4.0)
if pid == 19:
    ops.node(294, 0.0, 9.0, 4.0)
if pid == 5:
    ops.node(295, 0.0, 1.0, 6.0)
if pid == 10:
    ops.node(295, 0.0, 1.0, 6.0)
if pid == 10:
    ops.node(296, 0.0, 2.0, 5.0)
if pid == 11:
    ops.node(296, 0.0, 2.0, 5.0)
if pid == 6:
    ops.node(297, 0.0, 3.0, 6.0)
if pid == 11:
    ops.node(297, 0.0, 3.0, 6.0)
if pid == 11:
    ops.node(298, 0.0, 4.0, 5.0)
if pid == 12:
    ops.node(298, 0.0, 4.0, 5.0)
if pid == 7:
    ops.node(299, 0.0, 5.0, 6.0)
if pid == 12:
    ops.node(299, 0.0, 5.0, 6.0)
if pid == 12:
    ops.node(300, 0.0, 6.0, 5.0)
if pid == 13:
    ops.node(300, 0.0, 6.0, 5.0)
if pid == 8:
    ops.node(301, 0.0, 7.0, 6.0)
if pid == 13:
    ops.node(301, 0.0, 7.0, 6.0)
if pid == 13:
    ops.node(302, 0.0, 8.0, 5.0)
if pid == 14:
    ops.node(302, 0.0, 8.0, 5.0)
if pid == 9:
    ops.node(303, 0.0, 9.0, 6.0)
if pid == 14:
    ops.node(303, 0.0, 9.0, 6.0)
if pid == 0:
    ops.node(304, 0.0, 1.0, 7.999999999999999)
if pid == 5:
    ops.node(304, 0.0, 1.0, 7.999999999999999)
if pid == 5:
    ops.node(305, 0.0, 2.0, 6.999999999999999)
if pid == 6:
    ops.node(305, 0.0, 2.0, 6.999999999999999)
if pid == 1:
    ops.node(306, 0.0, 3.0, 7.999999999999999)
if pid == 6:
    ops.node(306, 0.0, 3.0, 7.999999999999999)
if pid == 6:
    ops.node(307, 0.0, 4.0, 7.0)
if pid == 7:
    ops.node(307, 0.0, 4.0, 7.0)
if pid == 2:
    ops.node(308, 0.0, 5.0, 8.0)
if pid == 7:
    ops.node(308, 0.0, 5.0, 8.0)
if pid == 7:
    ops.node(309, 0.0, 6.0, 7.0)
if pid == 8:
    ops.node(309, 0.0, 6.0, 7.0)
if pid == 3:
    ops.node(310, 0.0, 7.0, 8.0)
if pid == 8:
    ops.node(310, 0.0, 7.0, 8.0)
if pid == 8:
    ops.node(311, 0.0, 8.0, 7.0)
if pid == 9:
    ops.node(311, 0.0, 8.0, 7.0)
if pid == 4:
    ops.node(312, 0.0, 9.0, 8.0)
if pid == 9:
    ops.node(312, 0.0, 9.0, 8.0)
if pid == 0:
    ops.node(313, 0.0, 2.0, 9.0)
if pid == 1:
    ops.node(313, 0.0, 2.0, 9.0)
if pid == 1:
    ops.node(314, 0.0, 4.0, 9.0)
if pid == 2:
    ops.node(314, 0.0, 4.0, 9.0)
if pid == 2:
    ops.node(315, 0.0, 6.0, 9.0)
if pid == 3:
    ops.node(315, 0.0, 6.0, 9.0)
if pid == 3:
    ops.node(316, 0.0, 8.0, 9.0)
if pid == 4:
    ops.node(316, 0.0, 8.0, 9.0)
if pid == 0:
    ops.node(317, 10.0, 0.9999999999999998, 7.999999999999999)
if pid == 5:
    ops.node(317, 10.0, 0.9999999999999998, 7.999999999999999)
if pid == 0:
    ops.node(318, 10.0, 2.0, 9.0)
if pid == 1:
    ops.node(318, 10.0, 2.0, 9.0)
if pid == 1:
    ops.node(319, 10.0, 2.999999999999999, 7.999999999999999)
if pid == 6:
    ops.node(319, 10.0, 2.999999999999999, 7.999999999999999)
if pid == 1:
    ops.node(320, 10.0, 4.0, 9.0)
if pid == 2:
    ops.node(320, 10.0, 4.0, 9.0)
if pid == 2:
    ops.node(321, 10.0, 5.0, 8.0)
if pid == 7:
    ops.node(321, 10.0, 5.0, 8.0)
if pid == 2:
    ops.node(322, 10.0, 6.0, 9.0)
if pid == 3:
    ops.node(322, 10.0, 6.0, 9.0)
if pid == 3:
    ops.node(323, 10.0, 6.999999999999999, 8.0)
if pid == 8:
    ops.node(323, 10.0, 6.999999999999999, 8.0)
if pid == 3:
    ops.node(324, 10.0, 7.999999999999999, 9.0)
if pid == 4:
    ops.node(324, 10.0, 7.999999999999999, 9.0)
if pid == 4:
    ops.node(325, 10.0, 9.0, 8.0)
if pid == 9:
    ops.node(325, 10.0, 9.0, 8.0)
if pid == 5:
    ops.node(326, 10.0, 1.0, 6.0)
if pid == 10:
    ops.node(326, 10.0, 1.0, 6.0)
if pid == 5:
    ops.node(327, 10.0, 2.0, 6.999999999999999)
if pid == 6:
    ops.node(327, 10.0, 2.0, 6.999999999999999)
if pid == 6:
    ops.node(328, 10.0, 3.0, 6.0)
if pid == 11:
    ops.node(328, 10.0, 3.0, 6.0)
if pid == 6:
    ops.node(329, 10.0, 4.0, 7.0)
if pid == 7:
    ops.node(329, 10.0, 4.0, 7.0)
if pid == 7:
    ops.node(330, 10.0, 5.0, 6.0)
if pid == 12:
    ops.node(330, 10.0, 5.0, 6.0)
if pid == 7:
    ops.node(331, 10.0, 6.0, 7.0)
if pid == 8:
    ops.node(331, 10.0, 6.0, 7.0)
if pid == 8:
    ops.node(332, 10.0, 7.0, 6.0)
if pid == 13:
    ops.node(332, 10.0, 7.0, 6.0)
if pid == 8:
    ops.node(333, 10.0, 7.999999999999999, 7.0)
if pid == 9:
    ops.node(333, 10.0, 7.999999999999999, 7.0)
if pid == 9:
    ops.node(334, 10.0, 9.0, 6.0)
if pid == 14:
    ops.node(334, 10.0, 9.0, 6.0)
if pid == 10:
    ops.node(335, 10.0, 1.0, 4.0)
if pid == 15:
    ops.node(335, 10.0, 1.0, 4.0)
if pid == 10:
    ops.node(336, 10.0, 2.0, 5.0)
if pid == 11:
    ops.node(336, 10.0, 2.0, 5.0)
if pid == 11:
    ops.node(337, 10.0, 3.0, 4.0)
if pid == 16:
    ops.node(337, 10.0, 3.0, 4.0)
if pid == 11:
    ops.node(338, 10.0, 4.0, 5.0)
if pid == 12:
    ops.node(338, 10.0, 4.0, 5.0)
if pid == 12:
    ops.node(339, 10.0, 5.0, 4.0)
if pid == 17:
    ops.node(339, 10.0, 5.0, 4.0)
if pid == 12:
    ops.node(340, 10.0, 6.0, 5.0)
if pid == 13:
    ops.node(340, 10.0, 6.0, 5.0)
if pid == 13:
    ops.node(341, 10.0, 7.0, 4.0)
if pid == 18:
    ops.node(341, 10.0, 7.0, 4.0)
if pid == 13:
    ops.node(342, 10.0, 8.0, 5.0)
if pid == 14:
    ops.node(342, 10.0, 8.0, 5.0)
if pid == 14:
    ops.node(343, 10.0, 9.0, 4.0)
if pid == 19:
    ops.node(343, 10.0, 9.0, 4.0)
if pid == 15:
    ops.node(344, 10.0, 1.0, 2.0)
if pid == 20:
    ops.node(344, 10.0, 1.0, 2.0)
if pid == 15:
    ops.node(345, 10.0, 2.0, 3.0)
if pid == 16:
    ops.node(345, 10.0, 2.0, 3.0)
if pid == 16:
    ops.node(346, 10.0, 3.0, 2.0)
if pid == 21:
    ops.node(346, 10.0, 3.0, 2.0)
if pid == 16:
    ops.node(347, 10.0, 4.0, 3.0)
if pid == 17:
    ops.node(347, 10.0, 4.0, 3.0)
if pid == 17:
    ops.node(348, 10.0, 5.0, 2.0)
if pid == 22:
    ops.node(348, 10.0, 5.0, 2.0)
if pid == 17:
    ops.node(349, 10.0, 6.0, 3.0)
if pid == 18:
    ops.node(349, 10.0, 6.0, 3.0)
if pid == 18:
    ops.node(350, 10.0, 7.0, 2.0)
if pid == 23:
    ops.node(350, 10.0, 7.0, 2.0)
if pid == 18:
    ops.node(351, 10.0, 8.0, 3.0)
if pid == 19:
    ops.node(351, 10.0, 8.0, 3.0)
if pid == 19:
    ops.node(352, 10.0, 9.0, 2.0)
if pid == 24:
    ops.node(352, 10.0, 9.0, 2.0)
if pid == 20:
    ops.node(353, 10.0, 2.0, 1.0)
if pid == 21:
    ops.node(353, 10.0, 2.0, 1.0)
if pid == 21:
    ops.node(354, 10.0, 4.0, 1.0)
if pid == 22:
    ops.node(354, 10.0, 4.0, 1.0)
if pid == 22:
    ops.node(355, 10.0, 6.0, 1.0)
if pid == 23:
    ops.node(355, 10.0, 6.0, 1.0)
if pid == 23:
    ops.node(356, 10.0, 8.0, 1.0)
if pid == 24:
    ops.node(356, 10.0, 8.0, 1.0)
if pid == 20:
    ops.node(357, 2.0, 0.0, 0.9999999999999998)
if pid == 15:
    ops.node(358, 0.9999999999999998, 0.0, 2.0)
if pid == 20:
    ops.node(358, 0.9999999999999998, 0.0, 2.0)
if pid == 15:
    ops.node(359, 2.0, 0.0, 2.999999999999999)
if pid == 10:
    ops.node(360, 1.0, 0.0, 4.0)
if pid == 15:
    ops.node(360, 1.0, 0.0, 4.0)
if pid == 10:
    ops.node(361, 2.0, 0.0, 5.0)
if pid == 5:
    ops.node(362, 1.0, 0.0, 6.0)
if pid == 10:
    ops.node(362, 1.0, 0.0, 6.0)
if pid == 5:
    ops.node(363, 2.0, 0.0, 6.999999999999999)
if pid == 0:
    ops.node(364, 1.0, 0.0, 7.999999999999999)
if pid == 5:
    ops.node(364, 1.0, 0.0, 7.999999999999999)
if pid == 0:
    ops.node(365, 2.0, 0.0, 9.0)
if pid == 20:
    ops.node(366, 4.0, 0.0, 1.0)
if pid == 15:
    ops.node(367, 2.999999999999999, 0.0, 2.0)
if pid == 20:
    ops.node(367, 2.999999999999999, 0.0, 2.0)
if pid == 15:
    ops.node(368, 4.0, 0.0, 3.0)
if pid == 10:
    ops.node(369, 3.0, 0.0, 4.0)
if pid == 15:
    ops.node(369, 3.0, 0.0, 4.0)
if pid == 10:
    ops.node(370, 4.0, 0.0, 5.0)
if pid == 5:
    ops.node(371, 3.0, 0.0, 6.0)
if pid == 10:
    ops.node(371, 3.0, 0.0, 6.0)
if pid == 5:
    ops.node(372, 4.0, 0.0, 7.0)
if pid == 0:
    ops.node(373, 3.0, 0.0, 7.999999999999999)
if pid == 5:
    ops.node(373, 3.0, 0.0, 7.999999999999999)
if pid == 0:
    ops.node(374, 4.0, 0.0, 9.0)
if pid == 20:
    ops.node(375, 6.0, 0.0, 1.0)
if pid == 15:
    ops.node(376, 5.0, 0.0, 2.0)
if pid == 20:
    ops.node(376, 5.0, 0.0, 2.0)
if pid == 15:
    ops.node(377, 6.0, 0.0, 3.0)
if pid == 10:
    ops.node(378, 5.0, 0.0, 4.0)
if pid == 15:
    ops.node(378, 5.0, 0.0, 4.0)
if pid == 10:
    ops.node(379, 6.0, 0.0, 5.0)
if pid == 5:
    ops.node(380, 5.0, 0.0, 6.0)
if pid == 10:
    ops.node(380, 5.0, 0.0, 6.0)
if pid == 5:
    ops.node(381, 6.0, 0.0, 7.0)
if pid == 0:
    ops.node(382, 5.0, 0.0, 8.0)
if pid == 5:
    ops.node(382, 5.0, 0.0, 8.0)
if pid == 0:
    ops.node(383, 6.0, 0.0, 9.0)
if pid == 20:
    ops.node(384, 7.999999999999999, 0.0, 1.0)
if pid == 15:
    ops.node(385, 6.999999999999999, 0.0, 2.0)
if pid == 20:
    ops.node(385, 6.999999999999999, 0.0, 2.0)
if pid == 15:
    ops.node(386, 7.999999999999999, 0.0, 3.0)
if pid == 10:
    ops.node(387, 7.0, 0.0, 4.0)
if pid == 15:
    ops.node(387, 7.0, 0.0, 4.0)
if pid == 10:
    ops.node(388, 8.0, 0.0, 5.0)
if pid == 5:
    ops.node(389, 7.0, 0.0, 6.0)
if pid == 10:
    ops.node(389, 7.0, 0.0, 6.0)
if pid == 5:
    ops.node(390, 8.0, 0.0, 7.0)
if pid == 0:
    ops.node(391, 7.0, 0.0, 8.0)
if pid == 5:
    ops.node(391, 7.0, 0.0, 8.0)
if pid == 0:
    ops.node(392, 8.0, 0.0, 9.0)
if pid == 15:
    ops.node(393, 9.0, 0.0, 2.0)
if pid == 20:
    ops.node(393, 9.0, 0.0, 2.0)
if pid == 10:
    ops.node(394, 9.0, 0.0, 4.0)
if pid == 15:
    ops.node(394, 9.0, 0.0, 4.0)
if pid == 5:
    ops.node(395, 9.0, 0.0, 6.0)
if pid == 10:
    ops.node(395, 9.0, 0.0, 6.0)
if pid == 0:
    ops.node(396, 9.0, 0.0, 8.0)
if pid == 5:
    ops.node(396, 9.0, 0.0, 8.0)
if pid == 24:
    ops.node(397, 7.999999999999999, 10.0, 0.9999999999999998)
if pid == 19:
    ops.node(398, 9.0, 10.0, 2.0)
if pid == 24:
    ops.node(398, 9.0, 10.0, 2.0)
if pid == 19:
    ops.node(399, 7.999999999999999, 10.0, 2.999999999999999)
if pid == 14:
    ops.node(400, 9.0, 10.0, 4.0)
if pid == 19:
    ops.node(400, 9.0, 10.0, 4.0)
if pid == 14:
    ops.node(401, 8.0, 10.0, 5.0)
if pid == 9:
    ops.node(402, 9.0, 10.0, 6.0)
if pid == 14:
    ops.node(402, 9.0, 10.0, 6.0)
if pid == 9:
    ops.node(403, 8.0, 10.0, 6.999999999999999)
if pid == 4:
    ops.node(404, 9.0, 10.0, 7.999999999999999)
if pid == 9:
    ops.node(404, 9.0, 10.0, 7.999999999999999)
if pid == 4:
    ops.node(405, 8.0, 10.0, 9.0)
if pid == 24:
    ops.node(406, 6.0, 10.0, 1.0)
if pid == 19:
    ops.node(407, 6.999999999999999, 10.0, 2.0)
if pid == 24:
    ops.node(407, 6.999999999999999, 10.0, 2.0)
if pid == 19:
    ops.node(408, 6.0, 10.0, 3.0)
if pid == 14:
    ops.node(409, 7.0, 10.0, 4.0)
if pid == 19:
    ops.node(409, 7.0, 10.0, 4.0)
if pid == 14:
    ops.node(410, 6.0, 10.0, 5.0)
if pid == 9:
    ops.node(411, 7.0, 10.0, 6.0)
if pid == 14:
    ops.node(411, 7.0, 10.0, 6.0)
if pid == 9:
    ops.node(412, 6.0, 10.0, 7.0)
if pid == 4:
    ops.node(413, 7.0, 10.0, 7.999999999999999)
if pid == 9:
    ops.node(413, 7.0, 10.0, 7.999999999999999)
if pid == 4:
    ops.node(414, 6.0, 10.0, 9.0)
if pid == 24:
    ops.node(415, 4.0, 10.0, 1.0)
if pid == 19:
    ops.node(416, 5.0, 10.0, 2.0)
if pid == 24:
    ops.node(416, 5.0, 10.0, 2.0)
if pid == 19:
    ops.node(417, 4.0, 10.0, 3.0)
if pid == 14:
    ops.node(418, 5.0, 10.0, 4.0)
if pid == 19:
    ops.node(418, 5.0, 10.0, 4.0)
if pid == 14:
    ops.node(419, 4.0, 10.0, 5.0)
if pid == 9:
    ops.node(420, 5.0, 10.0, 6.0)
if pid == 14:
    ops.node(420, 5.0, 10.0, 6.0)
if pid == 9:
    ops.node(421, 4.0, 10.0, 7.0)
if pid == 4:
    ops.node(422, 5.0, 10.0, 8.0)
if pid == 9:
    ops.node(422, 5.0, 10.0, 8.0)
if pid == 4:
    ops.node(423, 4.0, 10.0, 9.0)
if pid == 24:
    ops.node(424, 2.0, 10.0, 1.0)
if pid == 19:
    ops.node(425, 3.0, 10.0, 2.0)
if pid == 24:
    ops.node(425, 3.0, 10.0, 2.0)
if pid == 19:
    ops.node(426, 2.0, 10.0, 3.0)
if pid == 14:
    ops.node(427, 3.0, 10.0, 4.0)
if pid == 19:
    ops.node(427, 3.0, 10.0, 4.0)
if pid == 14:
    ops.node(428, 2.0, 10.0, 5.0)
if pid == 9:
    ops.node(429, 3.0, 10.0, 6.0)
if pid == 14:
    ops.node(429, 3.0, 10.0, 6.0)
if pid == 9:
    ops.node(430, 2.0, 10.0, 7.0)
if pid == 4:
    ops.node(431, 3.0, 10.0, 8.0)
if pid == 9:
    ops.node(431, 3.0, 10.0, 8.0)
if pid == 4:
    ops.node(432, 2.0, 10.0, 9.0)
if pid == 19:
    ops.node(433, 1.0, 10.0, 2.0)
if pid == 24:
    ops.node(433, 1.0, 10.0, 2.0)
if pid == 14:
    ops.node(434, 1.0, 10.0, 4.0)
if pid == 19:
    ops.node(434, 1.0, 10.0, 4.0)
if pid == 9:
    ops.node(435, 1.0, 10.0, 6.0)
if pid == 14:
    ops.node(435, 1.0, 10.0, 6.0)
if pid == 4:
    ops.node(436, 1.0, 10.0, 8.0)
if pid == 9:
    ops.node(436, 1.0, 10.0, 8.0)
if pid == 20:
    ops.node(437, 0.9999999999999998, 2.0, 0.0)
if pid == 21:
    ops.node(437, 0.9999999999999998, 2.0, 0.0)
if pid == 20:
    ops.node(438, 2.0, 0.9999999999999998, 0.0)
if pid == 20:
    ops.node(439, 2.999999999999999, 2.0, 0.0)
if pid == 21:
    ops.node(439, 2.999999999999999, 2.0, 0.0)
if pid == 20:
    ops.node(440, 4.0, 1.0, 0.0)
if pid == 20:
    ops.node(441, 5.0, 2.0, 0.0)
if pid == 21:
    ops.node(441, 5.0, 2.0, 0.0)
if pid == 20:
    ops.node(442, 6.0, 1.0, 0.0)
if pid == 20:
    ops.node(443, 6.999999999999999, 2.0, 0.0)
if pid == 21:
    ops.node(443, 6.999999999999999, 2.0, 0.0)
if pid == 20:
    ops.node(444, 7.999999999999999, 1.0, 0.0)
if pid == 20:
    ops.node(445, 9.0, 2.0, 0.0)
if pid == 21:
    ops.node(445, 9.0, 2.0, 0.0)
if pid == 21:
    ops.node(446, 1.0, 4.0, 0.0)
if pid == 22:
    ops.node(446, 1.0, 4.0, 0.0)
if pid == 21:
    ops.node(447, 2.0, 2.999999999999999, 0.0)
if pid == 21:
    ops.node(448, 3.0, 4.0, 0.0)
if pid == 22:
    ops.node(448, 3.0, 4.0, 0.0)
if pid == 21:
    ops.node(449, 4.0, 3.0, 0.0)
if pid == 21:
    ops.node(450, 5.0, 4.0, 0.0)
if pid == 22:
    ops.node(450, 5.0, 4.0, 0.0)
if pid == 21:
    ops.node(451, 6.0, 3.0, 0.0)
if pid == 21:
    ops.node(452, 7.0, 4.0, 0.0)
if pid == 22:
    ops.node(452, 7.0, 4.0, 0.0)
if pid == 21:
    ops.node(453, 7.999999999999999, 3.0, 0.0)
if pid == 21:
    ops.node(454, 9.0, 4.0, 0.0)
if pid == 22:
    ops.node(454, 9.0, 4.0, 0.0)
if pid == 22:
    ops.node(455, 1.0, 6.0, 0.0)
if pid == 23:
    ops.node(455, 1.0, 6.0, 0.0)
if pid == 22:
    ops.node(456, 2.0, 5.0, 0.0)
if pid == 22:
    ops.node(457, 3.0, 6.0, 0.0)
if pid == 23:
    ops.node(457, 3.0, 6.0, 0.0)
if pid == 22:
    ops.node(458, 4.0, 5.0, 0.0)
if pid == 22:
    ops.node(459, 5.0, 6.0, 0.0)
if pid == 23:
    ops.node(459, 5.0, 6.0, 0.0)
if pid == 22:
    ops.node(460, 6.0, 5.0, 0.0)
if pid == 22:
    ops.node(461, 7.0, 6.0, 0.0)
if pid == 23:
    ops.node(461, 7.0, 6.0, 0.0)
if pid == 22:
    ops.node(462, 8.0, 5.0, 0.0)
if pid == 22:
    ops.node(463, 9.0, 6.0, 0.0)
if pid == 23:
    ops.node(463, 9.0, 6.0, 0.0)
if pid == 23:
    ops.node(464, 1.0, 7.999999999999999, 0.0)
if pid == 24:
    ops.node(464, 1.0, 7.999999999999999, 0.0)
if pid == 23:
    ops.node(465, 2.0, 6.999999999999999, 0.0)
if pid == 23:
    ops.node(466, 3.0, 7.999999999999999, 0.0)
if pid == 24:
    ops.node(466, 3.0, 7.999999999999999, 0.0)
if pid == 23:
    ops.node(467, 4.0, 7.0, 0.0)
if pid == 23:
    ops.node(468, 5.0, 8.0, 0.0)
if pid == 24:
    ops.node(468, 5.0, 8.0, 0.0)
if pid == 23:
    ops.node(469, 6.0, 7.0, 0.0)
if pid == 23:
    ops.node(470, 7.0, 8.0, 0.0)
if pid == 24:
    ops.node(470, 7.0, 8.0, 0.0)
if pid == 23:
    ops.node(471, 8.0, 7.0, 0.0)
if pid == 23:
    ops.node(472, 9.0, 8.0, 0.0)
if pid == 24:
    ops.node(472, 9.0, 8.0, 0.0)
if pid == 24:
    ops.node(473, 2.0, 9.0, 0.0)
if pid == 24:
    ops.node(474, 4.0, 9.0, 0.0)
if pid == 24:
    ops.node(475, 6.0, 9.0, 0.0)
if pid == 24:
    ops.node(476, 8.0, 9.0, 0.0)
if pid == 3:
    ops.node(477, 0.9999999999999998, 7.999999999999999, 10.0)
if pid == 4:
    ops.node(477, 0.9999999999999998, 7.999999999999999, 10.0)
if pid == 4:
    ops.node(478, 2.0, 9.0, 10.0)
if pid == 3:
    ops.node(479, 2.999999999999999, 7.999999999999999, 10.0)
if pid == 4:
    ops.node(479, 2.999999999999999, 7.999999999999999, 10.0)
if pid == 4:
    ops.node(480, 4.0, 9.0, 10.0)
if pid == 3:
    ops.node(481, 5.0, 8.0, 10.0)
if pid == 4:
    ops.node(481, 5.0, 8.0, 10.0)
if pid == 4:
    ops.node(482, 6.0, 9.0, 10.0)
if pid == 3:
    ops.node(483, 6.999999999999999, 8.0, 10.0)
if pid == 4:
    ops.node(483, 6.999999999999999, 8.0, 10.0)
if pid == 4:
    ops.node(484, 7.999999999999999, 9.0, 10.0)
if pid == 3:
    ops.node(485, 9.0, 8.0, 10.0)
if pid == 4:
    ops.node(485, 9.0, 8.0, 10.0)
if pid == 2:
    ops.node(486, 1.0, 6.0, 10.0)
if pid == 3:
    ops.node(486, 1.0, 6.0, 10.0)
if pid == 3:
    ops.node(487, 2.0, 6.999999999999999, 10.0)
if pid == 2:
    ops.node(488, 3.0, 6.0, 10.0)
if pid == 3:
    ops.node(488, 3.0, 6.0, 10.0)
if pid == 3:
    ops.node(489, 4.0, 7.0, 10.0)
if pid == 2:
    ops.node(490, 5.0, 6.0, 10.0)
if pid == 3:
    ops.node(490, 5.0, 6.0, 10.0)
if pid == 3:
    ops.node(491, 6.0, 7.0, 10.0)
if pid == 2:
    ops.node(492, 7.0, 6.0, 10.0)
if pid == 3:
    ops.node(492, 7.0, 6.0, 10.0)
if pid == 3:
    ops.node(493, 7.999999999999999, 7.0, 10.0)
if pid == 2:
    ops.node(494, 9.0, 6.0, 10.0)
if pid == 3:
    ops.node(494, 9.0, 6.0, 10.0)
if pid == 1:
    ops.node(495, 1.0, 4.0, 10.0)
if pid == 2:
    ops.node(495, 1.0, 4.0, 10.0)
if pid == 2:
    ops.node(496, 2.0, 5.0, 10.0)
if pid == 1:
    ops.node(497, 3.0, 4.0, 10.0)
if pid == 2:
    ops.node(497, 3.0, 4.0, 10.0)
if pid == 2:
    ops.node(498, 4.0, 5.0, 10.0)
if pid == 1:
    ops.node(499, 5.0, 4.0, 10.0)
if pid == 2:
    ops.node(499, 5.0, 4.0, 10.0)
if pid == 2:
    ops.node(500, 6.0, 5.0, 10.0)
if pid == 1:
    ops.node(501, 7.0, 4.0, 10.0)
if pid == 2:
    ops.node(501, 7.0, 4.0, 10.0)
if pid == 2:
    ops.node(502, 8.0, 5.0, 10.0)
if pid == 1:
    ops.node(503, 9.0, 4.0, 10.0)
if pid == 2:
    ops.node(503, 9.0, 4.0, 10.0)
if pid == 0:
    ops.node(504, 1.0, 2.0, 10.0)
if pid == 1:
    ops.node(504, 1.0, 2.0, 10.0)
if pid == 1:
    ops.node(505, 2.0, 3.0, 10.0)
if pid == 0:
    ops.node(506, 3.0, 2.0, 10.0)
if pid == 1:
    ops.node(506, 3.0, 2.0, 10.0)
if pid == 1:
    ops.node(507, 4.0, 3.0, 10.0)
if pid == 0:
    ops.node(508, 5.0, 2.0, 10.0)
if pid == 1:
    ops.node(508, 5.0, 2.0, 10.0)
if pid == 1:
    ops.node(509, 6.0, 3.0, 10.0)
if pid == 0:
    ops.node(510, 7.0, 2.0, 10.0)
if pid == 1:
    ops.node(510, 7.0, 2.0, 10.0)
if pid == 1:
    ops.node(511, 8.0, 3.0, 10.0)
if pid == 0:
    ops.node(512, 9.0, 2.0, 10.0)
if pid == 1:
    ops.node(512, 9.0, 2.0, 10.0)
if pid == 0:
    ops.node(513, 2.0, 1.0, 10.0)
if pid == 0:
    ops.node(514, 4.0, 1.0, 10.0)
if pid == 0:
    ops.node(515, 6.0, 1.0, 10.0)
if pid == 0:
    ops.node(516, 8.0, 1.0, 10.0)
if pid == 0:
    ops.node(517, 2.0, 2.0, 8.999999999999998)
if pid == 1:
    ops.node(517, 2.0, 2.0, 8.999999999999998)
if pid == 0:
    ops.node(518, 2.0, 1.0, 7.999999999999997)
if pid == 5:
    ops.node(518, 2.0, 1.0, 7.999999999999997)
if pid == 0:
    ops.node(519, 1.0, 2.0, 7.999999999999997)
if pid == 1:
    ops.node(519, 1.0, 2.0, 7.999999999999997)
if pid == 5:
    ops.node(519, 1.0, 2.0, 7.999999999999997)
if pid == 6:
    ops.node(519, 1.0, 2.0, 7.999999999999997)
if pid == 0:
    ops.node(520, 4.0, 2.0, 8.999999999999998)
if pid == 1:
    ops.node(520, 4.0, 2.0, 8.999999999999998)
if pid == 0:
    ops.node(521, 4.0, 1.0, 7.999999999999998)
if pid == 5:
    ops.node(521, 4.0, 1.0, 7.999999999999998)
if pid == 0:
    ops.node(522, 3.0, 2.0, 7.999999999999996)
if pid == 1:
    ops.node(522, 3.0, 2.0, 7.999999999999996)
if pid == 5:
    ops.node(522, 3.0, 2.0, 7.999999999999996)
if pid == 6:
    ops.node(522, 3.0, 2.0, 7.999999999999996)
if pid == 0:
    ops.node(523, 6.0, 2.0, 8.999999999999998)
if pid == 1:
    ops.node(523, 6.0, 2.0, 8.999999999999998)
if pid == 0:
    ops.node(524, 6.0, 1.0, 7.999999999999998)
if pid == 5:
    ops.node(524, 6.0, 1.0, 7.999999999999998)
if pid == 0:
    ops.node(525, 5.0, 2.0, 7.999999999999996)
if pid == 1:
    ops.node(525, 5.0, 2.0, 7.999999999999996)
if pid == 5:
    ops.node(525, 5.0, 2.0, 7.999999999999996)
if pid == 6:
    ops.node(525, 5.0, 2.0, 7.999999999999996)
if pid == 0:
    ops.node(526, 8.0, 2.0, 8.999999999999998)
if pid == 1:
    ops.node(526, 8.0, 2.0, 8.999999999999998)
if pid == 0:
    ops.node(527, 8.0, 0.9999999999999996, 7.999999999999998)
if pid == 5:
    ops.node(527, 8.0, 0.9999999999999996, 7.999999999999998)
if pid == 0:
    ops.node(528, 7.0, 2.0, 7.999999999999996)
if pid == 1:
    ops.node(528, 7.0, 2.0, 7.999999999999996)
if pid == 5:
    ops.node(528, 7.0, 2.0, 7.999999999999996)
if pid == 6:
    ops.node(528, 7.0, 2.0, 7.999999999999996)
if pid == 0:
    ops.node(529, 9.0, 1.999999999999999, 7.999999999999997)
if pid == 1:
    ops.node(529, 9.0, 1.999999999999999, 7.999999999999997)
if pid == 5:
    ops.node(529, 9.0, 1.999999999999999, 7.999999999999997)
if pid == 6:
    ops.node(529, 9.0, 1.999999999999999, 7.999999999999997)
if pid == 1:
    ops.node(530, 2.0, 4.0, 9.0)
if pid == 2:
    ops.node(530, 2.0, 4.0, 9.0)
if pid == 1:
    ops.node(531, 2.0, 3.0, 7.999999999999998)
if pid == 6:
    ops.node(531, 2.0, 3.0, 7.999999999999998)
if pid == 1:
    ops.node(532, 1.0, 4.0, 8.0)
if pid == 2:
    ops.node(532, 1.0, 4.0, 8.0)
if pid == 6:
    ops.node(532, 1.0, 4.0, 8.0)
if pid == 7:
    ops.node(532, 1.0, 4.0, 8.0)
if pid == 1:
    ops.node(533, 4.0, 4.0, 9.0)
if pid == 2:
    ops.node(533, 4.0, 4.0, 9.0)
if pid == 1:
    ops.node(534, 4.0, 3.0, 7.999999999999998)
if pid == 6:
    ops.node(534, 4.0, 3.0, 7.999999999999998)
if pid == 1:
    ops.node(535, 3.0, 4.0, 8.0)
if pid == 2:
    ops.node(535, 3.0, 4.0, 8.0)
if pid == 6:
    ops.node(535, 3.0, 4.0, 8.0)
if pid == 7:
    ops.node(535, 3.0, 4.0, 8.0)
if pid == 1:
    ops.node(536, 6.0, 4.0, 9.0)
if pid == 2:
    ops.node(536, 6.0, 4.0, 9.0)
if pid == 1:
    ops.node(537, 6.0, 3.0, 7.999999999999998)
if pid == 6:
    ops.node(537, 6.0, 3.0, 7.999999999999998)
if pid == 1:
    ops.node(538, 5.0, 4.0, 8.0)
if pid == 2:
    ops.node(538, 5.0, 4.0, 8.0)
if pid == 6:
    ops.node(538, 5.0, 4.0, 8.0)
if pid == 7:
    ops.node(538, 5.0, 4.0, 8.0)
if pid == 1:
    ops.node(539, 8.0, 4.0, 9.000000000000002)
if pid == 2:
    ops.node(539, 8.0, 4.0, 9.000000000000002)
if pid == 1:
    ops.node(540, 8.0, 3.0, 8.0)
if pid == 6:
    ops.node(540, 8.0, 3.0, 8.0)
if pid == 1:
    ops.node(541, 7.0, 4.0, 8.000000000000002)
if pid == 2:
    ops.node(541, 7.0, 4.0, 8.000000000000002)
if pid == 6:
    ops.node(541, 7.0, 4.0, 8.000000000000002)
if pid == 7:
    ops.node(541, 7.0, 4.0, 8.000000000000002)
if pid == 1:
    ops.node(542, 9.0, 4.0, 8.000000000000002)
if pid == 2:
    ops.node(542, 9.0, 4.0, 8.000000000000002)
if pid == 6:
    ops.node(542, 9.0, 4.0, 8.000000000000002)
if pid == 7:
    ops.node(542, 9.0, 4.0, 8.000000000000002)
if pid == 2:
    ops.node(543, 2.0, 5.999999999999998, 9.0)
if pid == 3:
    ops.node(543, 2.0, 5.999999999999998, 9.0)
if pid == 2:
    ops.node(544, 2.0, 4.999999999999998, 8.0)
if pid == 7:
    ops.node(544, 2.0, 4.999999999999998, 8.0)
if pid == 2:
    ops.node(545, 1.0, 5.999999999999998, 8.0)
if pid == 3:
    ops.node(545, 1.0, 5.999999999999998, 8.0)
if pid == 7:
    ops.node(545, 1.0, 5.999999999999998, 8.0)
if pid == 8:
    ops.node(545, 1.0, 5.999999999999998, 8.0)
if pid == 2:
    ops.node(546, 4.0, 6.0, 9.0)
if pid == 3:
    ops.node(546, 4.0, 6.0, 9.0)
if pid == 2:
    ops.node(547, 4.0, 5.0, 8.0)
if pid == 7:
    ops.node(547, 4.0, 5.0, 8.0)
if pid == 2:
    ops.node(548, 3.0, 5.999999999999998, 8.0)
if pid == 3:
    ops.node(548, 3.0, 5.999999999999998, 8.0)
if pid == 7:
    ops.node(548, 3.0, 5.999999999999998, 8.0)
if pid == 8:
    ops.node(548, 3.0, 5.999999999999998, 8.0)
if pid == 2:
    ops.node(549, 5.999999999999998, 6.0, 9.0)
if pid == 3:
    ops.node(549, 5.999999999999998, 6.0, 9.0)
if pid == 2:
    ops.node(550, 5.999999999999998, 5.0, 8.0)
if pid == 7:
    ops.node(550, 5.999999999999998, 5.0, 8.0)
if pid == 2:
    ops.node(551, 4.999999999999998, 6.0, 8.0)
if pid == 3:
    ops.node(551, 4.999999999999998, 6.0, 8.0)
if pid == 7:
    ops.node(551, 4.999999999999998, 6.0, 8.0)
if pid == 8:
    ops.node(551, 4.999999999999998, 6.0, 8.0)
if pid == 2:
    ops.node(552, 8.0, 5.999999999999998, 9.000000000000002)
if pid == 3:
    ops.node(552, 8.0, 5.999999999999998, 9.000000000000002)
if pid == 2:
    ops.node(553, 8.0, 4.999999999999998, 8.000000000000004)
if pid == 7:
    ops.node(553, 8.0, 4.999999999999998, 8.000000000000004)
if pid == 2:
    ops.node(554, 6.999999999999998, 5.999999999999998, 8.000000000000002)
if pid == 3:
    ops.node(554, 6.999999999999998, 5.999999999999998, 8.000000000000002)
if pid == 7:
    ops.node(554, 6.999999999999998, 5.999999999999998, 8.000000000000002)
if pid == 8:
    ops.node(554, 6.999999999999998, 5.999999999999998, 8.000000000000002)
if pid == 2:
    ops.node(555, 9.0, 5.999999999999998, 8.000000000000002)
if pid == 3:
    ops.node(555, 9.0, 5.999999999999998, 8.000000000000002)
if pid == 7:
    ops.node(555, 9.0, 5.999999999999998, 8.000000000000002)
if pid == 8:
    ops.node(555, 9.0, 5.999999999999998, 8.000000000000002)
if pid == 3:
    ops.node(556, 1.999999999999999, 7.999999999999999, 9.0)
if pid == 4:
    ops.node(556, 1.999999999999999, 7.999999999999999, 9.0)
if pid == 3:
    ops.node(557, 2.0, 6.999999999999998, 8.0)
if pid == 8:
    ops.node(557, 2.0, 6.999999999999998, 8.0)
if pid == 3:
    ops.node(558, 0.9999999999999996, 8.0, 8.0)
if pid == 4:
    ops.node(558, 0.9999999999999996, 8.0, 8.0)
if pid == 8:
    ops.node(558, 0.9999999999999996, 8.0, 8.0)
if pid == 9:
    ops.node(558, 0.9999999999999996, 8.0, 8.0)
if pid == 3:
    ops.node(559, 4.0, 8.0, 9.0)
if pid == 4:
    ops.node(559, 4.0, 8.0, 9.0)
if pid == 3:
    ops.node(560, 4.0, 7.0, 8.0)
if pid == 8:
    ops.node(560, 4.0, 7.0, 8.0)
if pid == 3:
    ops.node(561, 3.0, 8.0, 8.0)
if pid == 4:
    ops.node(561, 3.0, 8.0, 8.0)
if pid == 8:
    ops.node(561, 3.0, 8.0, 8.0)
if pid == 9:
    ops.node(561, 3.0, 8.0, 8.0)
if pid == 3:
    ops.node(562, 6.0, 8.0, 9.0)
if pid == 4:
    ops.node(562, 6.0, 8.0, 9.0)
if pid == 3:
    ops.node(563, 5.999999999999998, 7.0, 8.0)
if pid == 8:
    ops.node(563, 5.999999999999998, 7.0, 8.0)
if pid == 3:
    ops.node(564, 5.0, 8.0, 8.0)
if pid == 4:
    ops.node(564, 5.0, 8.0, 8.0)
if pid == 8:
    ops.node(564, 5.0, 8.0, 8.0)
if pid == 9:
    ops.node(564, 5.0, 8.0, 8.0)
if pid == 3:
    ops.node(565, 7.999999999999999, 8.0, 8.999999999999998)
if pid == 4:
    ops.node(565, 7.999999999999999, 8.0, 8.999999999999998)
if pid == 3:
    ops.node(566, 8.0, 6.999999999999998, 8.0)
if pid == 8:
    ops.node(566, 8.0, 6.999999999999998, 8.0)
if pid == 3:
    ops.node(567, 7.0, 8.0, 7.999999999999998)
if pid == 4:
    ops.node(567, 7.0, 8.0, 7.999999999999998)
if pid == 8:
    ops.node(567, 7.0, 8.0, 7.999999999999998)
if pid == 9:
    ops.node(567, 7.0, 8.0, 7.999999999999998)
if pid == 3:
    ops.node(568, 9.0, 7.999999999999999, 7.999999999999998)
if pid == 4:
    ops.node(568, 9.0, 7.999999999999999, 7.999999999999998)
if pid == 8:
    ops.node(568, 9.0, 7.999999999999999, 7.999999999999998)
if pid == 9:
    ops.node(568, 9.0, 7.999999999999999, 7.999999999999998)
if pid == 4:
    ops.node(569, 2.0, 9.0, 8.0)
if pid == 9:
    ops.node(569, 2.0, 9.0, 8.0)
if pid == 4:
    ops.node(570, 4.0, 9.0, 8.0)
if pid == 9:
    ops.node(570, 4.0, 9.0, 8.0)
if pid == 4:
    ops.node(571, 6.0, 9.0, 8.0)
if pid == 9:
    ops.node(571, 6.0, 9.0, 8.0)
if pid == 4:
    ops.node(572, 8.0, 9.0, 7.999999999999997)
if pid == 9:
    ops.node(572, 8.0, 9.0, 7.999999999999997)
if pid == 5:
    ops.node(573, 2.0, 2.0, 7.0)
if pid == 6:
    ops.node(573, 2.0, 2.0, 7.0)
if pid == 5:
    ops.node(574, 2.0, 1.0, 6.000000000000002)
if pid == 10:
    ops.node(574, 2.0, 1.0, 6.000000000000002)
if pid == 5:
    ops.node(575, 1.0, 2.0, 6.000000000000002)
if pid == 6:
    ops.node(575, 1.0, 2.0, 6.000000000000002)
if pid == 10:
    ops.node(575, 1.0, 2.0, 6.000000000000002)
if pid == 11:
    ops.node(575, 1.0, 2.0, 6.000000000000002)
if pid == 5:
    ops.node(576, 4.0, 2.0, 6.999999999999998)
if pid == 6:
    ops.node(576, 4.0, 2.0, 6.999999999999998)
if pid == 5:
    ops.node(577, 4.0, 1.0, 6.0)
if pid == 10:
    ops.node(577, 4.0, 1.0, 6.0)
if pid == 5:
    ops.node(578, 3.0, 2.0, 6.000000000000002)
if pid == 6:
    ops.node(578, 3.0, 2.0, 6.000000000000002)
if pid == 10:
    ops.node(578, 3.0, 2.0, 6.000000000000002)
if pid == 11:
    ops.node(578, 3.0, 2.0, 6.000000000000002)
if pid == 5:
    ops.node(579, 6.0, 2.0, 6.999999999999998)
if pid == 6:
    ops.node(579, 6.0, 2.0, 6.999999999999998)
if pid == 5:
    ops.node(580, 6.0, 1.0, 6.0)
if pid == 10:
    ops.node(580, 6.0, 1.0, 6.0)
if pid == 5:
    ops.node(581, 5.0, 2.0, 6.0)
if pid == 6:
    ops.node(581, 5.0, 2.0, 6.0)
if pid == 10:
    ops.node(581, 5.0, 2.0, 6.0)
if pid == 11:
    ops.node(581, 5.0, 2.0, 6.0)
if pid == 5:
    ops.node(582, 8.0, 2.0, 6.999999999999998)
if pid == 6:
    ops.node(582, 8.0, 2.0, 6.999999999999998)
if pid == 5:
    ops.node(583, 8.0, 1.0, 6.0)
if pid == 10:
    ops.node(583, 8.0, 1.0, 6.0)
if pid == 5:
    ops.node(584, 7.0, 2.0, 6.0)
if pid == 6:
    ops.node(584, 7.0, 2.0, 6.0)
if pid == 10:
    ops.node(584, 7.0, 2.0, 6.0)
if pid == 11:
    ops.node(584, 7.0, 2.0, 6.0)
if pid == 5:
    ops.node(585, 9.0, 2.0, 6.0)
if pid == 6:
    ops.node(585, 9.0, 2.0, 6.0)
if pid == 10:
    ops.node(585, 9.0, 2.0, 6.0)
if pid == 11:
    ops.node(585, 9.0, 2.0, 6.0)
if pid == 6:
    ops.node(586, 2.0, 3.999999999999999, 6.999999999999998)
if pid == 7:
    ops.node(586, 2.0, 3.999999999999999, 6.999999999999998)
if pid == 6:
    ops.node(587, 2.0, 2.999999999999999, 6.0)
if pid == 11:
    ops.node(587, 2.0, 2.999999999999999, 6.0)
if pid == 6:
    ops.node(588, 0.9999999999999996, 3.999999999999999, 5.999999999999998)
if pid == 7:
    ops.node(588, 0.9999999999999996, 3.999999999999999, 5.999999999999998)
if pid == 11:
    ops.node(588, 0.9999999999999996, 3.999999999999999, 5.999999999999998)
if pid == 12:
    ops.node(588, 0.9999999999999996, 3.999999999999999, 5.999999999999998)
if pid == 6:
    ops.node(589, 4.0, 4.0, 7.0)
if pid == 7:
    ops.node(589, 4.0, 4.0, 7.0)
if pid == 6:
    ops.node(590, 4.0, 3.0, 6.0)
if pid == 11:
    ops.node(590, 4.0, 3.0, 6.0)
if pid == 6:
    ops.node(591, 3.0, 3.999999999999999, 5.999999999999998)
if pid == 7:
    ops.node(591, 3.0, 3.999999999999999, 5.999999999999998)
if pid == 11:
    ops.node(591, 3.0, 3.999999999999999, 5.999999999999998)
if pid == 12:
    ops.node(591, 3.0, 3.999999999999999, 5.999999999999998)
if pid == 6:
    ops.node(592, 6.0, 4.0, 7.0)
if pid == 7:
    ops.node(592, 6.0, 4.0, 7.0)
if pid == 6:
    ops.node(593, 6.0, 3.0, 6.0)
if pid == 11:
    ops.node(593, 6.0, 3.0, 6.0)
if pid == 6:
    ops.node(594, 5.0, 4.0, 6.0)
if pid == 7:
    ops.node(594, 5.0, 4.0, 6.0)
if pid == 11:
    ops.node(594, 5.0, 4.0, 6.0)
if pid == 12:
    ops.node(594, 5.0, 4.0, 6.0)
if pid == 6:
    ops.node(595, 8.0, 4.0, 7.000000000000002)
if pid == 7:
    ops.node(595, 8.0, 4.0, 7.000000000000002)
if pid == 6:
    ops.node(596, 8.0, 3.0, 6.0)
if pid == 11:
    ops.node(596, 8.0, 3.0, 6.0)
if pid == 6:
    ops.node(597, 7.0, 4.0, 6.0)
if pid == 7:
    ops.node(597, 7.0, 4.0, 6.0)
if pid == 11:
    ops.node(597, 7.0, 4.0, 6.0)
if pid == 12:
    ops.node(597, 7.0, 4.0, 6.0)
if pid == 6:
    ops.node(598, 9.0, 4.0, 6.0)
if pid == 7:
    ops.node(598, 9.0, 4.0, 6.0)
if pid == 11:
    ops.node(598, 9.0, 4.0, 6.0)
if pid == 12:
    ops.node(598, 9.0, 4.0, 6.0)
if pid == 7:
    ops.node(599, 2.0, 5.999999999999998, 7.0)
if pid == 8:
    ops.node(599, 2.0, 5.999999999999998, 7.0)
if pid == 7:
    ops.node(600, 2.0, 4.999999999999999, 5.999999999999998)
if pid == 12:
    ops.node(600, 2.0, 4.999999999999999, 5.999999999999998)
if pid == 7:
    ops.node(601, 1.0, 6.0, 6.0)
if pid == 8:
    ops.node(601, 1.0, 6.0, 6.0)
if pid == 12:
    ops.node(601, 1.0, 6.0, 6.0)
if pid == 13:
    ops.node(601, 1.0, 6.0, 6.0)
if pid == 7:
    ops.node(602, 4.0, 6.0, 7.0)
if pid == 8:
    ops.node(602, 4.0, 6.0, 7.0)
if pid == 7:
    ops.node(603, 4.0, 5.0, 6.0)
if pid == 12:
    ops.node(603, 4.0, 5.0, 6.0)
if pid == 7:
    ops.node(604, 3.0, 6.0, 6.0)
if pid == 8:
    ops.node(604, 3.0, 6.0, 6.0)
if pid == 12:
    ops.node(604, 3.0, 6.0, 6.0)
if pid == 13:
    ops.node(604, 3.0, 6.0, 6.0)
if pid == 7:
    ops.node(605, 5.999999999999998, 6.0, 7.0)
if pid == 8:
    ops.node(605, 5.999999999999998, 6.0, 7.0)
if pid == 7:
    ops.node(606, 6.0, 5.0, 6.0)
if pid == 12:
    ops.node(606, 6.0, 5.0, 6.0)
if pid == 7:
    ops.node(607, 5.0, 6.0, 6.0)
if pid == 8:
    ops.node(607, 5.0, 6.0, 6.0)
if pid == 12:
    ops.node(607, 5.0, 6.0, 6.0)
if pid == 13:
    ops.node(607, 5.0, 6.0, 6.0)
if pid == 7:
    ops.node(608, 8.0, 5.999999999999998, 7.000000000000002)
if pid == 8:
    ops.node(608, 8.0, 5.999999999999998, 7.000000000000002)
if pid == 7:
    ops.node(609, 8.0, 5.0, 6.0)
if pid == 12:
    ops.node(609, 8.0, 5.0, 6.0)
if pid == 7:
    ops.node(610, 7.0, 6.0, 6.0)
if pid == 8:
    ops.node(610, 7.0, 6.0, 6.0)
if pid == 12:
    ops.node(610, 7.0, 6.0, 6.0)
if pid == 13:
    ops.node(610, 7.0, 6.0, 6.0)
if pid == 7:
    ops.node(611, 9.0, 6.0, 6.0)
if pid == 8:
    ops.node(611, 9.0, 6.0, 6.0)
if pid == 12:
    ops.node(611, 9.0, 6.0, 6.0)
if pid == 13:
    ops.node(611, 9.0, 6.0, 6.0)
if pid == 8:
    ops.node(612, 1.999999999999999, 7.999999999999998, 6.999999999999998)
if pid == 9:
    ops.node(612, 1.999999999999999, 7.999999999999998, 6.999999999999998)
if pid == 8:
    ops.node(613, 1.999999999999999, 6.999999999999998, 5.999999999999998)
if pid == 13:
    ops.node(613, 1.999999999999999, 6.999999999999998, 5.999999999999998)
if pid == 8:
    ops.node(614, 0.9999999999999991, 7.999999999999998, 5.999999999999998)
if pid == 9:
    ops.node(614, 0.9999999999999991, 7.999999999999998, 5.999999999999998)
if pid == 13:
    ops.node(614, 0.9999999999999991, 7.999999999999998, 5.999999999999998)
if pid == 14:
    ops.node(614, 0.9999999999999991, 7.999999999999998, 5.999999999999998)
if pid == 8:
    ops.node(615, 3.999999999999999, 8.0, 7.0)
if pid == 9:
    ops.node(615, 3.999999999999999, 8.0, 7.0)
if pid == 8:
    ops.node(616, 3.999999999999999, 7.0, 6.0)
if pid == 13:
    ops.node(616, 3.999999999999999, 7.0, 6.0)
if pid == 8:
    ops.node(617, 2.999999999999998, 7.999999999999998, 5.999999999999998)
if pid == 9:
    ops.node(617, 2.999999999999998, 7.999999999999998, 5.999999999999998)
if pid == 13:
    ops.node(617, 2.999999999999998, 7.999999999999998, 5.999999999999998)
if pid == 14:
    ops.node(617, 2.999999999999998, 7.999999999999998, 5.999999999999998)
if pid == 8:
    ops.node(618, 6.0, 8.0, 7.0)
if pid == 9:
    ops.node(618, 6.0, 8.0, 7.0)
if pid == 8:
    ops.node(619, 6.0, 7.0, 6.0)
if pid == 13:
    ops.node(619, 6.0, 7.0, 6.0)
if pid == 8:
    ops.node(620, 4.999999999999999, 8.0, 6.0)
if pid == 9:
    ops.node(620, 4.999999999999999, 8.0, 6.0)
if pid == 13:
    ops.node(620, 4.999999999999999, 8.0, 6.0)
if pid == 14:
    ops.node(620, 4.999999999999999, 8.0, 6.0)
if pid == 8:
    ops.node(621, 7.999999999999998, 8.0, 6.999999999999998)
if pid == 9:
    ops.node(621, 7.999999999999998, 8.0, 6.999999999999998)
if pid == 8:
    ops.node(622, 7.999999999999998, 7.0, 6.0)
if pid == 13:
    ops.node(622, 7.999999999999998, 7.0, 6.0)
if pid == 8:
    ops.node(623, 6.999999999999998, 8.0, 6.0)
if pid == 9:
    ops.node(623, 6.999999999999998, 8.0, 6.0)
if pid == 13:
    ops.node(623, 6.999999999999998, 8.0, 6.0)
if pid == 14:
    ops.node(623, 6.999999999999998, 8.0, 6.0)
if pid == 8:
    ops.node(624, 8.999999999999998, 8.0, 6.0)
if pid == 9:
    ops.node(624, 8.999999999999998, 8.0, 6.0)
if pid == 13:
    ops.node(624, 8.999999999999998, 8.0, 6.0)
if pid == 14:
    ops.node(624, 8.999999999999998, 8.0, 6.0)
if pid == 9:
    ops.node(625, 1.999999999999999, 8.999999999999998, 5.999999999999998)
if pid == 14:
    ops.node(625, 1.999999999999999, 8.999999999999998, 5.999999999999998)
if pid == 9:
    ops.node(626, 3.999999999999999, 9.0, 6.0)
if pid == 14:
    ops.node(626, 3.999999999999999, 9.0, 6.0)
if pid == 9:
    ops.node(627, 6.0, 9.0, 6.0)
if pid == 14:
    ops.node(627, 6.0, 9.0, 6.0)
if pid == 9:
    ops.node(628, 7.999999999999998, 9.0, 6.0)
if pid == 14:
    ops.node(628, 7.999999999999998, 9.0, 6.0)
if pid == 10:
    ops.node(629, 2.0, 2.0, 5.0)
if pid == 11:
    ops.node(629, 2.0, 2.0, 5.0)
if pid == 10:
    ops.node(630, 2.0, 1.0, 3.999999999999998)
if pid == 15:
    ops.node(630, 2.0, 1.0, 3.999999999999998)
if pid == 10:
    ops.node(631, 1.0, 2.0, 3.999999999999998)
if pid == 11:
    ops.node(631, 1.0, 2.0, 3.999999999999998)
if pid == 15:
    ops.node(631, 1.0, 2.0, 3.999999999999998)
if pid == 16:
    ops.node(631, 1.0, 2.0, 3.999999999999998)
if pid == 10:
    ops.node(632, 4.0, 2.0, 4.999999999999999)
if pid == 11:
    ops.node(632, 4.0, 2.0, 4.999999999999999)
if pid == 10:
    ops.node(633, 4.0, 1.0, 3.999999999999999)
if pid == 15:
    ops.node(633, 4.0, 1.0, 3.999999999999999)
if pid == 10:
    ops.node(634, 3.0, 2.0, 3.999999999999997)
if pid == 11:
    ops.node(634, 3.0, 2.0, 3.999999999999997)
if pid == 15:
    ops.node(634, 3.0, 2.0, 3.999999999999997)
if pid == 16:
    ops.node(634, 3.0, 2.0, 3.999999999999997)
if pid == 10:
    ops.node(635, 6.0, 2.0, 5.0)
if pid == 11:
    ops.node(635, 6.0, 2.0, 5.0)
if pid == 10:
    ops.node(636, 6.0, 1.0, 4.0)
if pid == 15:
    ops.node(636, 6.0, 1.0, 4.0)
if pid == 10:
    ops.node(637, 5.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(637, 5.0, 2.0, 3.999999999999999)
if pid == 15:
    ops.node(637, 5.0, 2.0, 3.999999999999999)
if pid == 16:
    ops.node(637, 5.0, 2.0, 3.999999999999999)
if pid == 10:
    ops.node(638, 8.0, 2.0, 4.999999999999999)
if pid == 11:
    ops.node(638, 8.0, 2.0, 4.999999999999999)
if pid == 10:
    ops.node(639, 8.0, 1.0, 3.999999999999999)
if pid == 15:
    ops.node(639, 8.0, 1.0, 3.999999999999999)
if pid == 10:
    ops.node(640, 7.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(640, 7.0, 2.0, 3.999999999999999)
if pid == 15:
    ops.node(640, 7.0, 2.0, 3.999999999999999)
if pid == 16:
    ops.node(640, 7.0, 2.0, 3.999999999999999)
if pid == 10:
    ops.node(641, 9.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(641, 9.0, 2.0, 3.999999999999999)
if pid == 15:
    ops.node(641, 9.0, 2.0, 3.999999999999999)
if pid == 16:
    ops.node(641, 9.0, 2.0, 3.999999999999999)
if pid == 11:
    ops.node(642, 2.0, 3.999999999999999, 4.999999999999998)
if pid == 12:
    ops.node(642, 2.0, 3.999999999999999, 4.999999999999998)
if pid == 11:
    ops.node(643, 2.0, 3.0, 3.999999999999998)
if pid == 16:
    ops.node(643, 2.0, 3.0, 3.999999999999998)
if pid == 11:
    ops.node(644, 1.0, 4.0, 4.0)
if pid == 12:
    ops.node(644, 1.0, 4.0, 4.0)
if pid == 16:
    ops.node(644, 1.0, 4.0, 4.0)
if pid == 17:
    ops.node(644, 1.0, 4.0, 4.0)
if pid == 11:
    ops.node(645, 4.0, 4.0, 5.0)
if pid == 12:
    ops.node(645, 4.0, 4.0, 5.0)
if pid == 11:
    ops.node(646, 4.0, 3.0, 3.999999999999999)
if pid == 16:
    ops.node(646, 4.0, 3.0, 3.999999999999999)
if pid == 11:
    ops.node(647, 3.0, 4.0, 4.0)
if pid == 12:
    ops.node(647, 3.0, 4.0, 4.0)
if pid == 16:
    ops.node(647, 3.0, 4.0, 4.0)
if pid == 17:
    ops.node(647, 3.0, 4.0, 4.0)
if pid == 11:
    ops.node(648, 6.0, 4.0, 5.0)
if pid == 12:
    ops.node(648, 6.0, 4.0, 5.0)
if pid == 11:
    ops.node(649, 6.0, 3.0, 4.0)
if pid == 16:
    ops.node(649, 6.0, 3.0, 4.0)
if pid == 11:
    ops.node(650, 5.0, 4.0, 4.0)
if pid == 12:
    ops.node(650, 5.0, 4.0, 4.0)
if pid == 16:
    ops.node(650, 5.0, 4.0, 4.0)
if pid == 17:
    ops.node(650, 5.0, 4.0, 4.0)
if pid == 11:
    ops.node(651, 8.0, 4.0, 5.0)
if pid == 12:
    ops.node(651, 8.0, 4.0, 5.0)
if pid == 11:
    ops.node(652, 8.0, 3.0, 3.999999999999999)
if pid == 16:
    ops.node(652, 8.0, 3.0, 3.999999999999999)
if pid == 11:
    ops.node(653, 7.0, 4.0, 4.0)
if pid == 12:
    ops.node(653, 7.0, 4.0, 4.0)
if pid == 16:
    ops.node(653, 7.0, 4.0, 4.0)
if pid == 17:
    ops.node(653, 7.0, 4.0, 4.0)
if pid == 11:
    ops.node(654, 9.0, 4.0, 4.0)
if pid == 12:
    ops.node(654, 9.0, 4.0, 4.0)
if pid == 16:
    ops.node(654, 9.0, 4.0, 4.0)
if pid == 17:
    ops.node(654, 9.0, 4.0, 4.0)
if pid == 12:
    ops.node(655, 2.0, 6.0, 5.0)
if pid == 13:
    ops.node(655, 2.0, 6.0, 5.0)
if pid == 12:
    ops.node(656, 2.0, 5.0, 4.0)
if pid == 17:
    ops.node(656, 2.0, 5.0, 4.0)
if pid == 12:
    ops.node(657, 1.0, 6.0, 4.0)
if pid == 13:
    ops.node(657, 1.0, 6.0, 4.0)
if pid == 17:
    ops.node(657, 1.0, 6.0, 4.0)
if pid == 18:
    ops.node(657, 1.0, 6.0, 4.0)
if pid == 12:
    ops.node(658, 4.0, 6.0, 5.0)
if pid == 13:
    ops.node(658, 4.0, 6.0, 5.0)
if pid == 12:
    ops.node(659, 4.0, 5.0, 4.0)
if pid == 17:
    ops.node(659, 4.0, 5.0, 4.0)
if pid == 12:
    ops.node(660, 3.0, 6.0, 4.0)
if pid == 13:
    ops.node(660, 3.0, 6.0, 4.0)
if pid == 17:
    ops.node(660, 3.0, 6.0, 4.0)
if pid == 18:
    ops.node(660, 3.0, 6.0, 4.0)
if pid == 12:
    ops.node(661, 6.0, 6.0, 5.0)
if pid == 13:
    ops.node(661, 6.0, 6.0, 5.0)
if pid == 12:
    ops.node(662, 6.0, 5.0, 4.0)
if pid == 17:
    ops.node(662, 6.0, 5.0, 4.0)
if pid == 12:
    ops.node(663, 5.0, 6.0, 4.0)
if pid == 13:
    ops.node(663, 5.0, 6.0, 4.0)
if pid == 17:
    ops.node(663, 5.0, 6.0, 4.0)
if pid == 18:
    ops.node(663, 5.0, 6.0, 4.0)
if pid == 12:
    ops.node(664, 8.0, 6.0, 5.0)
if pid == 13:
    ops.node(664, 8.0, 6.0, 5.0)
if pid == 12:
    ops.node(665, 8.0, 5.0, 4.0)
if pid == 17:
    ops.node(665, 8.0, 5.0, 4.0)
if pid == 12:
    ops.node(666, 7.0, 6.0, 4.0)
if pid == 13:
    ops.node(666, 7.0, 6.0, 4.0)
if pid == 17:
    ops.node(666, 7.0, 6.0, 4.0)
if pid == 18:
    ops.node(666, 7.0, 6.0, 4.0)
if pid == 12:
    ops.node(667, 9.0, 6.0, 4.0)
if pid == 13:
    ops.node(667, 9.0, 6.0, 4.0)
if pid == 17:
    ops.node(667, 9.0, 6.0, 4.0)
if pid == 18:
    ops.node(667, 9.0, 6.0, 4.0)
if pid == 13:
    ops.node(668, 1.999999999999999, 7.999999999999998, 4.999999999999998)
if pid == 14:
    ops.node(668, 1.999999999999999, 7.999999999999998, 4.999999999999998)
if pid == 13:
    ops.node(669, 2.0, 7.0, 4.0)
if pid == 18:
    ops.node(669, 2.0, 7.0, 4.0)
if pid == 13:
    ops.node(670, 1.0, 8.0, 4.0)
if pid == 14:
    ops.node(670, 1.0, 8.0, 4.0)
if pid == 18:
    ops.node(670, 1.0, 8.0, 4.0)
if pid == 19:
    ops.node(670, 1.0, 8.0, 4.0)
if pid == 13:
    ops.node(671, 3.999999999999999, 8.0, 5.0)
if pid == 14:
    ops.node(671, 3.999999999999999, 8.0, 5.0)
if pid == 13:
    ops.node(672, 4.0, 7.0, 4.0)
if pid == 18:
    ops.node(672, 4.0, 7.0, 4.0)
if pid == 13:
    ops.node(673, 3.0, 8.0, 4.0)
if pid == 14:
    ops.node(673, 3.0, 8.0, 4.0)
if pid == 18:
    ops.node(673, 3.0, 8.0, 4.0)
if pid == 19:
    ops.node(673, 3.0, 8.0, 4.0)
if pid == 13:
    ops.node(674, 6.0, 8.0, 5.0)
if pid == 14:
    ops.node(674, 6.0, 8.0, 5.0)
if pid == 13:
    ops.node(675, 6.0, 7.0, 4.0)
if pid == 18:
    ops.node(675, 6.0, 7.0, 4.0)
if pid == 13:
    ops.node(676, 5.0, 8.0, 4.0)
if pid == 14:
    ops.node(676, 5.0, 8.0, 4.0)
if pid == 18:
    ops.node(676, 5.0, 8.0, 4.0)
if pid == 19:
    ops.node(676, 5.0, 8.0, 4.0)
if pid == 13:
    ops.node(677, 7.999999999999998, 8.0, 4.999999999999999)
if pid == 14:
    ops.node(677, 7.999999999999998, 8.0, 4.999999999999999)
if pid == 13:
    ops.node(678, 8.0, 7.0, 3.999999999999999)
if pid == 18:
    ops.node(678, 8.0, 7.0, 3.999999999999999)
if pid == 13:
    ops.node(679, 7.0, 8.0, 3.999999999999999)
if pid == 14:
    ops.node(679, 7.0, 8.0, 3.999999999999999)
if pid == 18:
    ops.node(679, 7.0, 8.0, 3.999999999999999)
if pid == 19:
    ops.node(679, 7.0, 8.0, 3.999999999999999)
if pid == 13:
    ops.node(680, 9.0, 8.0, 3.999999999999999)
if pid == 14:
    ops.node(680, 9.0, 8.0, 3.999999999999999)
if pid == 18:
    ops.node(680, 9.0, 8.0, 3.999999999999999)
if pid == 19:
    ops.node(680, 9.0, 8.0, 3.999999999999999)
if pid == 14:
    ops.node(681, 2.0, 9.0, 4.0)
if pid == 19:
    ops.node(681, 2.0, 9.0, 4.0)
if pid == 14:
    ops.node(682, 4.0, 9.0, 4.0)
if pid == 19:
    ops.node(682, 4.0, 9.0, 4.0)
if pid == 14:
    ops.node(683, 6.0, 9.0, 4.0)
if pid == 19:
    ops.node(683, 6.0, 9.0, 4.0)
if pid == 14:
    ops.node(684, 8.0, 9.0, 3.999999999999999)
if pid == 19:
    ops.node(684, 8.0, 9.0, 3.999999999999999)
if pid == 15:
    ops.node(685, 2.0, 2.0, 2.999999999999998)
if pid == 16:
    ops.node(685, 2.0, 2.0, 2.999999999999998)
if pid == 15:
    ops.node(686, 2.0, 0.9999999999999996, 1.999999999999999)
if pid == 20:
    ops.node(686, 2.0, 0.9999999999999996, 1.999999999999999)
if pid == 15:
    ops.node(687, 1.0, 1.999999999999999, 1.999999999999999)
if pid == 16:
    ops.node(687, 1.0, 1.999999999999999, 1.999999999999999)
if pid == 20:
    ops.node(687, 1.0, 1.999999999999999, 1.999999999999999)
if pid == 21:
    ops.node(687, 1.0, 1.999999999999999, 1.999999999999999)
if pid == 15:
    ops.node(688, 3.999999999999998, 2.0, 2.999999999999999)
if pid == 16:
    ops.node(688, 3.999999999999998, 2.0, 2.999999999999999)
if pid == 15:
    ops.node(689, 3.999999999999998, 1.0, 2.0)
if pid == 20:
    ops.node(689, 3.999999999999998, 1.0, 2.0)
if pid == 15:
    ops.node(690, 2.999999999999998, 2.0, 1.999999999999999)
if pid == 16:
    ops.node(690, 2.999999999999998, 2.0, 1.999999999999999)
if pid == 20:
    ops.node(690, 2.999999999999998, 2.0, 1.999999999999999)
if pid == 21:
    ops.node(690, 2.999999999999998, 2.0, 1.999999999999999)
if pid == 15:
    ops.node(691, 6.0, 2.0, 3.0)
if pid == 16:
    ops.node(691, 6.0, 2.0, 3.0)
if pid == 15:
    ops.node(692, 6.0, 1.0, 2.0)
if pid == 20:
    ops.node(692, 6.0, 1.0, 2.0)
if pid == 15:
    ops.node(693, 4.999999999999998, 2.0, 2.0)
if pid == 16:
    ops.node(693, 4.999999999999998, 2.0, 2.0)
if pid == 20:
    ops.node(693, 4.999999999999998, 2.0, 2.0)
if pid == 21:
    ops.node(693, 4.999999999999998, 2.0, 2.0)
if pid == 15:
    ops.node(694, 7.999999999999996, 2.0, 2.999999999999999)
if pid == 16:
    ops.node(694, 7.999999999999996, 2.0, 2.999999999999999)
if pid == 15:
    ops.node(695, 7.999999999999996, 1.0, 2.0)
if pid == 20:
    ops.node(695, 7.999999999999996, 1.0, 2.0)
if pid == 15:
    ops.node(696, 6.999999999999996, 2.0, 2.0)
if pid == 16:
    ops.node(696, 6.999999999999996, 2.0, 2.0)
if pid == 20:
    ops.node(696, 6.999999999999996, 2.0, 2.0)
if pid == 21:
    ops.node(696, 6.999999999999996, 2.0, 2.0)
if pid == 15:
    ops.node(697, 8.999999999999996, 2.0, 2.0)
if pid == 16:
    ops.node(697, 8.999999999999996, 2.0, 2.0)
if pid == 20:
    ops.node(697, 8.999999999999996, 2.0, 2.0)
if pid == 21:
    ops.node(697, 8.999999999999996, 2.0, 2.0)
if pid == 16:
    ops.node(698, 2.0, 3.999999999999998, 3.0)
if pid == 17:
    ops.node(698, 2.0, 3.999999999999998, 3.0)
if pid == 16:
    ops.node(699, 2.0, 2.999999999999998, 2.0)
if pid == 21:
    ops.node(699, 2.0, 2.999999999999998, 2.0)
if pid == 16:
    ops.node(700, 1.0, 3.999999999999998, 2.0)
if pid == 17:
    ops.node(700, 1.0, 3.999999999999998, 2.0)
if pid == 21:
    ops.node(700, 1.0, 3.999999999999998, 2.0)
if pid == 22:
    ops.node(700, 1.0, 3.999999999999998, 2.0)
if pid == 16:
    ops.node(701, 3.999999999999999, 4.0, 3.0)
if pid == 17:
    ops.node(701, 3.999999999999999, 4.0, 3.0)
if pid == 16:
    ops.node(702, 3.999999999999997, 3.0, 1.999999999999999)
if pid == 21:
    ops.node(702, 3.999999999999997, 3.0, 1.999999999999999)
if pid == 16:
    ops.node(703, 2.999999999999999, 3.999999999999998, 2.0)
if pid == 17:
    ops.node(703, 2.999999999999999, 3.999999999999998, 2.0)
if pid == 21:
    ops.node(703, 2.999999999999999, 3.999999999999998, 2.0)
if pid == 22:
    ops.node(703, 2.999999999999999, 3.999999999999998, 2.0)
if pid == 16:
    ops.node(704, 6.0, 4.0, 3.0)
if pid == 17:
    ops.node(704, 6.0, 4.0, 3.0)
if pid == 16:
    ops.node(705, 6.0, 3.0, 2.0)
if pid == 21:
    ops.node(705, 6.0, 3.0, 2.0)
if pid == 16:
    ops.node(706, 4.999999999999999, 4.0, 2.0)
if pid == 17:
    ops.node(706, 4.999999999999999, 4.0, 2.0)
if pid == 21:
    ops.node(706, 4.999999999999999, 4.0, 2.0)
if pid == 22:
    ops.node(706, 4.999999999999999, 4.0, 2.0)
if pid == 16:
    ops.node(707, 7.999999999999998, 4.0, 3.0)
if pid == 17:
    ops.node(707, 7.999999999999998, 4.0, 3.0)
if pid == 16:
    ops.node(708, 7.999999999999995, 3.0, 2.0)
if pid == 21:
    ops.node(708, 7.999999999999995, 3.0, 2.0)
if pid == 16:
    ops.node(709, 6.999999999999998, 4.0, 2.0)
if pid == 17:
    ops.node(709, 6.999999999999998, 4.0, 2.0)
if pid == 21:
    ops.node(709, 6.999999999999998, 4.0, 2.0)
if pid == 22:
    ops.node(709, 6.999999999999998, 4.0, 2.0)
if pid == 16:
    ops.node(710, 8.999999999999998, 4.0, 2.0)
if pid == 17:
    ops.node(710, 8.999999999999998, 4.0, 2.0)
if pid == 21:
    ops.node(710, 8.999999999999998, 4.0, 2.0)
if pid == 22:
    ops.node(710, 8.999999999999998, 4.0, 2.0)
if pid == 17:
    ops.node(711, 2.0, 6.0, 3.0)
if pid == 18:
    ops.node(711, 2.0, 6.0, 3.0)
if pid == 17:
    ops.node(712, 2.0, 4.999999999999998, 2.0)
if pid == 22:
    ops.node(712, 2.0, 4.999999999999998, 2.0)
if pid == 17:
    ops.node(713, 1.0, 6.0, 2.0)
if pid == 18:
    ops.node(713, 1.0, 6.0, 2.0)
if pid == 22:
    ops.node(713, 1.0, 6.0, 2.0)
if pid == 23:
    ops.node(713, 1.0, 6.0, 2.0)
if pid == 17:
    ops.node(714, 3.999999999999999, 6.0, 3.0)
if pid == 18:
    ops.node(714, 3.999999999999999, 6.0, 3.0)
if pid == 17:
    ops.node(715, 3.999999999999998, 5.0, 2.0)
if pid == 22:
    ops.node(715, 3.999999999999998, 5.0, 2.0)
if pid == 17:
    ops.node(716, 2.999999999999999, 6.0, 2.0)
if pid == 18:
    ops.node(716, 2.999999999999999, 6.0, 2.0)
if pid == 22:
    ops.node(716, 2.999999999999999, 6.0, 2.0)
if pid == 23:
    ops.node(716, 2.999999999999999, 6.0, 2.0)
if pid == 17:
    ops.node(717, 6.0, 6.0, 3.0)
if pid == 18:
    ops.node(717, 6.0, 6.0, 3.0)
if pid == 17:
    ops.node(718, 6.0, 5.0, 2.0)
if pid == 22:
    ops.node(718, 6.0, 5.0, 2.0)
if pid == 17:
    ops.node(719, 4.999999999999999, 6.0, 2.0)
if pid == 18:
    ops.node(719, 4.999999999999999, 6.0, 2.0)
if pid == 22:
    ops.node(719, 4.999999999999999, 6.0, 2.0)
if pid == 23:
    ops.node(719, 4.999999999999999, 6.0, 2.0)
if pid == 17:
    ops.node(720, 7.999999999999998, 6.0, 2.999999999999999)
if pid == 18:
    ops.node(720, 7.999999999999998, 6.0, 2.999999999999999)
if pid == 17:
    ops.node(721, 7.999999999999996, 5.0, 1.999999999999999)
if pid == 22:
    ops.node(721, 7.999999999999996, 5.0, 1.999999999999999)
if pid == 17:
    ops.node(722, 6.999999999999998, 6.0, 1.999999999999999)
if pid == 18:
    ops.node(722, 6.999999999999998, 6.0, 1.999999999999999)
if pid == 22:
    ops.node(722, 6.999999999999998, 6.0, 1.999999999999999)
if pid == 23:
    ops.node(722, 6.999999999999998, 6.0, 1.999999999999999)
if pid == 17:
    ops.node(723, 8.999999999999998, 6.0, 1.999999999999999)
if pid == 18:
    ops.node(723, 8.999999999999998, 6.0, 1.999999999999999)
if pid == 22:
    ops.node(723, 8.999999999999998, 6.0, 1.999999999999999)
if pid == 23:
    ops.node(723, 8.999999999999998, 6.0, 1.999999999999999)
if pid == 18:
    ops.node(724, 2.0, 7.999999999999996, 3.0)
if pid == 19:
    ops.node(724, 2.0, 7.999999999999996, 3.0)
if pid == 18:
    ops.node(725, 2.0, 6.999999999999996, 2.0)
if pid == 23:
    ops.node(725, 2.0, 6.999999999999996, 2.0)
if pid == 18:
    ops.node(726, 1.0, 7.999999999999996, 2.0)
if pid == 19:
    ops.node(726, 1.0, 7.999999999999996, 2.0)
if pid == 23:
    ops.node(726, 1.0, 7.999999999999996, 2.0)
if pid == 24:
    ops.node(726, 1.0, 7.999999999999996, 2.0)
if pid == 18:
    ops.node(727, 3.999999999999998, 8.0, 3.0)
if pid == 19:
    ops.node(727, 3.999999999999998, 8.0, 3.0)
if pid == 18:
    ops.node(728, 3.999999999999997, 7.0, 2.0)
if pid == 23:
    ops.node(728, 3.999999999999997, 7.0, 2.0)
if pid == 18:
    ops.node(729, 2.999999999999998, 7.999999999999996, 2.0)
if pid == 19:
    ops.node(729, 2.999999999999998, 7.999999999999996, 2.0)
if pid == 23:
    ops.node(729, 2.999999999999998, 7.999999999999996, 2.0)
if pid == 24:
    ops.node(729, 2.999999999999998, 7.999999999999996, 2.0)
if pid == 18:
    ops.node(730, 6.0, 8.0, 3.000000000000001)
if pid == 19:
    ops.node(730, 6.0, 8.0, 3.000000000000001)
if pid == 18:
    ops.node(731, 6.0, 7.0, 2.000000000000001)
if pid == 23:
    ops.node(731, 6.0, 7.0, 2.000000000000001)
if pid == 18:
    ops.node(732, 4.999999999999998, 8.0, 2.0)
if pid == 19:
    ops.node(732, 4.999999999999998, 8.0, 2.0)
if pid == 23:
    ops.node(732, 4.999999999999998, 8.0, 2.0)
if pid == 24:
    ops.node(732, 4.999999999999998, 8.0, 2.0)
if pid == 18:
    ops.node(733, 7.999999999999996, 8.0, 2.999999999999999)
if pid == 19:
    ops.node(733, 7.999999999999996, 8.0, 2.999999999999999)
if pid == 18:
    ops.node(734, 7.999999999999995, 7.0, 1.999999999999999)
if pid == 23:
    ops.node(734, 7.999999999999995, 7.0, 1.999999999999999)
if pid == 18:
    ops.node(735, 6.999999999999996, 8.0, 2.0)
if pid == 19:
    ops.node(735, 6.999999999999996, 8.0, 2.0)
if pid == 23:
    ops.node(735, 6.999999999999996, 8.0, 2.0)
if pid == 24:
    ops.node(735, 6.999999999999996, 8.0, 2.0)
if pid == 18:
    ops.node(736, 8.999999999999996, 8.0, 2.0)
if pid == 19:
    ops.node(736, 8.999999999999996, 8.0, 2.0)
if pid == 23:
    ops.node(736, 8.999999999999996, 8.0, 2.0)
if pid == 24:
    ops.node(736, 8.999999999999996, 8.0, 2.0)
if pid == 19:
    ops.node(737, 2.0, 8.999999999999996, 2.0)
if pid == 24:
    ops.node(737, 2.0, 8.999999999999996, 2.0)
if pid == 19:
    ops.node(738, 3.999999999999998, 9.0, 2.0)
if pid == 24:
    ops.node(738, 3.999999999999998, 9.0, 2.0)
if pid == 19:
    ops.node(739, 6.0, 9.0, 2.000000000000001)
if pid == 24:
    ops.node(739, 6.0, 9.0, 2.000000000000001)
if pid == 19:
    ops.node(740, 7.999999999999996, 9.0, 1.999999999999999)
if pid == 24:
    ops.node(740, 7.999999999999996, 9.0, 1.999999999999999)
if pid == 20:
    ops.node(741, 2.0, 1.999999999999999, 0.9999999999999996)
if pid == 21:
    ops.node(741, 2.0, 1.999999999999999, 0.9999999999999996)
if pid == 20:
    ops.node(742, 3.999999999999998, 2.0, 0.9999999999999996)
if pid == 21:
    ops.node(742, 3.999999999999998, 2.0, 0.9999999999999996)
if pid == 20:
    ops.node(743, 6.0, 2.0, 1.0)
if pid == 21:
    ops.node(743, 6.0, 2.0, 1.0)
if pid == 20:
    ops.node(744, 7.999999999999996, 2.0, 1.0)
if pid == 21:
    ops.node(744, 7.999999999999996, 2.0, 1.0)
if pid == 21:
    ops.node(745, 2.0, 3.999999999999998, 1.0)
if pid == 22:
    ops.node(745, 2.0, 3.999999999999998, 1.0)
if pid == 21:
    ops.node(746, 3.999999999999999, 4.0, 0.9999999999999996)
if pid == 22:
    ops.node(746, 3.999999999999999, 4.0, 0.9999999999999996)
if pid == 21:
    ops.node(747, 6.0, 4.0, 1.0)
if pid == 22:
    ops.node(747, 6.0, 4.0, 1.0)
if pid == 21:
    ops.node(748, 7.999999999999998, 4.0, 0.9999999999999996)
if pid == 22:
    ops.node(748, 7.999999999999998, 4.0, 0.9999999999999996)
if pid == 22:
    ops.node(749, 2.0, 6.0, 1.0)
if pid == 23:
    ops.node(749, 2.0, 6.0, 1.0)
if pid == 22:
    ops.node(750, 3.999999999999999, 6.0, 1.0)
if pid == 23:
    ops.node(750, 3.999999999999999, 6.0, 1.0)
if pid == 22:
    ops.node(751, 6.0, 6.0, 1.0)
if pid == 23:
    ops.node(751, 6.0, 6.0, 1.0)
if pid == 22:
    ops.node(752, 7.999999999999998, 6.0, 0.9999999999999991)
if pid == 23:
    ops.node(752, 7.999999999999998, 6.0, 0.9999999999999991)
if pid == 23:
    ops.node(753, 2.0, 7.999999999999996, 1.0)
if pid == 24:
    ops.node(753, 2.0, 7.999999999999996, 1.0)
if pid == 23:
    ops.node(754, 3.999999999999998, 8.0, 0.9999999999999996)
if pid == 24:
    ops.node(754, 3.999999999999998, 8.0, 0.9999999999999996)
if pid == 23:
    ops.node(755, 6.0, 8.0, 1.000000000000001)
if pid == 24:
    ops.node(755, 6.0, 8.0, 1.000000000000001)
if pid == 23:
    ops.node(756, 7.999999999999996, 8.0, 0.9999999999999996)
if pid == 24:
    ops.node(756, 7.999999999999996, 8.0, 0.9999999999999996)
    ops.model("basicBuilder","-ndm",3,"-ndf",4)
if pid == 0:
    ops.remove("sp", 1)
    ops.fix(1, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 2)
    ops.fix(2, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 3)
    ops.fix(3, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 4)
    ops.fix(4, 1, 0, 0,0)
if pid == 0:
    ops.remove("sp", 5)
    ops.fix(5, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 6)
    ops.fix(6, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 7)
    ops.fix(7, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 8)
    ops.fix(8, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 9)
    ops.fix(9, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 9)
    ops.fix(9, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 10)
    ops.fix(10, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 10)
    ops.fix(10, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 11)
    ops.fix(11, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 11)
    ops.fix(11, 1, 0, 0,0)
if pid == 0:
    ops.remove("sp", 12)
    ops.fix(12, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 12)
    ops.fix(12, 1, 0, 0,0)
if pid == 0:
    ops.remove("sp", 13)
    ops.fix(13, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 13)
    ops.fix(13, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 14)
    ops.fix(14, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 14)
    ops.fix(14, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 15)
    ops.fix(15, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 15)
    ops.fix(15, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 16)
    ops.fix(16, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 16)
    ops.fix(16, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 17)
    ops.fix(17, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 17)
    ops.fix(17, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 18)
    ops.fix(18, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 18)
    ops.fix(18, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 19)
    ops.fix(19, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 19)
    ops.fix(19, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 20)
    ops.fix(20, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 20)
    ops.fix(20, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 21)
    ops.fix(21, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 21)
    ops.fix(21, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 22)
    ops.fix(22, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 22)
    ops.fix(22, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 23)
    ops.fix(23, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 23)
    ops.fix(23, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 24)
    ops.fix(24, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 24)
    ops.fix(24, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 25)
    ops.fix(25, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 25)
    ops.fix(25, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 26)
    ops.fix(26, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 26)
    ops.fix(26, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 27)
    ops.fix(27, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 27)
    ops.fix(27, 1, 0, 0,0)
if pid == 0:
    ops.remove("sp", 28)
    ops.fix(28, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 28)
    ops.fix(28, 1, 0, 0,0)
if pid == 0:
    ops.remove("sp", 29)
    ops.fix(29, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 29)
    ops.fix(29, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 30)
    ops.fix(30, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 30)
    ops.fix(30, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 31)
    ops.fix(31, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 31)
    ops.fix(31, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 32)
    ops.fix(32, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 32)
    ops.fix(32, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 33)
    ops.fix(33, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 33)
    ops.fix(33, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 34)
    ops.fix(34, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 34)
    ops.fix(34, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 35)
    ops.fix(35, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 35)
    ops.fix(35, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 36)
    ops.fix(36, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 36)
    ops.fix(36, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 37)
    ops.fix(37, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 37)
    ops.fix(37, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 38)
    ops.fix(38, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 38)
    ops.fix(38, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 39)
    ops.fix(39, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 39)
    ops.fix(39, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 40)
    ops.fix(40, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 40)
    ops.fix(40, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 57)
    ops.fix(57, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 57)
    ops.fix(57, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 57)
    ops.fix(57, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 57)
    ops.fix(57, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 58)
    ops.fix(58, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 58)
    ops.fix(58, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 58)
    ops.fix(58, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 58)
    ops.fix(58, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 59)
    ops.fix(59, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 59)
    ops.fix(59, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 59)
    ops.fix(59, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 59)
    ops.fix(59, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 60)
    ops.fix(60, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 60)
    ops.fix(60, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 60)
    ops.fix(60, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 60)
    ops.fix(60, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 61)
    ops.fix(61, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 61)
    ops.fix(61, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 61)
    ops.fix(61, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 61)
    ops.fix(61, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 62)
    ops.fix(62, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 62)
    ops.fix(62, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 62)
    ops.fix(62, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 62)
    ops.fix(62, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 63)
    ops.fix(63, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 63)
    ops.fix(63, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 63)
    ops.fix(63, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 63)
    ops.fix(63, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 64)
    ops.fix(64, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 64)
    ops.fix(64, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 64)
    ops.fix(64, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 64)
    ops.fix(64, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 65)
    ops.fix(65, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 65)
    ops.fix(65, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 65)
    ops.fix(65, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 65)
    ops.fix(65, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 66)
    ops.fix(66, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 66)
    ops.fix(66, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 66)
    ops.fix(66, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 66)
    ops.fix(66, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 67)
    ops.fix(67, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 67)
    ops.fix(67, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 67)
    ops.fix(67, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 67)
    ops.fix(67, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 68)
    ops.fix(68, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 68)
    ops.fix(68, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 68)
    ops.fix(68, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 68)
    ops.fix(68, 1, 0, 0,0)
if pid == 0:
    ops.remove("sp", 69)
    ops.fix(69, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 69)
    ops.fix(69, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 69)
    ops.fix(69, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 69)
    ops.fix(69, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 70)
    ops.fix(70, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 70)
    ops.fix(70, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 70)
    ops.fix(70, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 70)
    ops.fix(70, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 71)
    ops.fix(71, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 71)
    ops.fix(71, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 71)
    ops.fix(71, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 71)
    ops.fix(71, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 72)
    ops.fix(72, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 72)
    ops.fix(72, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 72)
    ops.fix(72, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 72)
    ops.fix(72, 1, 0, 0,0)
if pid == 0:
    ops.remove("sp", 73)
    ops.fix(73, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 73)
    ops.fix(73, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 73)
    ops.fix(73, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 73)
    ops.fix(73, 1, 0, 0,0)
if pid == 1:
    ops.remove("sp", 74)
    ops.fix(74, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 74)
    ops.fix(74, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 74)
    ops.fix(74, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 74)
    ops.fix(74, 1, 0, 0,0)
if pid == 2:
    ops.remove("sp", 75)
    ops.fix(75, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 75)
    ops.fix(75, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 75)
    ops.fix(75, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 75)
    ops.fix(75, 1, 0, 0,0)
if pid == 3:
    ops.remove("sp", 76)
    ops.fix(76, 1, 0, 0,0)
if pid == 4:
    ops.remove("sp", 76)
    ops.fix(76, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 76)
    ops.fix(76, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 76)
    ops.fix(76, 1, 0, 0,0)
if pid == 5:
    ops.remove("sp", 77)
    ops.fix(77, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 77)
    ops.fix(77, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 77)
    ops.fix(77, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 77)
    ops.fix(77, 1, 0, 0,0)
if pid == 6:
    ops.remove("sp", 78)
    ops.fix(78, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 78)
    ops.fix(78, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 78)
    ops.fix(78, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 78)
    ops.fix(78, 1, 0, 0,0)
if pid == 7:
    ops.remove("sp", 79)
    ops.fix(79, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 79)
    ops.fix(79, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 79)
    ops.fix(79, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 79)
    ops.fix(79, 1, 0, 0,0)
if pid == 8:
    ops.remove("sp", 80)
    ops.fix(80, 1, 0, 0,0)
if pid == 9:
    ops.remove("sp", 80)
    ops.fix(80, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 80)
    ops.fix(80, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 80)
    ops.fix(80, 1, 0, 0,0)
if pid == 10:
    ops.remove("sp", 81)
    ops.fix(81, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 81)
    ops.fix(81, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 81)
    ops.fix(81, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 81)
    ops.fix(81, 1, 0, 0,0)
if pid == 11:
    ops.remove("sp", 82)
    ops.fix(82, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 82)
    ops.fix(82, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 82)
    ops.fix(82, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 82)
    ops.fix(82, 1, 0, 0,0)
if pid == 12:
    ops.remove("sp", 83)
    ops.fix(83, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 83)
    ops.fix(83, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 83)
    ops.fix(83, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 83)
    ops.fix(83, 1, 0, 0,0)
if pid == 13:
    ops.remove("sp", 84)
    ops.fix(84, 1, 0, 0,0)
if pid == 14:
    ops.remove("sp", 84)
    ops.fix(84, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 84)
    ops.fix(84, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 84)
    ops.fix(84, 1, 0, 0,0)
if pid == 15:
    ops.remove("sp", 85)
    ops.fix(85, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 85)
    ops.fix(85, 1, 0, 0,0)
if pid == 20:
    ops.remove("sp", 85)
    ops.fix(85, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 85)
    ops.fix(85, 1, 0, 0,0)
if pid == 16:
    ops.remove("sp", 86)
    ops.fix(86, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 86)
    ops.fix(86, 1, 0, 0,0)
if pid == 21:
    ops.remove("sp", 86)
    ops.fix(86, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 86)
    ops.fix(86, 1, 0, 0,0)
if pid == 17:
    ops.remove("sp", 87)
    ops.fix(87, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 87)
    ops.fix(87, 1, 0, 0,0)
if pid == 22:
    ops.remove("sp", 87)
    ops.fix(87, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 87)
    ops.fix(87, 1, 0, 0,0)
if pid == 18:
    ops.remove("sp", 88)
    ops.fix(88, 1, 0, 0,0)
if pid == 19:
    ops.remove("sp", 88)
    ops.fix(88, 1, 0, 0,0)
if pid == 23:
    ops.remove("sp", 88)
    ops.fix(88, 1, 0, 0,0)
if pid == 24:
    ops.remove("sp", 88)
    ops.fix(88, 1, 0, 0,0)
ops.model("basicBuilder","-ndm",3,"-ndf",3)
if pid == 20:
    ops.remove("sp", 217)
    ops.fix(217, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 218)
    ops.fix(218, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 219)
    ops.fix(219, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 220)
    ops.fix(220, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 221)
    ops.fix(221, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 222)
    ops.fix(222, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 223)
    ops.fix(223, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 224)
    ops.fix(224, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 225)
    ops.fix(225, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 226)
    ops.fix(226, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 227)
    ops.fix(227, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 228)
    ops.fix(228, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 229)
    ops.fix(229, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 230)
    ops.fix(230, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 231)
    ops.fix(231, 1, 0, 0)
if pid == 20:
    ops.remove("sp", 232)
    ops.fix(232, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 233)
    ops.fix(233, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 234)
    ops.fix(234, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 235)
    ops.fix(235, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 236)
    ops.fix(236, 1, 0, 0)
if pid == 20:
    ops.remove("sp", 237)
    ops.fix(237, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 238)
    ops.fix(238, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 239)
    ops.fix(239, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 240)
    ops.fix(240, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 241)
    ops.fix(241, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 242)
    ops.fix(242, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 243)
    ops.fix(243, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 244)
    ops.fix(244, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 245)
    ops.fix(245, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 246)
    ops.fix(246, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 247)
    ops.fix(247, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 248)
    ops.fix(248, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 249)
    ops.fix(249, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 250)
    ops.fix(250, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 251)
    ops.fix(251, 1, 0, 0)
if pid == 20:
    ops.remove("sp", 252)
    ops.fix(252, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 253)
    ops.fix(253, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 254)
    ops.fix(254, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 255)
    ops.fix(255, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 256)
    ops.fix(256, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 277)
    ops.fix(277, 1, 0, 0)
if pid == 20:
    ops.remove("sp", 277)
    ops.fix(277, 1, 0, 0)
if pid == 20:
    ops.remove("sp", 278)
    ops.fix(278, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 278)
    ops.fix(278, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 279)
    ops.fix(279, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 279)
    ops.fix(279, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 280)
    ops.fix(280, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 280)
    ops.fix(280, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 281)
    ops.fix(281, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 281)
    ops.fix(281, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 282)
    ops.fix(282, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 282)
    ops.fix(282, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 283)
    ops.fix(283, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 283)
    ops.fix(283, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 284)
    ops.fix(284, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 284)
    ops.fix(284, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 285)
    ops.fix(285, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 285)
    ops.fix(285, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 286)
    ops.fix(286, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 286)
    ops.fix(286, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 287)
    ops.fix(287, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 287)
    ops.fix(287, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 288)
    ops.fix(288, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 288)
    ops.fix(288, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 289)
    ops.fix(289, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 289)
    ops.fix(289, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 290)
    ops.fix(290, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 290)
    ops.fix(290, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 291)
    ops.fix(291, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 291)
    ops.fix(291, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 292)
    ops.fix(292, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 292)
    ops.fix(292, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 293)
    ops.fix(293, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 293)
    ops.fix(293, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 294)
    ops.fix(294, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 294)
    ops.fix(294, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 295)
    ops.fix(295, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 295)
    ops.fix(295, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 296)
    ops.fix(296, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 296)
    ops.fix(296, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 297)
    ops.fix(297, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 297)
    ops.fix(297, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 298)
    ops.fix(298, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 298)
    ops.fix(298, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 299)
    ops.fix(299, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 299)
    ops.fix(299, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 300)
    ops.fix(300, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 300)
    ops.fix(300, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 301)
    ops.fix(301, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 301)
    ops.fix(301, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 302)
    ops.fix(302, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 302)
    ops.fix(302, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 303)
    ops.fix(303, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 303)
    ops.fix(303, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 304)
    ops.fix(304, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 304)
    ops.fix(304, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 305)
    ops.fix(305, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 305)
    ops.fix(305, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 306)
    ops.fix(306, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 306)
    ops.fix(306, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 307)
    ops.fix(307, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 307)
    ops.fix(307, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 308)
    ops.fix(308, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 308)
    ops.fix(308, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 309)
    ops.fix(309, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 309)
    ops.fix(309, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 310)
    ops.fix(310, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 310)
    ops.fix(310, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 311)
    ops.fix(311, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 311)
    ops.fix(311, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 312)
    ops.fix(312, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 312)
    ops.fix(312, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 313)
    ops.fix(313, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 313)
    ops.fix(313, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 314)
    ops.fix(314, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 314)
    ops.fix(314, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 315)
    ops.fix(315, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 315)
    ops.fix(315, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 316)
    ops.fix(316, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 316)
    ops.fix(316, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 317)
    ops.fix(317, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 317)
    ops.fix(317, 1, 0, 0)
if pid == 0:
    ops.remove("sp", 318)
    ops.fix(318, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 318)
    ops.fix(318, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 319)
    ops.fix(319, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 319)
    ops.fix(319, 1, 0, 0)
if pid == 1:
    ops.remove("sp", 320)
    ops.fix(320, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 320)
    ops.fix(320, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 321)
    ops.fix(321, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 321)
    ops.fix(321, 1, 0, 0)
if pid == 2:
    ops.remove("sp", 322)
    ops.fix(322, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 322)
    ops.fix(322, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 323)
    ops.fix(323, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 323)
    ops.fix(323, 1, 0, 0)
if pid == 3:
    ops.remove("sp", 324)
    ops.fix(324, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 324)
    ops.fix(324, 1, 0, 0)
if pid == 4:
    ops.remove("sp", 325)
    ops.fix(325, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 325)
    ops.fix(325, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 326)
    ops.fix(326, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 326)
    ops.fix(326, 1, 0, 0)
if pid == 5:
    ops.remove("sp", 327)
    ops.fix(327, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 327)
    ops.fix(327, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 328)
    ops.fix(328, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 328)
    ops.fix(328, 1, 0, 0)
if pid == 6:
    ops.remove("sp", 329)
    ops.fix(329, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 329)
    ops.fix(329, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 330)
    ops.fix(330, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 330)
    ops.fix(330, 1, 0, 0)
if pid == 7:
    ops.remove("sp", 331)
    ops.fix(331, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 331)
    ops.fix(331, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 332)
    ops.fix(332, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 332)
    ops.fix(332, 1, 0, 0)
if pid == 8:
    ops.remove("sp", 333)
    ops.fix(333, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 333)
    ops.fix(333, 1, 0, 0)
if pid == 9:
    ops.remove("sp", 334)
    ops.fix(334, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 334)
    ops.fix(334, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 335)
    ops.fix(335, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 335)
    ops.fix(335, 1, 0, 0)
if pid == 10:
    ops.remove("sp", 336)
    ops.fix(336, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 336)
    ops.fix(336, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 337)
    ops.fix(337, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 337)
    ops.fix(337, 1, 0, 0)
if pid == 11:
    ops.remove("sp", 338)
    ops.fix(338, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 338)
    ops.fix(338, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 339)
    ops.fix(339, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 339)
    ops.fix(339, 1, 0, 0)
if pid == 12:
    ops.remove("sp", 340)
    ops.fix(340, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 340)
    ops.fix(340, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 341)
    ops.fix(341, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 341)
    ops.fix(341, 1, 0, 0)
if pid == 13:
    ops.remove("sp", 342)
    ops.fix(342, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 342)
    ops.fix(342, 1, 0, 0)
if pid == 14:
    ops.remove("sp", 343)
    ops.fix(343, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 343)
    ops.fix(343, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 344)
    ops.fix(344, 1, 0, 0)
if pid == 20:
    ops.remove("sp", 344)
    ops.fix(344, 1, 0, 0)
if pid == 15:
    ops.remove("sp", 345)
    ops.fix(345, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 345)
    ops.fix(345, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 346)
    ops.fix(346, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 346)
    ops.fix(346, 1, 0, 0)
if pid == 16:
    ops.remove("sp", 347)
    ops.fix(347, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 347)
    ops.fix(347, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 348)
    ops.fix(348, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 348)
    ops.fix(348, 1, 0, 0)
if pid == 17:
    ops.remove("sp", 349)
    ops.fix(349, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 349)
    ops.fix(349, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 350)
    ops.fix(350, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 350)
    ops.fix(350, 1, 0, 0)
if pid == 18:
    ops.remove("sp", 351)
    ops.fix(351, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 351)
    ops.fix(351, 1, 0, 0)
if pid == 19:
    ops.remove("sp", 352)
    ops.fix(352, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 352)
    ops.fix(352, 1, 0, 0)
if pid == 20:
    ops.remove("sp", 353)
    ops.fix(353, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 353)
    ops.fix(353, 1, 0, 0)
if pid == 21:
    ops.remove("sp", 354)
    ops.fix(354, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 354)
    ops.fix(354, 1, 0, 0)
if pid == 22:
    ops.remove("sp", 355)
    ops.fix(355, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 355)
    ops.fix(355, 1, 0, 0)
if pid == 23:
    ops.remove("sp", 356)
    ops.fix(356, 1, 0, 0)
if pid == 24:
    ops.remove("sp", 356)
    ops.fix(356, 1, 0, 0)
    ops.model("basicBuilder","-ndm",3,"-ndf",4)
if pid == 0:
    ops.remove("sp", 1)
    ops.fix(1, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 2)
    ops.fix(2, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 3)
    ops.fix(3, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 4)
    ops.fix(4, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 5)
    ops.fix(5, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 6)
    ops.fix(6, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 7)
    ops.fix(7, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 8)
    ops.fix(8, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 9)
    ops.fix(9, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 9)
    ops.fix(9, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 10)
    ops.fix(10, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 10)
    ops.fix(10, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 11)
    ops.fix(11, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 11)
    ops.fix(11, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 12)
    ops.fix(12, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 12)
    ops.fix(12, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 17)
    ops.fix(17, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 17)
    ops.fix(17, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 18)
    ops.fix(18, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 18)
    ops.fix(18, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 19)
    ops.fix(19, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 19)
    ops.fix(19, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 20)
    ops.fix(20, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 20)
    ops.fix(20, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 25)
    ops.fix(25, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 25)
    ops.fix(25, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 26)
    ops.fix(26, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 26)
    ops.fix(26, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 27)
    ops.fix(27, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 27)
    ops.fix(27, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 28)
    ops.fix(28, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 28)
    ops.fix(28, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 33)
    ops.fix(33, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 33)
    ops.fix(33, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 34)
    ops.fix(34, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 34)
    ops.fix(34, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 35)
    ops.fix(35, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 35)
    ops.fix(35, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 36)
    ops.fix(36, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 36)
    ops.fix(36, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 41)
    ops.fix(41, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 42)
    ops.fix(42, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 43)
    ops.fix(43, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 44)
    ops.fix(44, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 45)
    ops.fix(45, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 46)
    ops.fix(46, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 47)
    ops.fix(47, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 48)
    ops.fix(48, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 49)
    ops.fix(49, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 50)
    ops.fix(50, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 51)
    ops.fix(51, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 52)
    ops.fix(52, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 53)
    ops.fix(53, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 54)
    ops.fix(54, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 55)
    ops.fix(55, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 56)
    ops.fix(56, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 89)
    ops.fix(89, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 89)
    ops.fix(89, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 90)
    ops.fix(90, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 90)
    ops.fix(90, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 91)
    ops.fix(91, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 91)
    ops.fix(91, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 92)
    ops.fix(92, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 92)
    ops.fix(92, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 93)
    ops.fix(93, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 93)
    ops.fix(93, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 94)
    ops.fix(94, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 94)
    ops.fix(94, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 95)
    ops.fix(95, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 95)
    ops.fix(95, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 96)
    ops.fix(96, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 96)
    ops.fix(96, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 97)
    ops.fix(97, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 97)
    ops.fix(97, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 98)
    ops.fix(98, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 98)
    ops.fix(98, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 99)
    ops.fix(99, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 99)
    ops.fix(99, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 100)
    ops.fix(100, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 100)
    ops.fix(100, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 101)
    ops.fix(101, 0, 1, 0,0)
if pid == 20:
    ops.remove("sp", 101)
    ops.fix(101, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 102)
    ops.fix(102, 0, 1, 0,0)
if pid == 15:
    ops.remove("sp", 102)
    ops.fix(102, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 103)
    ops.fix(103, 0, 1, 0,0)
if pid == 10:
    ops.remove("sp", 103)
    ops.fix(103, 0, 1, 0,0)
if pid == 0:
    ops.remove("sp", 104)
    ops.fix(104, 0, 1, 0,0)
if pid == 5:
    ops.remove("sp", 104)
    ops.fix(104, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 105)
    ops.fix(105, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 105)
    ops.fix(105, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 106)
    ops.fix(106, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 106)
    ops.fix(106, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 107)
    ops.fix(107, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 107)
    ops.fix(107, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 108)
    ops.fix(108, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 108)
    ops.fix(108, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 109)
    ops.fix(109, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 109)
    ops.fix(109, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 110)
    ops.fix(110, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 110)
    ops.fix(110, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 111)
    ops.fix(111, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 111)
    ops.fix(111, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 112)
    ops.fix(112, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 112)
    ops.fix(112, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 113)
    ops.fix(113, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 113)
    ops.fix(113, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 114)
    ops.fix(114, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 114)
    ops.fix(114, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 115)
    ops.fix(115, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 115)
    ops.fix(115, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 116)
    ops.fix(116, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 116)
    ops.fix(116, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 117)
    ops.fix(117, 0, 1, 0,0)
if pid == 24:
    ops.remove("sp", 117)
    ops.fix(117, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 118)
    ops.fix(118, 0, 1, 0,0)
if pid == 19:
    ops.remove("sp", 118)
    ops.fix(118, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 119)
    ops.fix(119, 0, 1, 0,0)
if pid == 14:
    ops.remove("sp", 119)
    ops.fix(119, 0, 1, 0,0)
if pid == 4:
    ops.remove("sp", 120)
    ops.fix(120, 0, 1, 0,0)
if pid == 9:
    ops.remove("sp", 120)
    ops.fix(120, 0, 1, 0,0)
ops.model("basicBuilder","-ndm",3,"-ndf",3)
if pid == 20:
    ops.remove("sp", 217)
    ops.fix(217, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 218)
    ops.fix(218, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 219)
    ops.fix(219, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 220)
    ops.fix(220, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 221)
    ops.fix(221, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 227)
    ops.fix(227, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 228)
    ops.fix(228, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 229)
    ops.fix(229, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 230)
    ops.fix(230, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 231)
    ops.fix(231, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 237)
    ops.fix(237, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 238)
    ops.fix(238, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 239)
    ops.fix(239, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 240)
    ops.fix(240, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 241)
    ops.fix(241, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 247)
    ops.fix(247, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 248)
    ops.fix(248, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 249)
    ops.fix(249, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 250)
    ops.fix(250, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 251)
    ops.fix(251, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 257)
    ops.fix(257, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 258)
    ops.fix(258, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 259)
    ops.fix(259, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 260)
    ops.fix(260, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 261)
    ops.fix(261, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 262)
    ops.fix(262, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 263)
    ops.fix(263, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 264)
    ops.fix(264, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 265)
    ops.fix(265, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 266)
    ops.fix(266, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 267)
    ops.fix(267, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 268)
    ops.fix(268, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 269)
    ops.fix(269, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 270)
    ops.fix(270, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 271)
    ops.fix(271, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 272)
    ops.fix(272, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 273)
    ops.fix(273, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 274)
    ops.fix(274, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 275)
    ops.fix(275, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 276)
    ops.fix(276, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 357)
    ops.fix(357, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 358)
    ops.fix(358, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 358)
    ops.fix(358, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 359)
    ops.fix(359, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 360)
    ops.fix(360, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 360)
    ops.fix(360, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 361)
    ops.fix(361, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 362)
    ops.fix(362, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 362)
    ops.fix(362, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 363)
    ops.fix(363, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 364)
    ops.fix(364, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 364)
    ops.fix(364, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 365)
    ops.fix(365, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 366)
    ops.fix(366, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 367)
    ops.fix(367, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 367)
    ops.fix(367, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 368)
    ops.fix(368, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 369)
    ops.fix(369, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 369)
    ops.fix(369, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 370)
    ops.fix(370, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 371)
    ops.fix(371, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 371)
    ops.fix(371, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 372)
    ops.fix(372, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 373)
    ops.fix(373, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 373)
    ops.fix(373, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 374)
    ops.fix(374, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 375)
    ops.fix(375, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 376)
    ops.fix(376, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 376)
    ops.fix(376, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 377)
    ops.fix(377, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 378)
    ops.fix(378, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 378)
    ops.fix(378, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 379)
    ops.fix(379, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 380)
    ops.fix(380, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 380)
    ops.fix(380, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 381)
    ops.fix(381, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 382)
    ops.fix(382, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 382)
    ops.fix(382, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 383)
    ops.fix(383, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 384)
    ops.fix(384, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 385)
    ops.fix(385, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 385)
    ops.fix(385, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 386)
    ops.fix(386, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 387)
    ops.fix(387, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 387)
    ops.fix(387, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 388)
    ops.fix(388, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 389)
    ops.fix(389, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 389)
    ops.fix(389, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 390)
    ops.fix(390, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 391)
    ops.fix(391, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 391)
    ops.fix(391, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 392)
    ops.fix(392, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 393)
    ops.fix(393, 0, 1, 0)
if pid == 20:
    ops.remove("sp", 393)
    ops.fix(393, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 394)
    ops.fix(394, 0, 1, 0)
if pid == 15:
    ops.remove("sp", 394)
    ops.fix(394, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 395)
    ops.fix(395, 0, 1, 0)
if pid == 10:
    ops.remove("sp", 395)
    ops.fix(395, 0, 1, 0)
if pid == 0:
    ops.remove("sp", 396)
    ops.fix(396, 0, 1, 0)
if pid == 5:
    ops.remove("sp", 396)
    ops.fix(396, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 397)
    ops.fix(397, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 398)
    ops.fix(398, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 398)
    ops.fix(398, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 399)
    ops.fix(399, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 400)
    ops.fix(400, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 400)
    ops.fix(400, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 401)
    ops.fix(401, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 402)
    ops.fix(402, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 402)
    ops.fix(402, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 403)
    ops.fix(403, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 404)
    ops.fix(404, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 404)
    ops.fix(404, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 405)
    ops.fix(405, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 406)
    ops.fix(406, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 407)
    ops.fix(407, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 407)
    ops.fix(407, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 408)
    ops.fix(408, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 409)
    ops.fix(409, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 409)
    ops.fix(409, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 410)
    ops.fix(410, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 411)
    ops.fix(411, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 411)
    ops.fix(411, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 412)
    ops.fix(412, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 413)
    ops.fix(413, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 413)
    ops.fix(413, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 414)
    ops.fix(414, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 415)
    ops.fix(415, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 416)
    ops.fix(416, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 416)
    ops.fix(416, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 417)
    ops.fix(417, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 418)
    ops.fix(418, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 418)
    ops.fix(418, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 419)
    ops.fix(419, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 420)
    ops.fix(420, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 420)
    ops.fix(420, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 421)
    ops.fix(421, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 422)
    ops.fix(422, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 422)
    ops.fix(422, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 423)
    ops.fix(423, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 424)
    ops.fix(424, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 425)
    ops.fix(425, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 425)
    ops.fix(425, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 426)
    ops.fix(426, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 427)
    ops.fix(427, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 427)
    ops.fix(427, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 428)
    ops.fix(428, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 429)
    ops.fix(429, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 429)
    ops.fix(429, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 430)
    ops.fix(430, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 431)
    ops.fix(431, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 431)
    ops.fix(431, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 432)
    ops.fix(432, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 433)
    ops.fix(433, 0, 1, 0)
if pid == 24:
    ops.remove("sp", 433)
    ops.fix(433, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 434)
    ops.fix(434, 0, 1, 0)
if pid == 19:
    ops.remove("sp", 434)
    ops.fix(434, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 435)
    ops.fix(435, 0, 1, 0)
if pid == 14:
    ops.remove("sp", 435)
    ops.fix(435, 0, 1, 0)
if pid == 4:
    ops.remove("sp", 436)
    ops.fix(436, 0, 1, 0)
if pid == 9:
    ops.remove("sp", 436)
    ops.fix(436, 0, 1, 0)
    ops.model("basicBuilder","-ndm",3,"-ndf",4)
if pid == 20:
    ops.remove("sp", 2)
    ops.fix(2, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 4)
    ops.fix(4, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 6)
    ops.fix(6, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 8)
    ops.fix(8, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 21)
    ops.fix(21, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 21)
    ops.fix(21, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 22)
    ops.fix(22, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 22)
    ops.fix(22, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 23)
    ops.fix(23, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 23)
    ops.fix(23, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 24)
    ops.fix(24, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 24)
    ops.fix(24, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 37)
    ops.fix(37, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 37)
    ops.fix(37, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 38)
    ops.fix(38, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 38)
    ops.fix(38, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 39)
    ops.fix(39, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 39)
    ops.fix(39, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 40)
    ops.fix(40, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 40)
    ops.fix(40, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 41)
    ops.fix(41, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 42)
    ops.fix(42, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 43)
    ops.fix(43, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 44)
    ops.fix(44, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 49)
    ops.fix(49, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 50)
    ops.fix(50, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 51)
    ops.fix(51, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 52)
    ops.fix(52, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 121)
    ops.fix(121, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 121)
    ops.fix(121, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 122)
    ops.fix(122, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 122)
    ops.fix(122, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 123)
    ops.fix(123, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 123)
    ops.fix(123, 0, 0, 1,0)
if pid == 20:
    ops.remove("sp", 124)
    ops.fix(124, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 124)
    ops.fix(124, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 125)
    ops.fix(125, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 125)
    ops.fix(125, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 126)
    ops.fix(126, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 126)
    ops.fix(126, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 127)
    ops.fix(127, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 127)
    ops.fix(127, 0, 0, 1,0)
if pid == 21:
    ops.remove("sp", 128)
    ops.fix(128, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 128)
    ops.fix(128, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 129)
    ops.fix(129, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 129)
    ops.fix(129, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 130)
    ops.fix(130, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 130)
    ops.fix(130, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 131)
    ops.fix(131, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 131)
    ops.fix(131, 0, 0, 1,0)
if pid == 22:
    ops.remove("sp", 132)
    ops.fix(132, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 132)
    ops.fix(132, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 133)
    ops.fix(133, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 133)
    ops.fix(133, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 134)
    ops.fix(134, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 134)
    ops.fix(134, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 135)
    ops.fix(135, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 135)
    ops.fix(135, 0, 0, 1,0)
if pid == 23:
    ops.remove("sp", 136)
    ops.fix(136, 0, 0, 1,0)
if pid == 24:
    ops.remove("sp", 136)
    ops.fix(136, 0, 0, 1,0)
ops.model("basicBuilder","-ndm",3,"-ndf",3)
if pid == 20:
    ops.remove("sp", 232)
    ops.fix(232, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 233)
    ops.fix(233, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 234)
    ops.fix(234, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 235)
    ops.fix(235, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 236)
    ops.fix(236, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 252)
    ops.fix(252, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 253)
    ops.fix(253, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 254)
    ops.fix(254, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 255)
    ops.fix(255, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 256)
    ops.fix(256, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 257)
    ops.fix(257, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 258)
    ops.fix(258, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 259)
    ops.fix(259, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 260)
    ops.fix(260, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 261)
    ops.fix(261, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 267)
    ops.fix(267, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 268)
    ops.fix(268, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 269)
    ops.fix(269, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 270)
    ops.fix(270, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 271)
    ops.fix(271, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 437)
    ops.fix(437, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 437)
    ops.fix(437, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 438)
    ops.fix(438, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 439)
    ops.fix(439, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 439)
    ops.fix(439, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 440)
    ops.fix(440, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 441)
    ops.fix(441, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 441)
    ops.fix(441, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 442)
    ops.fix(442, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 443)
    ops.fix(443, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 443)
    ops.fix(443, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 444)
    ops.fix(444, 0, 0, 1)
if pid == 20:
    ops.remove("sp", 445)
    ops.fix(445, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 445)
    ops.fix(445, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 446)
    ops.fix(446, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 446)
    ops.fix(446, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 447)
    ops.fix(447, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 448)
    ops.fix(448, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 448)
    ops.fix(448, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 449)
    ops.fix(449, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 450)
    ops.fix(450, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 450)
    ops.fix(450, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 451)
    ops.fix(451, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 452)
    ops.fix(452, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 452)
    ops.fix(452, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 453)
    ops.fix(453, 0, 0, 1)
if pid == 21:
    ops.remove("sp", 454)
    ops.fix(454, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 454)
    ops.fix(454, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 455)
    ops.fix(455, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 455)
    ops.fix(455, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 456)
    ops.fix(456, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 457)
    ops.fix(457, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 457)
    ops.fix(457, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 458)
    ops.fix(458, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 459)
    ops.fix(459, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 459)
    ops.fix(459, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 460)
    ops.fix(460, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 461)
    ops.fix(461, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 461)
    ops.fix(461, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 462)
    ops.fix(462, 0, 0, 1)
if pid == 22:
    ops.remove("sp", 463)
    ops.fix(463, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 463)
    ops.fix(463, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 464)
    ops.fix(464, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 464)
    ops.fix(464, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 465)
    ops.fix(465, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 466)
    ops.fix(466, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 466)
    ops.fix(466, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 467)
    ops.fix(467, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 468)
    ops.fix(468, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 468)
    ops.fix(468, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 469)
    ops.fix(469, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 470)
    ops.fix(470, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 470)
    ops.fix(470, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 471)
    ops.fix(471, 0, 0, 1)
if pid == 23:
    ops.remove("sp", 472)
    ops.fix(472, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 472)
    ops.fix(472, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 473)
    ops.fix(473, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 474)
    ops.fix(474, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 475)
    ops.fix(475, 0, 0, 1)
if pid == 24:
    ops.remove("sp", 476)
    ops.fix(476, 0, 0, 1)
    ops.model("basicBuilder","-ndm",3,"-ndf",4)
if pid == 0:
    ops.remove("sp", 1)
    ops.fix(1, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 3)
    ops.fix(3, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 5)
    ops.fix(5, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 7)
    ops.fix(7, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 13)
    ops.fix(13, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 13)
    ops.fix(13, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 14)
    ops.fix(14, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 14)
    ops.fix(14, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 15)
    ops.fix(15, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 15)
    ops.fix(15, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 16)
    ops.fix(16, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 16)
    ops.fix(16, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 29)
    ops.fix(29, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 29)
    ops.fix(29, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 30)
    ops.fix(30, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 30)
    ops.fix(30, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 31)
    ops.fix(31, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 31)
    ops.fix(31, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 32)
    ops.fix(32, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 32)
    ops.fix(32, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 45)
    ops.fix(45, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 46)
    ops.fix(46, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 47)
    ops.fix(47, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 48)
    ops.fix(48, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 53)
    ops.fix(53, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 54)
    ops.fix(54, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 55)
    ops.fix(55, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 56)
    ops.fix(56, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 137)
    ops.fix(137, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 137)
    ops.fix(137, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 138)
    ops.fix(138, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 138)
    ops.fix(138, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 139)
    ops.fix(139, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 139)
    ops.fix(139, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 140)
    ops.fix(140, 0, 0, 0,1)
if pid == 4:
    ops.remove("sp", 140)
    ops.fix(140, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 141)
    ops.fix(141, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 141)
    ops.fix(141, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 142)
    ops.fix(142, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 142)
    ops.fix(142, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 143)
    ops.fix(143, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 143)
    ops.fix(143, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 144)
    ops.fix(144, 0, 0, 0,1)
if pid == 3:
    ops.remove("sp", 144)
    ops.fix(144, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 145)
    ops.fix(145, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 145)
    ops.fix(145, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 146)
    ops.fix(146, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 146)
    ops.fix(146, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 147)
    ops.fix(147, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 147)
    ops.fix(147, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 148)
    ops.fix(148, 0, 0, 0,1)
if pid == 2:
    ops.remove("sp", 148)
    ops.fix(148, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 149)
    ops.fix(149, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 149)
    ops.fix(149, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 150)
    ops.fix(150, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 150)
    ops.fix(150, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 151)
    ops.fix(151, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 151)
    ops.fix(151, 0, 0, 0,1)
if pid == 0:
    ops.remove("sp", 152)
    ops.fix(152, 0, 0, 0,1)
if pid == 1:
    ops.remove("sp", 152)
    ops.fix(152, 0, 0, 0,1)
ops.model("basicBuilder","-ndm",3,"-ndf",3)
if pid == 0:
    ops.remove("sp", 222)
    ops.fix(222, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 223)
    ops.fix(223, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 224)
    ops.fix(224, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 225)
    ops.fix(225, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 226)
    ops.fix(226, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 242)
    ops.fix(242, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 243)
    ops.fix(243, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 244)
    ops.fix(244, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 245)
    ops.fix(245, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 246)
    ops.fix(246, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 262)
    ops.fix(262, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 263)
    ops.fix(263, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 264)
    ops.fix(264, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 265)
    ops.fix(265, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 266)
    ops.fix(266, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 272)
    ops.fix(272, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 273)
    ops.fix(273, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 274)
    ops.fix(274, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 275)
    ops.fix(275, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 276)
    ops.fix(276, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 477)
    ops.fix(477, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 477)
    ops.fix(477, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 478)
    ops.fix(478, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 479)
    ops.fix(479, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 479)
    ops.fix(479, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 480)
    ops.fix(480, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 481)
    ops.fix(481, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 481)
    ops.fix(481, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 482)
    ops.fix(482, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 483)
    ops.fix(483, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 483)
    ops.fix(483, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 484)
    ops.fix(484, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 485)
    ops.fix(485, 0, 0, 0)
if pid == 4:
    ops.remove("sp", 485)
    ops.fix(485, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 486)
    ops.fix(486, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 486)
    ops.fix(486, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 487)
    ops.fix(487, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 488)
    ops.fix(488, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 488)
    ops.fix(488, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 489)
    ops.fix(489, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 490)
    ops.fix(490, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 490)
    ops.fix(490, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 491)
    ops.fix(491, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 492)
    ops.fix(492, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 492)
    ops.fix(492, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 493)
    ops.fix(493, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 494)
    ops.fix(494, 0, 0, 0)
if pid == 3:
    ops.remove("sp", 494)
    ops.fix(494, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 495)
    ops.fix(495, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 495)
    ops.fix(495, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 496)
    ops.fix(496, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 497)
    ops.fix(497, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 497)
    ops.fix(497, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 498)
    ops.fix(498, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 499)
    ops.fix(499, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 499)
    ops.fix(499, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 500)
    ops.fix(500, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 501)
    ops.fix(501, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 501)
    ops.fix(501, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 502)
    ops.fix(502, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 503)
    ops.fix(503, 0, 0, 0)
if pid == 2:
    ops.remove("sp", 503)
    ops.fix(503, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 504)
    ops.fix(504, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 504)
    ops.fix(504, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 505)
    ops.fix(505, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 506)
    ops.fix(506, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 506)
    ops.fix(506, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 507)
    ops.fix(507, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 508)
    ops.fix(508, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 508)
    ops.fix(508, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 509)
    ops.fix(509, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 510)
    ops.fix(510, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 510)
    ops.fix(510, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 511)
    ops.fix(511, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 512)
    ops.fix(512, 0, 0, 0)
if pid == 1:
    ops.remove("sp", 512)
    ops.fix(512, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 513)
    ops.fix(513, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 514)
    ops.fix(514, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 515)
    ops.fix(515, 0, 0, 0)
if pid == 0:
    ops.remove("sp", 516)
    ops.fix(516, 0, 0, 0)
if pid == 0:
    ops.element('20_8_BrickUP',211,45, 92, 12, 1, 149, 153, 69, 13, 365,364, 221, 262, 517, 519, 313, 504, 513, 518,304, 222, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 0:
    ops.element('20_8_BrickUP',212,46, 96, 92, 45, 150, 154, 153, 149, 374,373, 365, 263, 520, 522, 517, 506, 514, 521,518, 513, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 0:
    ops.element('20_8_BrickUP',213,47, 100, 96, 46, 151, 155, 154, 150, 383,382, 374, 264, 523, 525, 520, 508, 515, 524,521, 514, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 0:
    ops.element('20_8_BrickUP',214,48, 104, 100, 47, 152, 156, 155, 151, 392,391, 383, 265, 526, 528, 523, 510, 516, 527,524, 515, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 0:
    ops.element('20_8_BrickUP',215,5, 28, 104, 48, 29, 73, 156, 152, 241,396, 392, 266, 318, 529, 526, 512, 242, 317,527, 516, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 1:
    ops.element('20_8_BrickUP',216,149, 153, 69, 13, 145, 157, 70, 14, 517,519, 313, 504, 530, 532, 314, 495, 505, 531,306, 223, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 1:
    ops.element('20_8_BrickUP',217,150, 154, 153, 149, 146, 158, 157, 145, 520,522, 517, 506, 533, 535, 530, 497, 507, 534,531, 505, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 1:
    ops.element('20_8_BrickUP',218,151, 155, 154, 150, 147, 159, 158, 146, 523,525, 520, 508, 536, 538, 533, 499, 509, 537,534, 507, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 1:
    ops.element('20_8_BrickUP',219,152, 156, 155, 151, 148, 160, 159, 147, 526,528, 523, 510, 539, 541, 536, 501, 511, 540,537, 509, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 1:
    ops.element('20_8_BrickUP',220,29, 73, 156, 152, 30, 74, 160, 148, 318,529, 526, 512, 320, 542, 539, 503, 243, 319,540, 511, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 2:
    ops.element('20_8_BrickUP',221,145, 157, 70, 14, 141, 161, 71, 15, 530,532, 314, 495, 543, 545, 315, 486, 496, 544,308, 224, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 2:
    ops.element('20_8_BrickUP',222,146, 158, 157, 145, 142, 162, 161, 141, 533,535, 530, 497, 546, 548, 543, 488, 498, 547,544, 496, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 2:
    ops.element('20_8_BrickUP',223,147, 159, 158, 146, 143, 163, 162, 142, 536,538, 533, 499, 549, 551, 546, 490, 500, 550,547, 498, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 2:
    ops.element('20_8_BrickUP',224,148, 160, 159, 147, 144, 164, 163, 143, 539,541, 536, 501, 552, 554, 549, 492, 502, 553,550, 500, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 2:
    ops.element('20_8_BrickUP',225,30, 74, 160, 148, 31, 75, 164, 144, 320,542, 539, 503, 322, 555, 552, 494, 244, 321,553, 502, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 3:
    ops.element('20_8_BrickUP',226,141, 161, 71, 15, 137, 165, 72, 16, 543,545, 315, 486, 556, 558, 316, 477, 487, 557,310, 225, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 3:
    ops.element('20_8_BrickUP',227,142, 162, 161, 141, 138, 166, 165, 137, 546,548, 543, 488, 559, 561, 556, 479, 489, 560,557, 487, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 3:
    ops.element('20_8_BrickUP',228,143, 163, 162, 142, 139, 167, 166, 138, 549,551, 546, 490, 562, 564, 559, 481, 491, 563,560, 489, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 3:
    ops.element('20_8_BrickUP',229,144, 164, 163, 143, 140, 168, 167, 139, 552,554, 549, 492, 565, 567, 562, 483, 493, 566,563, 491, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 3:
    ops.element('20_8_BrickUP',230,31, 75, 164, 144, 32, 76, 168, 140, 322,555, 552, 494, 324, 568, 565, 485, 245, 323,566, 493, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 4:
    ops.element('20_8_BrickUP',231,137, 165, 72, 16, 53, 120, 20, 3, 556,558, 316, 477, 432, 436, 231, 272, 478, 569,312, 226, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 4:
    ops.element('20_8_BrickUP',232,138, 166, 165, 137, 54, 116, 120, 53, 559,561, 556, 479, 423, 431, 432, 273, 480, 570,569, 478, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 4:
    ops.element('20_8_BrickUP',233,139, 167, 166, 138, 55, 112, 116, 54, 562,564, 559, 481, 414, 422, 423, 274, 482, 571,570, 480, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 4:
    ops.element('20_8_BrickUP',234,140, 168, 167, 139, 56, 108, 112, 55, 565,567, 562, 483, 405, 413, 414, 275, 484, 572,571, 482, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 4:
    ops.element('20_8_BrickUP',235,32, 76, 168, 140, 7, 36, 108, 56, 324,568, 565, 485, 251, 404, 405, 276, 246, 325,572, 484, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 5:
    ops.element('20_8_BrickUP',236,92, 91, 11, 12, 153, 169, 65, 69, 363,362, 220, 364, 573, 575, 305, 519, 518, 574,295, 304, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 5:
    ops.element('20_8_BrickUP',237,96, 95, 91, 92, 154, 170, 169, 153, 372,371, 363, 373, 576, 578, 573, 522, 521, 577,574, 518, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 5:
    ops.element('20_8_BrickUP',238,100, 99, 95, 96, 155, 171, 170, 154, 381,380, 372, 382, 579, 581, 576, 525, 524, 580,577, 521, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 5:
    ops.element('20_8_BrickUP',239,104, 103, 99, 100, 156, 172, 171, 155, 390,389, 381, 391, 582, 584, 579, 528, 527, 583,580, 524, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 5:
    ops.element('20_8_BrickUP',240,28, 27, 103, 104, 73, 77, 172, 156, 240,395, 390, 396, 327, 585, 582, 529, 317, 326,583, 527, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 6:
    ops.element('20_8_BrickUP',241,153, 169, 65, 69, 157, 173, 66, 70, 573,575, 305, 519, 586, 588, 307, 532, 531, 587,297, 306, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 6:
    ops.element('20_8_BrickUP',242,154, 170, 169, 153, 158, 174, 173, 157, 576,578, 573, 522, 589, 591, 586, 535, 534, 590,587, 531, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 6:
    ops.element('20_8_BrickUP',243,155, 171, 170, 154, 159, 175, 174, 158, 579,581, 576, 525, 592, 594, 589, 538, 537, 593,590, 534, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 6:
    ops.element('20_8_BrickUP',244,156, 172, 171, 155, 160, 176, 175, 159, 582,584, 579, 528, 595, 597, 592, 541, 540, 596,593, 537, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 6:
    ops.element('20_8_BrickUP',245,73, 77, 172, 156, 74, 78, 176, 160, 327,585, 582, 529, 329, 598, 595, 542, 319, 328,596, 540, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 7:
    ops.element('20_8_BrickUP',246,157, 173, 66, 70, 161, 177, 67, 71, 586,588, 307, 532, 599, 601, 309, 545, 544, 600,299, 308, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 7:
    ops.element('20_8_BrickUP',247,158, 174, 173, 157, 162, 178, 177, 161, 589,591, 586, 535, 602, 604, 599, 548, 547, 603,600, 544, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 7:
    ops.element('20_8_BrickUP',248,159, 175, 174, 158, 163, 179, 178, 162, 592,594, 589, 538, 605, 607, 602, 551, 550, 606,603, 547, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 7:
    ops.element('20_8_BrickUP',249,160, 176, 175, 159, 164, 180, 179, 163, 595,597, 592, 541, 608, 610, 605, 554, 553, 609,606, 550, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 7:
    ops.element('20_8_BrickUP',250,74, 78, 176, 160, 75, 79, 180, 164, 329,598, 595, 542, 331, 611, 608, 555, 321, 330,609, 553, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 8:
    ops.element('20_8_BrickUP',251,161, 177, 67, 71, 165, 181, 68, 72, 599,601, 309, 545, 612, 614, 311, 558, 557, 613,301, 310, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 8:
    ops.element('20_8_BrickUP',252,162, 178, 177, 161, 166, 182, 181, 165, 602,604, 599, 548, 615, 617, 612, 561, 560, 616,613, 557, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 8:
    ops.element('20_8_BrickUP',253,163, 179, 178, 162, 167, 183, 182, 166, 605,607, 602, 551, 618, 620, 615, 564, 563, 619,616, 560, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 8:
    ops.element('20_8_BrickUP',254,164, 180, 179, 163, 168, 184, 183, 167, 608,610, 605, 554, 621, 623, 618, 567, 566, 622,619, 563, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 8:
    ops.element('20_8_BrickUP',255,75, 79, 180, 164, 76, 80, 184, 168, 331,611, 608, 555, 333, 624, 621, 568, 323, 332,622, 566, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 9:
    ops.element('20_8_BrickUP',256,165, 181, 68, 72, 120, 119, 19, 20, 612,614, 311, 558, 430, 435, 230, 436, 569, 625,303, 312, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 9:
    ops.element('20_8_BrickUP',257,166, 182, 181, 165, 116, 115, 119, 120, 615,617, 612, 561, 421, 429, 430, 431, 570, 626,625, 569, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 9:
    ops.element('20_8_BrickUP',258,167, 183, 182, 166, 112, 111, 115, 116, 618,620, 615, 564, 412, 420, 421, 422, 571, 627,626, 570, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 9:
    ops.element('20_8_BrickUP',259,168, 184, 183, 167, 108, 107, 111, 112, 621,623, 618, 567, 403, 411, 412, 413, 572, 628,627, 571, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 9:
    ops.element('20_8_BrickUP',260,76, 80, 184, 168, 36, 35, 107, 108, 333,624, 621, 568, 250, 402, 403, 404, 325, 334,628, 572, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 10:
    ops.element('20_8_BrickUP',261,91, 90, 10, 11, 169, 185, 61, 65, 361,360, 219, 362, 629, 631, 296, 575, 574, 630,286, 295, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 10:
    ops.element('20_8_BrickUP',262,95, 94, 90, 91, 170, 186, 185, 169, 370,369, 361, 371, 632, 634, 629, 578, 577, 633,630, 574, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 10:
    ops.element('20_8_BrickUP',263,99, 98, 94, 95, 171, 187, 186, 170, 379,378, 370, 380, 635, 637, 632, 581, 580, 636,633, 577, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 10:
    ops.element('20_8_BrickUP',264,103, 102, 98, 99, 172, 188, 187, 171, 388,387, 379, 389, 638, 640, 635, 584, 583, 639,636, 580, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 10:
    ops.element('20_8_BrickUP',265,27, 26, 102, 103, 77, 81, 188, 172, 239,394, 388, 395, 336, 641, 638, 585, 326, 335,639, 583, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 11:
    ops.element('20_8_BrickUP',266,169, 185, 61, 65, 173, 189, 62, 66, 629,631, 296, 575, 642, 644, 298, 588, 587, 643,288, 297, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 11:
    ops.element('20_8_BrickUP',267,170, 186, 185, 169, 174, 190, 189, 173, 632,634, 629, 578, 645, 647, 642, 591, 590, 646,643, 587, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 11:
    ops.element('20_8_BrickUP',268,171, 187, 186, 170, 175, 191, 190, 174, 635,637, 632, 581, 648, 650, 645, 594, 593, 649,646, 590, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 11:
    ops.element('20_8_BrickUP',269,172, 188, 187, 171, 176, 192, 191, 175, 638,640, 635, 584, 651, 653, 648, 597, 596, 652,649, 593, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 11:
    ops.element('20_8_BrickUP',270,77, 81, 188, 172, 78, 82, 192, 176, 336,641, 638, 585, 338, 654, 651, 598, 328, 337,652, 596, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 12:
    ops.element('20_8_BrickUP',271,173, 189, 62, 66, 177, 193, 63, 67, 642,644, 298, 588, 655, 657, 300, 601, 600, 656,290, 299, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 12:
    ops.element('20_8_BrickUP',272,174, 190, 189, 173, 178, 194, 193, 177, 645,647, 642, 591, 658, 660, 655, 604, 603, 659,656, 600, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 12:
    ops.element('20_8_BrickUP',273,175, 191, 190, 174, 179, 195, 194, 178, 648,650, 645, 594, 661, 663, 658, 607, 606, 662,659, 603, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 12:
    ops.element('20_8_BrickUP',274,176, 192, 191, 175, 180, 196, 195, 179, 651,653, 648, 597, 664, 666, 661, 610, 609, 665,662, 606, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 12:
    ops.element('20_8_BrickUP',275,78, 82, 192, 176, 79, 83, 196, 180, 338,654, 651, 598, 340, 667, 664, 611, 330, 339,665, 609, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 13:
    ops.element('20_8_BrickUP',276,177, 193, 63, 67, 181, 197, 64, 68, 655,657, 300, 601, 668, 670, 302, 614, 613, 669,292, 301, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 13:
    ops.element('20_8_BrickUP',277,178, 194, 193, 177, 182, 198, 197, 181, 658,660, 655, 604, 671, 673, 668, 617, 616, 672,669, 613, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 13:
    ops.element('20_8_BrickUP',278,179, 195, 194, 178, 183, 199, 198, 182, 661,663, 658, 607, 674, 676, 671, 620, 619, 675,672, 616, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 13:
    ops.element('20_8_BrickUP',279,180, 196, 195, 179, 184, 200, 199, 183, 664,666, 661, 610, 677, 679, 674, 623, 622, 678,675, 619, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 13:
    ops.element('20_8_BrickUP',280,79, 83, 196, 180, 80, 84, 200, 184, 340,667, 664, 611, 342, 680, 677, 624, 332, 341,678, 622, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 14:
    ops.element('20_8_BrickUP',281,181, 197, 64, 68, 119, 118, 18, 19, 668,670, 302, 614, 428, 434, 229, 435, 625, 681,294, 303, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 14:
    ops.element('20_8_BrickUP',282,182, 198, 197, 181, 115, 114, 118, 119, 671,673, 668, 617, 419, 427, 428, 429, 626, 682,681, 625, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 14:
    ops.element('20_8_BrickUP',283,183, 199, 198, 182, 111, 110, 114, 115, 674,676, 671, 620, 410, 418, 419, 420, 627, 683,682, 626, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 14:
    ops.element('20_8_BrickUP',284,184, 200, 199, 183, 107, 106, 110, 111, 677,679, 674, 623, 401, 409, 410, 411, 628, 684,683, 627, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 14:
    ops.element('20_8_BrickUP',285,80, 84, 200, 184, 35, 34, 106, 107, 342,680, 677, 624, 249, 400, 401, 402, 334, 343,684, 628, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 15:
    ops.element('20_8_BrickUP',286,90, 89, 9, 10, 185, 201, 57, 61, 359,358, 218, 360, 685, 687, 287, 631, 630, 686,277, 286, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 15:
    ops.element('20_8_BrickUP',287,94, 93, 89, 90, 186, 202, 201, 185, 368,367, 359, 369, 688, 690, 685, 634, 633, 689,686, 630, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 15:
    ops.element('20_8_BrickUP',288,98, 97, 93, 94, 187, 203, 202, 186, 377,376, 368, 378, 691, 693, 688, 637, 636, 692,689, 633, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 15:
    ops.element('20_8_BrickUP',289,102, 101, 97, 98, 188, 204, 203, 187, 386,385, 377, 387, 694, 696, 691, 640, 639, 695,692, 636, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 15:
    ops.element('20_8_BrickUP',290,26, 25, 101, 102, 81, 85, 204, 188, 238,393, 386, 394, 345, 697, 694, 641, 335, 344,695, 639, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 16:
    ops.element('20_8_BrickUP',291,185, 201, 57, 61, 189, 205, 58, 62, 685,687, 287, 631, 698, 700, 289, 644, 643, 699,279, 288, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 16:
    ops.element('20_8_BrickUP',292,186, 202, 201, 185, 190, 206, 205, 189, 688,690, 685, 634, 701, 703, 698, 647, 646, 702,699, 643, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 16:
    ops.element('20_8_BrickUP',293,187, 203, 202, 186, 191, 207, 206, 190, 691,693, 688, 637, 704, 706, 701, 650, 649, 705,702, 646, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 16:
    ops.element('20_8_BrickUP',294,188, 204, 203, 187, 192, 208, 207, 191, 694,696, 691, 640, 707, 709, 704, 653, 652, 708,705, 649, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 16:
    ops.element('20_8_BrickUP',295,81, 85, 204, 188, 82, 86, 208, 192, 345,697, 694, 641, 347, 710, 707, 654, 337, 346,708, 652, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 17:
    ops.element('20_8_BrickUP',296,189, 205, 58, 62, 193, 209, 59, 63, 698,700, 289, 644, 711, 713, 291, 657, 656, 712,281, 290, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 17:
    ops.element('20_8_BrickUP',297,190, 206, 205, 189, 194, 210, 209, 193, 701,703, 698, 647, 714, 716, 711, 660, 659, 715,712, 656, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 17:
    ops.element('20_8_BrickUP',298,191, 207, 206, 190, 195, 211, 210, 194, 704,706, 701, 650, 717, 719, 714, 663, 662, 718,715, 659, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 17:
    ops.element('20_8_BrickUP',299,192, 208, 207, 191, 196, 212, 211, 195, 707,709, 704, 653, 720, 722, 717, 666, 665, 721,718, 662, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 17:
    ops.element('20_8_BrickUP',300,82, 86, 208, 192, 83, 87, 212, 196, 347,710, 707, 654, 349, 723, 720, 667, 339, 348,721, 665, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 18:
    ops.element('20_8_BrickUP',301,193, 209, 59, 63, 197, 213, 60, 64, 711,713, 291, 657, 724, 726, 293, 670, 669, 725,283, 292, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 18:
    ops.element('20_8_BrickUP',302,194, 210, 209, 193, 198, 214, 213, 197, 714,716, 711, 660, 727, 729, 724, 673, 672, 728,725, 669, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 18:
    ops.element('20_8_BrickUP',303,195, 211, 210, 194, 199, 215, 214, 198, 717,719, 714, 663, 730, 732, 727, 676, 675, 731,728, 672, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 18:
    ops.element('20_8_BrickUP',304,196, 212, 211, 195, 200, 216, 215, 199, 720,722, 717, 666, 733, 735, 730, 679, 678, 734,731, 675, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 18:
    ops.element('20_8_BrickUP',305,83, 87, 212, 196, 84, 88, 216, 200, 349,723, 720, 667, 351, 736, 733, 680, 341, 350,734, 678, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 19:
    ops.element('20_8_BrickUP',306,197, 213, 60, 64, 118, 117, 17, 18, 724,726, 293, 670, 426, 433, 228, 434, 681, 737,285, 294, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 19:
    ops.element('20_8_BrickUP',307,198, 214, 213, 197, 114, 113, 117, 118, 727,729, 724, 673, 417, 425, 426, 427, 682, 738,737, 681, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 19:
    ops.element('20_8_BrickUP',308,199, 215, 214, 198, 110, 109, 113, 114, 730,732, 727, 676, 408, 416, 417, 418, 683, 739,738, 682, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 19:
    ops.element('20_8_BrickUP',309,200, 216, 215, 199, 106, 105, 109, 110, 733,735, 730, 679, 399, 407, 408, 409, 684, 740,739, 683, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 19:
    ops.element('20_8_BrickUP',310,84, 88, 216, 200, 34, 33, 105, 106, 351,736, 733, 680, 248, 398, 399, 400, 343, 352,740, 684, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 20:
    ops.element('20_8_BrickUP',311,89, 41, 2, 9, 201, 121, 21, 57, 357,257, 217, 358, 741, 437, 278, 687, 686, 438,232, 277, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 20:
    ops.element('20_8_BrickUP',312,93, 42, 41, 89, 202, 122, 121, 201, 366,258, 357, 367, 742, 439, 741, 690, 689, 440,438, 686, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 20:
    ops.element('20_8_BrickUP',313,97, 43, 42, 93, 203, 123, 122, 202, 375,259, 366, 376, 743, 441, 742, 693, 692, 442,440, 689, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 20:
    ops.element('20_8_BrickUP',314,101, 44, 43, 97, 204, 124, 123, 203, 384,260, 375, 385, 744, 443, 743, 696, 695, 444,442, 692, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 20:
    ops.element('20_8_BrickUP',315,25, 6, 44, 101, 85, 37, 124, 204, 237,261, 384, 393, 353, 445, 744, 697, 344, 252,444, 695, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 21:
    ops.element('20_8_BrickUP',316,201, 121, 21, 57, 205, 125, 22, 58, 741,437, 278, 687, 745, 446, 280, 700, 699, 447,233, 279, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 21:
    ops.element('20_8_BrickUP',317,202, 122, 121, 201, 206, 126, 125, 205, 742,439, 741, 690, 746, 448, 745, 703, 702, 449,447, 699, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 21:
    ops.element('20_8_BrickUP',318,203, 123, 122, 202, 207, 127, 126, 206, 743,441, 742, 693, 747, 450, 746, 706, 705, 451,449, 702, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 21:
    ops.element('20_8_BrickUP',319,204, 124, 123, 203, 208, 128, 127, 207, 744,443, 743, 696, 748, 452, 747, 709, 708, 453,451, 705, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 21:
    ops.element('20_8_BrickUP',320,85, 37, 124, 204, 86, 38, 128, 208, 353,445, 744, 697, 354, 454, 748, 710, 346, 253,453, 708, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 22:
    ops.element('20_8_BrickUP',321,205, 125, 22, 58, 209, 129, 23, 59, 745,446, 280, 700, 749, 455, 282, 713, 712, 456,234, 281, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 22:
    ops.element('20_8_BrickUP',322,206, 126, 125, 205, 210, 130, 129, 209, 746,448, 745, 703, 750, 457, 749, 716, 715, 458,456, 712, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 22:
    ops.element('20_8_BrickUP',323,207, 127, 126, 206, 211, 131, 130, 210, 747,450, 746, 706, 751, 459, 750, 719, 718, 460,458, 715, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 22:
    ops.element('20_8_BrickUP',324,208, 128, 127, 207, 212, 132, 131, 211, 748,452, 747, 709, 752, 461, 751, 722, 721, 462,460, 718, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 22:
    ops.element('20_8_BrickUP',325,86, 38, 128, 208, 87, 39, 132, 212, 354,454, 748, 710, 355, 463, 752, 723, 348, 254,462, 721, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 23:
    ops.element('20_8_BrickUP',326,209, 129, 23, 59, 213, 133, 24, 60, 749,455, 282, 713, 753, 464, 284, 726, 725, 465,235, 283, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 23:
    ops.element('20_8_BrickUP',327,210, 130, 129, 209, 214, 134, 133, 213, 750,457, 749, 716, 754, 466, 753, 729, 728, 467,465, 725, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 23:
    ops.element('20_8_BrickUP',328,211, 131, 130, 210, 215, 135, 134, 214, 751,459, 750, 719, 755, 468, 754, 732, 731, 469,467, 728, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 23:
    ops.element('20_8_BrickUP',329,212, 132, 131, 211, 216, 136, 135, 215, 752,461, 751, 722, 756, 470, 755, 735, 734, 471,469, 731, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 23:
    ops.element('20_8_BrickUP',330,87, 39, 132, 212, 88, 40, 136, 216, 355,463, 752, 723, 356, 472, 756, 736, 350, 255,471, 734, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 24:
    ops.element('20_8_BrickUP',331,213, 133, 24, 60, 117, 49, 4, 17, 753,464, 284, 726, 424, 267, 227, 433, 737, 473,236, 285, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 24:
    ops.element('20_8_BrickUP',332,214, 134, 133, 213, 113, 50, 49, 117, 754,466, 753, 729, 415, 268, 424, 425, 738, 474,473, 737, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 24:
    ops.element('20_8_BrickUP',333,215, 135, 134, 214, 109, 51, 50, 113, 755,468, 754, 732, 406, 269, 415, 416, 739, 475,474, 738, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 24:
    ops.element('20_8_BrickUP',334,216, 136, 135, 215, 105, 52, 51, 109, 756,470, 755, 735, 397, 270, 406, 407, 740, 476,475, 739, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 24:
    ops.element('20_8_BrickUP',335,88, 40, 136, 216, 33, 8, 52, 105, 356,472, 756, 736, 247, 271, 397, 398, 352, 256,476, 740, 1, 2.2e6, 1, 1.0, 1.0, 1.0, 0.0, 0.0,-9.81)
if pid == 22:
    ops.node(757,5.0,5.0,0.0)
    ops.node(758,5.0,5.0,0.0)
    ops.fix(758,1,1,1)
    ops.fix(757,0,1,1)
    ops.equalDOF(int(458), int(757),1)
    ops.uniaxialMaterial('Viscous',2,12000.0, 1)
    dir = [1]
    ops.element('zeroLength', 336, 758, 757, '-mat', 2, '-dir', *dir)
if pid == 0:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',1, 519,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',1, 519,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',1, 519,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',45, 522,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',45, 522,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',45, 522,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',46, 525,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',46, 525,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',46, 525,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',47, 528,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',47, 528,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',47, 528,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',5, 529,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',5, 529,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',5, 529,'-dof', 4, 'vel')
if pid == 1:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',13, 532,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',13, 532,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',13, 532,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',145, 535,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',145, 535,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',145, 535,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',146, 538,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',146, 538,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',146, 538,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',147, 541,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',147, 541,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',147, 541,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',29, 542,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',29, 542,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',29, 542,'-dof', 4, 'vel')
if pid == 2:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',14, 545,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',14, 545,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',14, 545,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',141, 548,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',141, 548,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',141, 548,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',142, 551,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',142, 551,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',142, 551,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',143, 554,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',143, 554,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',143, 554,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',30, 555,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',30, 555,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',30, 555,'-dof', 4, 'vel')
if pid == 3:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',15, 558,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',15, 558,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',15, 558,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',137, 561,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',137, 561,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',137, 561,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',138, 564,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',138, 564,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',138, 564,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',139, 567,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',139, 567,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',139, 567,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',31, 568,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',31, 568,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',31, 568,'-dof', 4, 'vel')
if pid == 4:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',3, 569,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',3, 569,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',3, 569,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',53, 570,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',53, 570,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',53, 570,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',54, 571,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',54, 571,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',54, 571,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',55, 572,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',55, 572,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',55, 572,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',7, 572,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',7, 572,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',7, 572,'-dof', 4, 'vel')
if pid == 5:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',11, 575,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',11, 575,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',11, 575,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',91, 578,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',91, 578,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',91, 578,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',95, 581,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',95, 581,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',95, 581,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',99, 584,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',99, 584,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',99, 584,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',27, 585,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',27, 585,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',27, 585,'-dof', 4, 'vel')
if pid == 6:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',65, 588,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',65, 588,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',65, 588,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',153, 591,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',153, 591,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',153, 591,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',154, 594,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',154, 594,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',154, 594,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',155, 597,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',155, 597,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',155, 597,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',73, 598,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',73, 598,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',73, 598,'-dof', 4, 'vel')
if pid == 7:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',66, 601,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',66, 601,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',66, 601,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',157, 604,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',157, 604,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',157, 604,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',158, 607,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',158, 607,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',158, 607,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',159, 610,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',159, 610,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',159, 610,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',74, 611,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',74, 611,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',74, 611,'-dof', 4, 'vel')
if pid == 8:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',67, 614,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',67, 614,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',67, 614,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',161, 617,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',161, 617,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',161, 617,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',162, 620,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',162, 620,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',162, 620,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',163, 623,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',163, 623,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',163, 623,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',75, 624,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',75, 624,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',75, 624,'-dof', 4, 'vel')
if pid == 9:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',19, 625,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',19, 625,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',19, 625,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',115, 626,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',115, 626,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',115, 626,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',111, 627,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',111, 627,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',111, 627,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',107, 628,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',107, 628,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',107, 628,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',35, 628,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',35, 628,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',35, 628,'-dof', 4, 'vel')
if pid == 10:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',10, 631,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',10, 631,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',10, 631,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',90, 634,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',90, 634,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',90, 634,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',94, 637,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',94, 637,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',94, 637,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',98, 640,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',98, 640,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',98, 640,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',26, 641,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',26, 641,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',26, 641,'-dof', 4, 'vel')
if pid == 11:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',61, 644,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',61, 644,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',61, 644,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',169, 647,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',169, 647,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',169, 647,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',170, 650,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',170, 650,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',170, 650,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',171, 653,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',171, 653,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',171, 653,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',77, 654,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',77, 654,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',77, 654,'-dof', 4, 'vel')
if pid == 12:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',62, 657,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',62, 657,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',62, 657,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',173, 660,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',173, 660,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',173, 660,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',174, 663,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',174, 663,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',174, 663,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',175, 666,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',175, 666,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',175, 666,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',78, 667,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',78, 667,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',78, 667,'-dof', 4, 'vel')
if pid == 13:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',63, 670,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',63, 670,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',63, 670,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',177, 673,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',177, 673,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',177, 673,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',178, 676,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',178, 676,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',178, 676,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',179, 679,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',179, 679,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',179, 679,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',79, 680,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',79, 680,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',79, 680,'-dof', 4, 'vel')
if pid == 14:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',18, 681,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',18, 681,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',18, 681,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',114, 682,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',114, 682,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',114, 682,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',110, 683,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',110, 683,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',110, 683,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',106, 684,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',106, 684,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',106, 684,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',34, 684,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',34, 684,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',34, 684,'-dof', 4, 'vel')
if pid == 15:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',9, 687,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',9, 687,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',9, 687,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',89, 690,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',89, 690,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',89, 690,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',93, 693,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',93, 693,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',93, 693,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',97, 696,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',97, 696,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',97, 696,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',25, 697,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',25, 697,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',25, 697,'-dof', 4, 'vel')
if pid == 16:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',57, 700,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',57, 700,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',57, 700,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',185, 703,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',185, 703,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',185, 703,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',186, 706,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',186, 706,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',186, 706,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',187, 709,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',187, 709,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',187, 709,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',81, 710,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',81, 710,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',81, 710,'-dof', 4, 'vel')
if pid == 17:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',58, 713,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',58, 713,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',58, 713,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',189, 716,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',189, 716,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',189, 716,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',190, 719,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',190, 719,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',190, 719,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',191, 722,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',191, 722,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',191, 722,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',82, 723,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',82, 723,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',82, 723,'-dof', 4, 'vel')
if pid == 18:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',59, 726,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',59, 726,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',59, 726,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',193, 729,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',193, 729,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',193, 729,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',194, 732,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',194, 732,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',194, 732,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',195, 735,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',195, 735,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',195, 735,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',83, 736,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',83, 736,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',83, 736,'-dof', 4, 'vel')
if pid == 19:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',17, 737,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',17, 737,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',17, 737,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',113, 738,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',113, 738,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',113, 738,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',109, 739,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',109, 739,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',109, 739,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',105, 740,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',105, 740,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',105, 740,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',33, 740,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',33, 740,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',33, 740,'-dof', 4, 'vel')
if pid == 20:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',2, 741,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',2, 741,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',2, 741,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',41, 742,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',41, 742,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',41, 742,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',42, 743,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',42, 743,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',42, 743,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',43, 744,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',43, 744,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',43, 744,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',6, 744,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',6, 744,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',6, 744,'-dof', 4, 'vel')
if pid == 21:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',21, 745,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',21, 745,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',21, 745,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',121, 746,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',121, 746,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',121, 746,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',122, 747,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',122, 747,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',122, 747,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',123, 748,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',123, 748,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',123, 748,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',37, 748,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',37, 748,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',37, 748,'-dof', 4, 'vel')
if pid == 22:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',22, 749,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',22, 749,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',22, 749,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',125, 750,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',125, 750,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',125, 750,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',126, 751,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',126, 751,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',126, 751,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',127, 752,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',127, 752,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',127, 752,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',38, 752,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',38, 752,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',38, 752,'-dof', 4, 'vel')
if pid == 23:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',23, 753,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',23, 753,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',23, 753,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',129, 754,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',129, 754,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',129, 754,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',130, 755,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',130, 755,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',130, 755,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',131, 756,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',131, 756,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',131, 756,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',39, 756,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',39, 756,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',39, 756,'-dof', 4, 'vel')
if pid == 24:
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',4, 753,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',4, 753,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',4, 753,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',49, 754,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',49, 754,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',49, 754,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',50, 755,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',50, 755,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',50, 755,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',51, 756,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',51, 756,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',51, 756,'-dof', 4, 'vel')
    ops.recorder('Node','-file','Gdisplacement.out','-time','-nodeRange',8, 756,'-dof', 1, 2, 3, 'disp')
    ops.recorder('Node','-file','Gacceleration.out','-time','-nodeRange',8, 756,'-dof', 1, 2, 3, 'accel')
    ops.recorder('Node','-file','GporePressure.out','-time','-nodeRange',8, 756,'-dof', 4, 'vel')
if pid == 0:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 211,215,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 211,215,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 211,215,'material','1','strain')
if pid == 1:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 216,220,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 216,220,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 216,220,'material','1','strain')
if pid == 2:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 221,225,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 221,225,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 221,225,'material','1','strain')
if pid == 3:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 226,230,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 226,230,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 226,230,'material','1','strain')
if pid == 4:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 231,235,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 231,235,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 231,235,'material','1','strain')
if pid == 5:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 236,240,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 236,240,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 236,240,'material','1','strain')
if pid == 6:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 241,245,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 241,245,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 241,245,'material','1','strain')
if pid == 7:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 246,250,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 246,250,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 246,250,'material','1','strain')
if pid == 8:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 251,255,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 251,255,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 251,255,'material','1','strain')
if pid == 9:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 256,260,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 256,260,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 256,260,'material','1','strain')
if pid == 10:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 261,265,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 261,265,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 261,265,'material','1','strain')
if pid == 11:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 266,270,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 266,270,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 266,270,'material','1','strain')
if pid == 12:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 271,275,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 271,275,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 271,275,'material','1','strain')
if pid == 13:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 276,280,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 276,280,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 276,280,'material','1','strain')
if pid == 14:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 281,285,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 281,285,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 281,285,'material','1','strain')
if pid == 15:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 286,290,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 286,290,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 286,290,'material','1','strain')
if pid == 16:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 291,295,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 291,295,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 291,295,'material','1','strain')
if pid == 17:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 296,300,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 296,300,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 296,300,'material','1','strain')
if pid == 18:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 301,305,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 301,305,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 301,305,'material','1','strain')
if pid == 19:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 306,310,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 306,310,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 306,310,'material','1','strain')
if pid == 20:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 311,315,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 311,315,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 311,315,'material','1','strain')
if pid == 21:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 316,320,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 316,320,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 316,320,'material','1','strain')
if pid == 22:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 321,325,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 321,325,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 321,325,'material','1','strain')
if pid == 23:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 326,330,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 326,330,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 326,330,'material','1','strain')
if pid == 24:
    ops.recorder('Element','-file','Gstress.out','-time','-eleRange', 331,335,'material','1','stress')
    ops.recorder('Element','-file','Ggauss.out','-time','-eleRange', 331,335,'material','1','gausspoint')
    ops.recorder('Element','-file','Gstrain.out','-time','-eleRange', 331,335,'material','1','strain')
motionDT = 0.005
recDT = 10*0.005
motionSteps = 2500
nSteps = 2500
dT = 0.005
ops.model("basicBuilder","-ndm",3,"-ndf",4)
ops.updateMaterialStage('-material', 1, '-stage', 0)
ops.updateMaterialStage('-material', 2, '-stage', 0)
ops.constraints('Penalty', 1.e18, 1.e18)
ops.test('NormDispIncr', 1.0e-6, 500, 1)
ops.algorithm('KrylovNewton')
ops.numberer('Plain')
ops.system('ProfileSPD')
ops.integrator('Newmark', 0.5, 0.25)
ops.analysis('Transient')
startT = tt.time()
ops.analyze(1,1)
ops.domainChange()
ops.updateMaterialStage('-material', 1, '-stage', 1)
ops.updateMaterialStage('-material', 2, '-stage', 1)
if pid == 0:
    ops.parameter(1, 'element', 211,'hPerm')
    ops.parameter(2, 'element', 211,'vPerm')
    ops.updateParameter(1,1.0)
    ops.updateParameter(2,1.0)
if pid == 0:
    ops.parameter(3, 'element', 212,'hPerm')
    ops.parameter(4, 'element', 212,'vPerm')
    ops.updateParameter(3,1.0)
    ops.updateParameter(4,1.0)
if pid == 0:
    ops.parameter(5, 'element', 213,'hPerm')
    ops.parameter(6, 'element', 213,'vPerm')
    ops.updateParameter(5,1.0)
    ops.updateParameter(6,1.0)
if pid == 0:
    ops.parameter(7, 'element', 214,'hPerm')
    ops.parameter(8, 'element', 214,'vPerm')
    ops.updateParameter(7,1.0)
    ops.updateParameter(8,1.0)
if pid == 0:
    ops.parameter(9, 'element', 215,'hPerm')
    ops.parameter(10, 'element', 215,'vPerm')
    ops.updateParameter(9,1.0)
    ops.updateParameter(10,1.0)
if pid == 1:
    ops.parameter(11, 'element', 216,'hPerm')
    ops.parameter(12, 'element', 216,'vPerm')
    ops.updateParameter(11,1.0)
    ops.updateParameter(12,1.0)
if pid == 1:
    ops.parameter(13, 'element', 217,'hPerm')
    ops.parameter(14, 'element', 217,'vPerm')
    ops.updateParameter(13,1.0)
    ops.updateParameter(14,1.0)
if pid == 1:
    ops.parameter(15, 'element', 218,'hPerm')
    ops.parameter(16, 'element', 218,'vPerm')
    ops.updateParameter(15,1.0)
    ops.updateParameter(16,1.0)
if pid == 1:
    ops.parameter(17, 'element', 219,'hPerm')
    ops.parameter(18, 'element', 219,'vPerm')
    ops.updateParameter(17,1.0)
    ops.updateParameter(18,1.0)
if pid == 1:
    ops.parameter(19, 'element', 220,'hPerm')
    ops.parameter(20, 'element', 220,'vPerm')
    ops.updateParameter(19,1.0)
    ops.updateParameter(20,1.0)
if pid == 2:
    ops.parameter(21, 'element', 221,'hPerm')
    ops.parameter(22, 'element', 221,'vPerm')
    ops.updateParameter(21,1.0)
    ops.updateParameter(22,1.0)
if pid == 2:
    ops.parameter(23, 'element', 222,'hPerm')
    ops.parameter(24, 'element', 222,'vPerm')
    ops.updateParameter(23,1.0)
    ops.updateParameter(24,1.0)
if pid == 2:
    ops.parameter(25, 'element', 223,'hPerm')
    ops.parameter(26, 'element', 223,'vPerm')
    ops.updateParameter(25,1.0)
    ops.updateParameter(26,1.0)
if pid == 2:
    ops.parameter(27, 'element', 224,'hPerm')
    ops.parameter(28, 'element', 224,'vPerm')
    ops.updateParameter(27,1.0)
    ops.updateParameter(28,1.0)
if pid == 2:
    ops.parameter(29, 'element', 225,'hPerm')
    ops.parameter(30, 'element', 225,'vPerm')
    ops.updateParameter(29,1.0)
    ops.updateParameter(30,1.0)
if pid == 3:
    ops.parameter(31, 'element', 226,'hPerm')
    ops.parameter(32, 'element', 226,'vPerm')
    ops.updateParameter(31,1.0)
    ops.updateParameter(32,1.0)
if pid == 3:
    ops.parameter(33, 'element', 227,'hPerm')
    ops.parameter(34, 'element', 227,'vPerm')
    ops.updateParameter(33,1.0)
    ops.updateParameter(34,1.0)
if pid == 3:
    ops.parameter(35, 'element', 228,'hPerm')
    ops.parameter(36, 'element', 228,'vPerm')
    ops.updateParameter(35,1.0)
    ops.updateParameter(36,1.0)
if pid == 3:
    ops.parameter(37, 'element', 229,'hPerm')
    ops.parameter(38, 'element', 229,'vPerm')
    ops.updateParameter(37,1.0)
    ops.updateParameter(38,1.0)
if pid == 3:
    ops.parameter(39, 'element', 230,'hPerm')
    ops.parameter(40, 'element', 230,'vPerm')
    ops.updateParameter(39,1.0)
    ops.updateParameter(40,1.0)
if pid == 4:
    ops.parameter(41, 'element', 231,'hPerm')
    ops.parameter(42, 'element', 231,'vPerm')
    ops.updateParameter(41,1.0)
    ops.updateParameter(42,1.0)
if pid == 4:
    ops.parameter(43, 'element', 232,'hPerm')
    ops.parameter(44, 'element', 232,'vPerm')
    ops.updateParameter(43,1.0)
    ops.updateParameter(44,1.0)
if pid == 4:
    ops.parameter(45, 'element', 233,'hPerm')
    ops.parameter(46, 'element', 233,'vPerm')
    ops.updateParameter(45,1.0)
    ops.updateParameter(46,1.0)
if pid == 4:
    ops.parameter(47, 'element', 234,'hPerm')
    ops.parameter(48, 'element', 234,'vPerm')
    ops.updateParameter(47,1.0)
    ops.updateParameter(48,1.0)
if pid == 4:
    ops.parameter(49, 'element', 235,'hPerm')
    ops.parameter(50, 'element', 235,'vPerm')
    ops.updateParameter(49,1.0)
    ops.updateParameter(50,1.0)
if pid == 5:
    ops.parameter(51, 'element', 236,'hPerm')
    ops.parameter(52, 'element', 236,'vPerm')
    ops.updateParameter(51,1.0)
    ops.updateParameter(52,1.0)
if pid == 5:
    ops.parameter(53, 'element', 237,'hPerm')
    ops.parameter(54, 'element', 237,'vPerm')
    ops.updateParameter(53,1.0)
    ops.updateParameter(54,1.0)
if pid == 5:
    ops.parameter(55, 'element', 238,'hPerm')
    ops.parameter(56, 'element', 238,'vPerm')
    ops.updateParameter(55,1.0)
    ops.updateParameter(56,1.0)
if pid == 5:
    ops.parameter(57, 'element', 239,'hPerm')
    ops.parameter(58, 'element', 239,'vPerm')
    ops.updateParameter(57,1.0)
    ops.updateParameter(58,1.0)
if pid == 5:
    ops.parameter(59, 'element', 240,'hPerm')
    ops.parameter(60, 'element', 240,'vPerm')
    ops.updateParameter(59,1.0)
    ops.updateParameter(60,1.0)
if pid == 6:
    ops.parameter(61, 'element', 241,'hPerm')
    ops.parameter(62, 'element', 241,'vPerm')
    ops.updateParameter(61,1.0)
    ops.updateParameter(62,1.0)
if pid == 6:
    ops.parameter(63, 'element', 242,'hPerm')
    ops.parameter(64, 'element', 242,'vPerm')
    ops.updateParameter(63,1.0)
    ops.updateParameter(64,1.0)
if pid == 6:
    ops.parameter(65, 'element', 243,'hPerm')
    ops.parameter(66, 'element', 243,'vPerm')
    ops.updateParameter(65,1.0)
    ops.updateParameter(66,1.0)
if pid == 6:
    ops.parameter(67, 'element', 244,'hPerm')
    ops.parameter(68, 'element', 244,'vPerm')
    ops.updateParameter(67,1.0)
    ops.updateParameter(68,1.0)
if pid == 6:
    ops.parameter(69, 'element', 245,'hPerm')
    ops.parameter(70, 'element', 245,'vPerm')
    ops.updateParameter(69,1.0)
    ops.updateParameter(70,1.0)
if pid == 7:
    ops.parameter(71, 'element', 246,'hPerm')
    ops.parameter(72, 'element', 246,'vPerm')
    ops.updateParameter(71,1.0)
    ops.updateParameter(72,1.0)
if pid == 7:
    ops.parameter(73, 'element', 247,'hPerm')
    ops.parameter(74, 'element', 247,'vPerm')
    ops.updateParameter(73,1.0)
    ops.updateParameter(74,1.0)
if pid == 7:
    ops.parameter(75, 'element', 248,'hPerm')
    ops.parameter(76, 'element', 248,'vPerm')
    ops.updateParameter(75,1.0)
    ops.updateParameter(76,1.0)
if pid == 7:
    ops.parameter(77, 'element', 249,'hPerm')
    ops.parameter(78, 'element', 249,'vPerm')
    ops.updateParameter(77,1.0)
    ops.updateParameter(78,1.0)
if pid == 7:
    ops.parameter(79, 'element', 250,'hPerm')
    ops.parameter(80, 'element', 250,'vPerm')
    ops.updateParameter(79,1.0)
    ops.updateParameter(80,1.0)
if pid == 8:
    ops.parameter(81, 'element', 251,'hPerm')
    ops.parameter(82, 'element', 251,'vPerm')
    ops.updateParameter(81,1.0)
    ops.updateParameter(82,1.0)
if pid == 8:
    ops.parameter(83, 'element', 252,'hPerm')
    ops.parameter(84, 'element', 252,'vPerm')
    ops.updateParameter(83,1.0)
    ops.updateParameter(84,1.0)
if pid == 8:
    ops.parameter(85, 'element', 253,'hPerm')
    ops.parameter(86, 'element', 253,'vPerm')
    ops.updateParameter(85,1.0)
    ops.updateParameter(86,1.0)
if pid == 8:
    ops.parameter(87, 'element', 254,'hPerm')
    ops.parameter(88, 'element', 254,'vPerm')
    ops.updateParameter(87,1.0)
    ops.updateParameter(88,1.0)
if pid == 8:
    ops.parameter(89, 'element', 255,'hPerm')
    ops.parameter(90, 'element', 255,'vPerm')
    ops.updateParameter(89,1.0)
    ops.updateParameter(90,1.0)
if pid == 9:
    ops.parameter(91, 'element', 256,'hPerm')
    ops.parameter(92, 'element', 256,'vPerm')
    ops.updateParameter(91,1.0)
    ops.updateParameter(92,1.0)
if pid == 9:
    ops.parameter(93, 'element', 257,'hPerm')
    ops.parameter(94, 'element', 257,'vPerm')
    ops.updateParameter(93,1.0)
    ops.updateParameter(94,1.0)
if pid == 9:
    ops.parameter(95, 'element', 258,'hPerm')
    ops.parameter(96, 'element', 258,'vPerm')
    ops.updateParameter(95,1.0)
    ops.updateParameter(96,1.0)
if pid == 9:
    ops.parameter(97, 'element', 259,'hPerm')
    ops.parameter(98, 'element', 259,'vPerm')
    ops.updateParameter(97,1.0)
    ops.updateParameter(98,1.0)
if pid == 9:
    ops.parameter(99, 'element', 260,'hPerm')
    ops.parameter(100, 'element', 260,'vPerm')
    ops.updateParameter(99,1.0)
    ops.updateParameter(100,1.0)
if pid == 10:
    ops.parameter(101, 'element', 261,'hPerm')
    ops.parameter(102, 'element', 261,'vPerm')
    ops.updateParameter(101,1.0)
    ops.updateParameter(102,1.0)
if pid == 10:
    ops.parameter(103, 'element', 262,'hPerm')
    ops.parameter(104, 'element', 262,'vPerm')
    ops.updateParameter(103,1.0)
    ops.updateParameter(104,1.0)
if pid == 10:
    ops.parameter(105, 'element', 263,'hPerm')
    ops.parameter(106, 'element', 263,'vPerm')
    ops.updateParameter(105,1.0)
    ops.updateParameter(106,1.0)
if pid == 10:
    ops.parameter(107, 'element', 264,'hPerm')
    ops.parameter(108, 'element', 264,'vPerm')
    ops.updateParameter(107,1.0)
    ops.updateParameter(108,1.0)
if pid == 10:
    ops.parameter(109, 'element', 265,'hPerm')
    ops.parameter(110, 'element', 265,'vPerm')
    ops.updateParameter(109,1.0)
    ops.updateParameter(110,1.0)
if pid == 11:
    ops.parameter(111, 'element', 266,'hPerm')
    ops.parameter(112, 'element', 266,'vPerm')
    ops.updateParameter(111,1.0)
    ops.updateParameter(112,1.0)
if pid == 11:
    ops.parameter(113, 'element', 267,'hPerm')
    ops.parameter(114, 'element', 267,'vPerm')
    ops.updateParameter(113,1.0)
    ops.updateParameter(114,1.0)
if pid == 11:
    ops.parameter(115, 'element', 268,'hPerm')
    ops.parameter(116, 'element', 268,'vPerm')
    ops.updateParameter(115,1.0)
    ops.updateParameter(116,1.0)
if pid == 11:
    ops.parameter(117, 'element', 269,'hPerm')
    ops.parameter(118, 'element', 269,'vPerm')
    ops.updateParameter(117,1.0)
    ops.updateParameter(118,1.0)
if pid == 11:
    ops.parameter(119, 'element', 270,'hPerm')
    ops.parameter(120, 'element', 270,'vPerm')
    ops.updateParameter(119,1.0)
    ops.updateParameter(120,1.0)
if pid == 12:
    ops.parameter(121, 'element', 271,'hPerm')
    ops.parameter(122, 'element', 271,'vPerm')
    ops.updateParameter(121,1.0)
    ops.updateParameter(122,1.0)
if pid == 12:
    ops.parameter(123, 'element', 272,'hPerm')
    ops.parameter(124, 'element', 272,'vPerm')
    ops.updateParameter(123,1.0)
    ops.updateParameter(124,1.0)
if pid == 12:
    ops.parameter(125, 'element', 273,'hPerm')
    ops.parameter(126, 'element', 273,'vPerm')
    ops.updateParameter(125,1.0)
    ops.updateParameter(126,1.0)
if pid == 12:
    ops.parameter(127, 'element', 274,'hPerm')
    ops.parameter(128, 'element', 274,'vPerm')
    ops.updateParameter(127,1.0)
    ops.updateParameter(128,1.0)
if pid == 12:
    ops.parameter(129, 'element', 275,'hPerm')
    ops.parameter(130, 'element', 275,'vPerm')
    ops.updateParameter(129,1.0)
    ops.updateParameter(130,1.0)
if pid == 13:
    ops.parameter(131, 'element', 276,'hPerm')
    ops.parameter(132, 'element', 276,'vPerm')
    ops.updateParameter(131,1.0)
    ops.updateParameter(132,1.0)
if pid == 13:
    ops.parameter(133, 'element', 277,'hPerm')
    ops.parameter(134, 'element', 277,'vPerm')
    ops.updateParameter(133,1.0)
    ops.updateParameter(134,1.0)
if pid == 13:
    ops.parameter(135, 'element', 278,'hPerm')
    ops.parameter(136, 'element', 278,'vPerm')
    ops.updateParameter(135,1.0)
    ops.updateParameter(136,1.0)
if pid == 13:
    ops.parameter(137, 'element', 279,'hPerm')
    ops.parameter(138, 'element', 279,'vPerm')
    ops.updateParameter(137,1.0)
    ops.updateParameter(138,1.0)
if pid == 13:
    ops.parameter(139, 'element', 280,'hPerm')
    ops.parameter(140, 'element', 280,'vPerm')
    ops.updateParameter(139,1.0)
    ops.updateParameter(140,1.0)
if pid == 14:
    ops.parameter(141, 'element', 281,'hPerm')
    ops.parameter(142, 'element', 281,'vPerm')
    ops.updateParameter(141,1.0)
    ops.updateParameter(142,1.0)
if pid == 14:
    ops.parameter(143, 'element', 282,'hPerm')
    ops.parameter(144, 'element', 282,'vPerm')
    ops.updateParameter(143,1.0)
    ops.updateParameter(144,1.0)
if pid == 14:
    ops.parameter(145, 'element', 283,'hPerm')
    ops.parameter(146, 'element', 283,'vPerm')
    ops.updateParameter(145,1.0)
    ops.updateParameter(146,1.0)
if pid == 14:
    ops.parameter(147, 'element', 284,'hPerm')
    ops.parameter(148, 'element', 284,'vPerm')
    ops.updateParameter(147,1.0)
    ops.updateParameter(148,1.0)
if pid == 14:
    ops.parameter(149, 'element', 285,'hPerm')
    ops.parameter(150, 'element', 285,'vPerm')
    ops.updateParameter(149,1.0)
    ops.updateParameter(150,1.0)
if pid == 15:
    ops.parameter(151, 'element', 286,'hPerm')
    ops.parameter(152, 'element', 286,'vPerm')
    ops.updateParameter(151,1.0)
    ops.updateParameter(152,1.0)
if pid == 15:
    ops.parameter(153, 'element', 287,'hPerm')
    ops.parameter(154, 'element', 287,'vPerm')
    ops.updateParameter(153,1.0)
    ops.updateParameter(154,1.0)
if pid == 15:
    ops.parameter(155, 'element', 288,'hPerm')
    ops.parameter(156, 'element', 288,'vPerm')
    ops.updateParameter(155,1.0)
    ops.updateParameter(156,1.0)
if pid == 15:
    ops.parameter(157, 'element', 289,'hPerm')
    ops.parameter(158, 'element', 289,'vPerm')
    ops.updateParameter(157,1.0)
    ops.updateParameter(158,1.0)
if pid == 15:
    ops.parameter(159, 'element', 290,'hPerm')
    ops.parameter(160, 'element', 290,'vPerm')
    ops.updateParameter(159,1.0)
    ops.updateParameter(160,1.0)
if pid == 16:
    ops.parameter(161, 'element', 291,'hPerm')
    ops.parameter(162, 'element', 291,'vPerm')
    ops.updateParameter(161,1.0)
    ops.updateParameter(162,1.0)
if pid == 16:
    ops.parameter(163, 'element', 292,'hPerm')
    ops.parameter(164, 'element', 292,'vPerm')
    ops.updateParameter(163,1.0)
    ops.updateParameter(164,1.0)
if pid == 16:
    ops.parameter(165, 'element', 293,'hPerm')
    ops.parameter(166, 'element', 293,'vPerm')
    ops.updateParameter(165,1.0)
    ops.updateParameter(166,1.0)
if pid == 16:
    ops.parameter(167, 'element', 294,'hPerm')
    ops.parameter(168, 'element', 294,'vPerm')
    ops.updateParameter(167,1.0)
    ops.updateParameter(168,1.0)
if pid == 16:
    ops.parameter(169, 'element', 295,'hPerm')
    ops.parameter(170, 'element', 295,'vPerm')
    ops.updateParameter(169,1.0)
    ops.updateParameter(170,1.0)
if pid == 17:
    ops.parameter(171, 'element', 296,'hPerm')
    ops.parameter(172, 'element', 296,'vPerm')
    ops.updateParameter(171,1.0)
    ops.updateParameter(172,1.0)
if pid == 17:
    ops.parameter(173, 'element', 297,'hPerm')
    ops.parameter(174, 'element', 297,'vPerm')
    ops.updateParameter(173,1.0)
    ops.updateParameter(174,1.0)
if pid == 17:
    ops.parameter(175, 'element', 298,'hPerm')
    ops.parameter(176, 'element', 298,'vPerm')
    ops.updateParameter(175,1.0)
    ops.updateParameter(176,1.0)
if pid == 17:
    ops.parameter(177, 'element', 299,'hPerm')
    ops.parameter(178, 'element', 299,'vPerm')
    ops.updateParameter(177,1.0)
    ops.updateParameter(178,1.0)
if pid == 17:
    ops.parameter(179, 'element', 300,'hPerm')
    ops.parameter(180, 'element', 300,'vPerm')
    ops.updateParameter(179,1.0)
    ops.updateParameter(180,1.0)
if pid == 18:
    ops.parameter(181, 'element', 301,'hPerm')
    ops.parameter(182, 'element', 301,'vPerm')
    ops.updateParameter(181,1.0)
    ops.updateParameter(182,1.0)
if pid == 18:
    ops.parameter(183, 'element', 302,'hPerm')
    ops.parameter(184, 'element', 302,'vPerm')
    ops.updateParameter(183,1.0)
    ops.updateParameter(184,1.0)
if pid == 18:
    ops.parameter(185, 'element', 303,'hPerm')
    ops.parameter(186, 'element', 303,'vPerm')
    ops.updateParameter(185,1.0)
    ops.updateParameter(186,1.0)
if pid == 18:
    ops.parameter(187, 'element', 304,'hPerm')
    ops.parameter(188, 'element', 304,'vPerm')
    ops.updateParameter(187,1.0)
    ops.updateParameter(188,1.0)
if pid == 18:
    ops.parameter(189, 'element', 305,'hPerm')
    ops.parameter(190, 'element', 305,'vPerm')
    ops.updateParameter(189,1.0)
    ops.updateParameter(190,1.0)
if pid == 19:
    ops.parameter(191, 'element', 306,'hPerm')
    ops.parameter(192, 'element', 306,'vPerm')
    ops.updateParameter(191,1.0)
    ops.updateParameter(192,1.0)
if pid == 19:
    ops.parameter(193, 'element', 307,'hPerm')
    ops.parameter(194, 'element', 307,'vPerm')
    ops.updateParameter(193,1.0)
    ops.updateParameter(194,1.0)
if pid == 19:
    ops.parameter(195, 'element', 308,'hPerm')
    ops.parameter(196, 'element', 308,'vPerm')
    ops.updateParameter(195,1.0)
    ops.updateParameter(196,1.0)
if pid == 19:
    ops.parameter(197, 'element', 309,'hPerm')
    ops.parameter(198, 'element', 309,'vPerm')
    ops.updateParameter(197,1.0)
    ops.updateParameter(198,1.0)
if pid == 19:
    ops.parameter(199, 'element', 310,'hPerm')
    ops.parameter(200, 'element', 310,'vPerm')
    ops.updateParameter(199,1.0)
    ops.updateParameter(200,1.0)
if pid == 20:
    ops.parameter(201, 'element', 311,'hPerm')
    ops.parameter(202, 'element', 311,'vPerm')
    ops.updateParameter(201,1.0)
    ops.updateParameter(202,1.0)
if pid == 20:
    ops.parameter(203, 'element', 312,'hPerm')
    ops.parameter(204, 'element', 312,'vPerm')
    ops.updateParameter(203,1.0)
    ops.updateParameter(204,1.0)
if pid == 20:
    ops.parameter(205, 'element', 313,'hPerm')
    ops.parameter(206, 'element', 313,'vPerm')
    ops.updateParameter(205,1.0)
    ops.updateParameter(206,1.0)
if pid == 20:
    ops.parameter(207, 'element', 314,'hPerm')
    ops.parameter(208, 'element', 314,'vPerm')
    ops.updateParameter(207,1.0)
    ops.updateParameter(208,1.0)
if pid == 20:
    ops.parameter(209, 'element', 315,'hPerm')
    ops.parameter(210, 'element', 315,'vPerm')
    ops.updateParameter(209,1.0)
    ops.updateParameter(210,1.0)
if pid == 21:
    ops.parameter(211, 'element', 316,'hPerm')
    ops.parameter(212, 'element', 316,'vPerm')
    ops.updateParameter(211,1.0)
    ops.updateParameter(212,1.0)
if pid == 21:
    ops.parameter(213, 'element', 317,'hPerm')
    ops.parameter(214, 'element', 317,'vPerm')
    ops.updateParameter(213,1.0)
    ops.updateParameter(214,1.0)
if pid == 21:
    ops.parameter(215, 'element', 318,'hPerm')
    ops.parameter(216, 'element', 318,'vPerm')
    ops.updateParameter(215,1.0)
    ops.updateParameter(216,1.0)
if pid == 21:
    ops.parameter(217, 'element', 319,'hPerm')
    ops.parameter(218, 'element', 319,'vPerm')
    ops.updateParameter(217,1.0)
    ops.updateParameter(218,1.0)
if pid == 21:
    ops.parameter(219, 'element', 320,'hPerm')
    ops.parameter(220, 'element', 320,'vPerm')
    ops.updateParameter(219,1.0)
    ops.updateParameter(220,1.0)
if pid == 22:
    ops.parameter(221, 'element', 321,'hPerm')
    ops.parameter(222, 'element', 321,'vPerm')
    ops.updateParameter(221,1.0)
    ops.updateParameter(222,1.0)
if pid == 22:
    ops.parameter(223, 'element', 322,'hPerm')
    ops.parameter(224, 'element', 322,'vPerm')
    ops.updateParameter(223,1.0)
    ops.updateParameter(224,1.0)
if pid == 22:
    ops.parameter(225, 'element', 323,'hPerm')
    ops.parameter(226, 'element', 323,'vPerm')
    ops.updateParameter(225,1.0)
    ops.updateParameter(226,1.0)
if pid == 22:
    ops.parameter(227, 'element', 324,'hPerm')
    ops.parameter(228, 'element', 324,'vPerm')
    ops.updateParameter(227,1.0)
    ops.updateParameter(228,1.0)
if pid == 22:
    ops.parameter(229, 'element', 325,'hPerm')
    ops.parameter(230, 'element', 325,'vPerm')
    ops.updateParameter(229,1.0)
    ops.updateParameter(230,1.0)
if pid == 23:
    ops.parameter(231, 'element', 326,'hPerm')
    ops.parameter(232, 'element', 326,'vPerm')
    ops.updateParameter(231,1.0)
    ops.updateParameter(232,1.0)
if pid == 23:
    ops.parameter(233, 'element', 327,'hPerm')
    ops.parameter(234, 'element', 327,'vPerm')
    ops.updateParameter(233,1.0)
    ops.updateParameter(234,1.0)
if pid == 23:
    ops.parameter(235, 'element', 328,'hPerm')
    ops.parameter(236, 'element', 328,'vPerm')
    ops.updateParameter(235,1.0)
    ops.updateParameter(236,1.0)
if pid == 23:
    ops.parameter(237, 'element', 329,'hPerm')
    ops.parameter(238, 'element', 329,'vPerm')
    ops.updateParameter(237,1.0)
    ops.updateParameter(238,1.0)
if pid == 23:
    ops.parameter(239, 'element', 330,'hPerm')
    ops.parameter(240, 'element', 330,'vPerm')
    ops.updateParameter(239,1.0)
    ops.updateParameter(240,1.0)
if pid == 24:
    ops.parameter(241, 'element', 331,'hPerm')
    ops.parameter(242, 'element', 331,'vPerm')
    ops.updateParameter(241,1.0)
    ops.updateParameter(242,1.0)
if pid == 24:
    ops.parameter(243, 'element', 332,'hPerm')
    ops.parameter(244, 'element', 332,'vPerm')
    ops.updateParameter(243,1.0)
    ops.updateParameter(244,1.0)
if pid == 24:
    ops.parameter(245, 'element', 333,'hPerm')
    ops.parameter(246, 'element', 333,'vPerm')
    ops.updateParameter(245,1.0)
    ops.updateParameter(246,1.0)
if pid == 24:
    ops.parameter(247, 'element', 334,'hPerm')
    ops.parameter(248, 'element', 334,'vPerm')
    ops.updateParameter(247,1.0)
    ops.updateParameter(248,1.0)
if pid == 24:
    ops.parameter(249, 'element', 335,'hPerm')
    ops.parameter(250, 'element', 335,'vPerm')
    ops.updateParameter(249,1.0)
    ops.updateParameter(250,1.0)
ops.reactions()
ops.timeSeries('Constant',1)
ops.pattern('Plain',1,1,'-fact',1.0)
if pid == 0:
    ops.load(1, -0.054003353462963304,7.237832334589104,-31.245512972467118,0.0)
    ops.remove('sp',1)
if pid == 20:
    ops.load(2, 102.63354849908366,149.4210688200334,203.8585431111271,0.0)
    ops.remove('sp',2)
if pid == 4:
    ops.load(3, 3.4494611631969794,-10.60344303928586,-32.009367180357074,0.0)
    ops.remove('sp',3)
if pid == 24:
    ops.load(4, 23.277598473147606,-152.82749479496886,26.918554527041632,0.0)
    ops.remove('sp',4)
if pid == 0:
    ops.load(5, -0.0031496381281369548,0.014490594463874483,-35.80957944222574,0.0)
    ops.remove('sp',5)
if pid == 20:
    ops.load(6, 2.3144514671059992,18.403980498989636,-62.25851031442323,0.0)
    ops.remove('sp',6)
if pid == 4:
    ops.load(7, 0.06668153354241296,-0.062182885335836574,-35.42564314314302,0.0)
    ops.remove('sp',7)
if pid == 24:
    ops.load(8, 15.887515143163498,31.141080906790474,-80.1718267875973,0.0)
    ops.remove('sp',8)
if pid == 15:
    ops.load(9, 61.17756574725624,181.2059832159938,41.69915392368918,0.0)
    ops.remove('sp',9)
if pid == 20:
    ops.load(9, 61.17756574725624,181.2059832159938,41.69915392368918,0.0)
    ops.remove('sp',9)
if pid == 10:
    ops.load(10, 26.740510862117894,123.41081982382103,-38.901564833255044,0.0)
    ops.remove('sp',10)
if pid == 15:
    ops.load(10, 26.740510862117894,123.41081982382103,-38.901564833255044,0.0)
    ops.remove('sp',10)
if pid == 5:
    ops.load(11, 26.761260039550063,100.3496339749068,-55.99557781405172,0.0)
    ops.remove('sp',11)
if pid == 10:
    ops.load(11, 26.761260039550063,100.3496339749068,-55.99557781405172,0.0)
    ops.remove('sp',11)
if pid == 0:
    ops.load(12, 15.395503058517246,54.140759389047844,-59.135607110870374,0.0)
    ops.remove('sp',12)
if pid == 5:
    ops.load(12, 15.395503058517246,54.140759389047844,-59.135607110870374,0.0)
    ops.remove('sp',12)
if pid == 0:
    ops.load(13, 6.913995475140692,2.392019578876641,-71.77834786001208,0.0)
    ops.remove('sp',13)
if pid == 1:
    ops.load(13, 6.913995475140692,2.392019578876641,-71.77834786001208,0.0)
    ops.remove('sp',13)
if pid == 1:
    ops.load(14, -3.1646675944995137,-0.03184403243359857,-75.49348626553822,0.0)
    ops.remove('sp',14)
if pid == 2:
    ops.load(14, -3.1646675944995137,-0.03184403243359857,-75.49348626553822,0.0)
    ops.remove('sp',14)
if pid == 2:
    ops.load(15, -2.568958918643041,-0.4447090594129533,-75.92672779880048,0.0)
    ops.remove('sp',15)
if pid == 3:
    ops.load(15, -2.568958918643041,-0.4447090594129533,-75.92672779880048,0.0)
    ops.remove('sp',15)
if pid == 3:
    ops.load(16, 6.524907305199237,-2.660454957043526,-71.56451571274232,0.0)
    ops.remove('sp',16)
if pid == 4:
    ops.load(16, 6.524907305199237,-2.660454957043526,-71.56451571274232,0.0)
    ops.remove('sp',16)
if pid == 19:
    ops.load(17, 49.01551190980855,-208.09793610488884,-37.32622110690397,0.0)
    ops.remove('sp',17)
if pid == 24:
    ops.load(17, 49.01551190980855,-208.09793610488884,-37.32622110690397,0.0)
    ops.remove('sp',17)
if pid == 14:
    ops.load(18, 41.42856888343798,-147.01646644032434,-48.628040375834445,0.0)
    ops.remove('sp',18)
if pid == 19:
    ops.load(18, 41.42856888343798,-147.01646644032434,-48.628040375834445,0.0)
    ops.remove('sp',18)
if pid == 9:
    ops.load(19, 29.069251174930145,-107.32011615926987,-55.86665101708589,0.0)
    ops.remove('sp',19)
if pid == 14:
    ops.load(19, 29.069251174930145,-107.32011615926987,-55.86665101708589,0.0)
    ops.remove('sp',19)
if pid == 4:
    ops.load(20, 12.648156643937646,-55.687578527759065,-60.92078823330073,0.0)
    ops.remove('sp',20)
if pid == 9:
    ops.load(20, 12.648156643937646,-55.687578527759065,-60.92078823330073,0.0)
    ops.remove('sp',20)
if pid == 20:
    ops.load(21, 151.9887290171165,41.46535414555507,297.42023778770374,0.0)
    ops.remove('sp',21)
if pid == 21:
    ops.load(21, 151.9887290171165,41.46535414555507,297.42023778770374,0.0)
    ops.remove('sp',21)
if pid == 21:
    ops.load(22, 52.298514685011,-11.970619044932306,104.32588151318467,0.0)
    ops.remove('sp',22)
if pid == 22:
    ops.load(22, 52.298514685011,-11.970619044932306,104.32588151318467,0.0)
    ops.remove('sp',22)
if pid == 22:
    ops.load(23, -22.65630140974698,5.6144470089921565,-80.526079284589,0.0)
    ops.remove('sp',23)
if pid == 23:
    ops.load(23, -22.65630140974698,5.6144470089921565,-80.526079284589,0.0)
    ops.remove('sp',23)
if pid == 23:
    ops.load(24, -18.162436020451057,-69.77332390036366,-81.0247458977461,0.0)
    ops.remove('sp',24)
if pid == 24:
    ops.load(24, -18.162436020451057,-69.77332390036366,-81.0247458977461,0.0)
    ops.remove('sp',24)
if pid == 15:
    ops.load(25, -7.8857708337383,8.743908791212279,-92.01948217439991,0.0)
    ops.remove('sp',25)
if pid == 20:
    ops.load(25, -7.8857708337383,8.743908791212279,-92.01948217439991,0.0)
    ops.remove('sp',25)
if pid == 10:
    ops.load(26, -11.60046971962301,18.373730589391627,-15.393673108943375,0.0)
    ops.remove('sp',26)
if pid == 15:
    ops.load(26, -11.60046971962301,18.373730589391627,-15.393673108943375,0.0)
    ops.remove('sp',26)
if pid == 5:
    ops.load(27, -2.9404841743197725,4.60010149132345,-28.493449651057386,0.0)
    ops.remove('sp',27)
if pid == 10:
    ops.load(27, -2.9404841743197725,4.60010149132345,-28.493449651057386,0.0)
    ops.remove('sp',27)
if pid == 0:
    ops.load(28, -1.005219198495761,-1.13958695087917,-54.156160528666526,0.0)
    ops.remove('sp',28)
if pid == 5:
    ops.load(28, -1.005219198495761,-1.13958695087917,-54.156160528666526,0.0)
    ops.remove('sp',28)
if pid == 0:
    ops.load(29, -0.0589493564532589,0.008830964988523194,-71.83455616233958,0.0)
    ops.remove('sp',29)
if pid == 1:
    ops.load(29, -0.0589493564532589,0.008830964988523194,-71.83455616233958,0.0)
    ops.remove('sp',29)
if pid == 1:
    ops.load(30, -0.0733394400278028,-0.0033351911879777943,-71.91860496423608,0.0)
    ops.remove('sp',30)
if pid == 2:
    ops.load(30, -0.0733394400278028,-0.0033351911879777943,-71.91860496423608,0.0)
    ops.remove('sp',30)
if pid == 2:
    ops.load(31, -0.0794773990356919,-0.021330790601961178,-71.94266063863553,0.0)
    ops.remove('sp',31)
if pid == 3:
    ops.load(31, -0.0794773990356919,-0.021330790601961178,-71.94266063863553,0.0)
    ops.remove('sp',31)
if pid == 3:
    ops.load(32, 0.00855357450660333,-0.13883085489013045,-71.47095386992828,0.0)
    ops.remove('sp',32)
if pid == 4:
    ops.load(32, 0.00855357450660333,-0.13883085489013045,-71.47095386992828,0.0)
    ops.remove('sp',32)
if pid == 19:
    ops.load(33, 4.226486014122564,22.974211344165944,-120.03912344042052,0.0)
    ops.remove('sp',33)
if pid == 24:
    ops.load(33, 4.226486014122564,22.974211344165944,-120.03912344042052,0.0)
    ops.remove('sp',33)
if pid == 14:
    ops.load(34, -4.2296748886223945,15.503516655482759,-24.44127595660754,0.0)
    ops.remove('sp',34)
if pid == 19:
    ops.load(34, -4.2296748886223945,15.503516655482759,-24.44127595660754,0.0)
    ops.remove('sp',34)
if pid == 9:
    ops.load(35, -1.3315512934537237,5.462417583470968,-45.664616076055616,0.0)
    ops.remove('sp',35)
if pid == 14:
    ops.load(35, -1.3315512934537237,5.462417583470968,-45.664616076055616,0.0)
    ops.remove('sp',35)
if pid == 4:
    ops.load(36, 0.08129696589520055,1.211912884592979,-60.55759452349349,0.0)
    ops.remove('sp',36)
if pid == 9:
    ops.load(36, 0.08129696589520055,1.211912884592979,-60.55759452349349,0.0)
    ops.remove('sp',36)
if pid == 20:
    ops.load(37, 18.87188678323701,1.7075421546746803,-96.97232024042984,0.0)
    ops.remove('sp',37)
if pid == 21:
    ops.load(37, 18.87188678323701,1.7075421546746803,-96.97232024042984,0.0)
    ops.remove('sp',37)
if pid == 21:
    ops.load(38, 28.257745926648468,-3.3365016003445414,-76.86218683607649,0.0)
    ops.remove('sp',38)
if pid == 22:
    ops.load(38, 28.257745926648468,-3.3365016003445414,-76.86218683607649,0.0)
    ops.remove('sp',38)
if pid == 22:
    ops.load(39, 27.371273424479067,-0.7310633585986146,-77.60586288028833,0.0)
    ops.remove('sp',39)
if pid == 23:
    ops.load(39, 27.371273424479067,-0.7310633585986146,-77.60586288028833,0.0)
    ops.remove('sp',39)
if pid == 23:
    ops.load(40, 22.2865870605417,10.71668031742198,-88.21221220977935,0.0)
    ops.remove('sp',40)
if pid == 24:
    ops.load(40, 22.2865870605417,10.71668031742198,-88.21221220977935,0.0)
    ops.remove('sp',40)
if pid == 15:
    ops.load(57, 88.76110753704884,65.6405025193817,104.90732399452935,0.0)
    ops.remove('sp',57)
if pid == 16:
    ops.load(57, 88.76110753704884,65.6405025193817,104.90732399452935,0.0)
    ops.remove('sp',57)
if pid == 20:
    ops.load(57, 88.76110753704884,65.6405025193817,104.90732399452935,0.0)
    ops.remove('sp',57)
if pid == 21:
    ops.load(57, 88.76110753704884,65.6405025193817,104.90732399452935,0.0)
    ops.remove('sp',57)
if pid == 16:
    ops.load(58, 19.004248068513988,24.67225620913839,-42.29817201447342,0.0)
    ops.remove('sp',58)
if pid == 17:
    ops.load(58, 19.004248068513988,24.67225620913839,-42.29817201447342,0.0)
    ops.remove('sp',58)
if pid == 21:
    ops.load(58, 19.004248068513988,24.67225620913839,-42.29817201447342,0.0)
    ops.remove('sp',58)
if pid == 22:
    ops.load(58, 19.004248068513988,24.67225620913839,-42.29817201447342,0.0)
    ops.remove('sp',58)
if pid == 17:
    ops.load(59, -22.291933333196923,0.20110495489430003,-148.06203738276983,0.0)
    ops.remove('sp',59)
if pid == 18:
    ops.load(59, -22.291933333196923,0.20110495489430003,-148.06203738276983,0.0)
    ops.remove('sp',59)
if pid == 22:
    ops.load(59, -22.291933333196923,0.20110495489430003,-148.06203738276983,0.0)
    ops.remove('sp',59)
if pid == 23:
    ops.load(59, -22.291933333196923,0.20110495489430003,-148.06203738276983,0.0)
    ops.remove('sp',59)
if pid == 18:
    ops.load(60, 8.184940037749163,-74.56988937215456,-96.24850965350562,0.0)
    ops.remove('sp',60)
if pid == 19:
    ops.load(60, 8.184940037749163,-74.56988937215456,-96.24850965350562,0.0)
    ops.remove('sp',60)
if pid == 23:
    ops.load(60, 8.184940037749163,-74.56988937215456,-96.24850965350562,0.0)
    ops.remove('sp',60)
if pid == 24:
    ops.load(60, 8.184940037749163,-74.56988937215456,-96.24850965350562,0.0)
    ops.remove('sp',60)
if pid == 10:
    ops.load(61, 18.694314717643575,66.49434803725883,-101.10060446751267,0.0)
    ops.remove('sp',61)
if pid == 11:
    ops.load(61, 18.694314717643575,66.49434803725883,-101.10060446751267,0.0)
    ops.remove('sp',61)
if pid == 15:
    ops.load(61, 18.694314717643575,66.49434803725883,-101.10060446751267,0.0)
    ops.remove('sp',61)
if pid == 16:
    ops.load(61, 18.694314717643575,66.49434803725883,-101.10060446751267,0.0)
    ops.remove('sp',61)
if pid == 11:
    ops.load(62, 0.9715556783668247,3.1386742958845746,-139.14854986808655,0.0)
    ops.remove('sp',62)
if pid == 12:
    ops.load(62, 0.9715556783668247,3.1386742958845746,-139.14854986808655,0.0)
    ops.remove('sp',62)
if pid == 16:
    ops.load(62, 0.9715556783668247,3.1386742958845746,-139.14854986808655,0.0)
    ops.remove('sp',62)
if pid == 17:
    ops.load(62, 0.9715556783668247,3.1386742958845746,-139.14854986808655,0.0)
    ops.remove('sp',62)
if pid == 12:
    ops.load(63, 0.2218823954759951,-0.2602557847880102,-142.8733556735099,0.0)
    ops.remove('sp',63)
if pid == 13:
    ops.load(63, 0.2218823954759951,-0.2602557847880102,-142.8733556735099,0.0)
    ops.remove('sp',63)
if pid == 17:
    ops.load(63, 0.2218823954759951,-0.2602557847880102,-142.8733556735099,0.0)
    ops.remove('sp',63)
if pid == 18:
    ops.load(63, 0.2218823954759951,-0.2602557847880102,-142.8733556735099,0.0)
    ops.remove('sp',63)
if pid == 13:
    ops.load(64, 20.51107619498009,-76.06108457038033,-119.25931431933996,0.0)
    ops.remove('sp',64)
if pid == 14:
    ops.load(64, 20.51107619498009,-76.06108457038033,-119.25931431933996,0.0)
    ops.remove('sp',64)
if pid == 18:
    ops.load(64, 20.51107619498009,-76.06108457038033,-119.25931431933996,0.0)
    ops.remove('sp',64)
if pid == 19:
    ops.load(64, 20.51107619498009,-76.06108457038033,-119.25931431933996,0.0)
    ops.remove('sp',64)
if pid == 5:
    ops.load(65, 12.703398102178586,49.592688135477,-126.06456062642252,0.0)
    ops.remove('sp',65)
if pid == 6:
    ops.load(65, 12.703398102178586,49.592688135477,-126.06456062642252,0.0)
    ops.remove('sp',65)
if pid == 10:
    ops.load(65, 12.703398102178586,49.592688135477,-126.06456062642252,0.0)
    ops.remove('sp',65)
if pid == 11:
    ops.load(65, 12.703398102178586,49.592688135477,-126.06456062642252,0.0)
    ops.remove('sp',65)
if pid == 6:
    ops.load(66, 0.09525910413623404,0.4829391638132194,-143.731126961952,0.0)
    ops.remove('sp',66)
if pid == 7:
    ops.load(66, 0.09525910413623404,0.4829391638132194,-143.731126961952,0.0)
    ops.remove('sp',66)
if pid == 11:
    ops.load(66, 0.09525910413623404,0.4829391638132194,-143.731126961952,0.0)
    ops.remove('sp',66)
if pid == 12:
    ops.load(66, 0.09525910413623404,0.4829391638132194,-143.731126961952,0.0)
    ops.remove('sp',66)
if pid == 7:
    ops.load(67, 0.11580394237954804,-0.5588472242578024,-143.6162489336641,0.0)
    ops.remove('sp',67)
if pid == 8:
    ops.load(67, 0.11580394237954804,-0.5588472242578024,-143.6162489336641,0.0)
    ops.remove('sp',67)
if pid == 12:
    ops.load(67, 0.11580394237954804,-0.5588472242578024,-143.6162489336641,0.0)
    ops.remove('sp',67)
if pid == 13:
    ops.load(67, 0.11580394237954804,-0.5588472242578024,-143.6162489336641,0.0)
    ops.remove('sp',67)
if pid == 8:
    ops.load(68, 15.022793252414932,-51.836600521517084,-125.57772949157524,0.0)
    ops.remove('sp',68)
if pid == 9:
    ops.load(68, 15.022793252414932,-51.836600521517084,-125.57772949157524,0.0)
    ops.remove('sp',68)
if pid == 13:
    ops.load(68, 15.022793252414932,-51.836600521517084,-125.57772949157524,0.0)
    ops.remove('sp',68)
if pid == 14:
    ops.load(68, 15.022793252414932,-51.836600521517084,-125.57772949157524,0.0)
    ops.remove('sp',68)
if pid == 0:
    ops.load(69, 8.815850146368204,26.896487368242916,-137.53076760691823,0.0)
    ops.remove('sp',69)
if pid == 1:
    ops.load(69, 8.815850146368204,26.896487368242916,-137.53076760691823,0.0)
    ops.remove('sp',69)
if pid == 5:
    ops.load(69, 8.815850146368204,26.896487368242916,-137.53076760691823,0.0)
    ops.remove('sp',69)
if pid == 6:
    ops.load(69, 8.815850146368204,26.896487368242916,-137.53076760691823,0.0)
    ops.remove('sp',69)
if pid == 1:
    ops.load(70, 0.9789527901307706,-0.7211776981725382,-155.1391796122996,0.0)
    ops.remove('sp',70)
if pid == 2:
    ops.load(70, 0.9789527901307706,-0.7211776981725382,-155.1391796122996,0.0)
    ops.remove('sp',70)
if pid == 6:
    ops.load(70, 0.9789527901307706,-0.7211776981725382,-155.1391796122996,0.0)
    ops.remove('sp',70)
if pid == 7:
    ops.load(70, 0.9789527901307706,-0.7211776981725382,-155.1391796122996,0.0)
    ops.remove('sp',70)
if pid == 2:
    ops.load(71, 1.0312747375054758,0.2635316265885002,-155.3930642237536,0.0)
    ops.remove('sp',71)
if pid == 3:
    ops.load(71, 1.0312747375054758,0.2635316265885002,-155.3930642237536,0.0)
    ops.remove('sp',71)
if pid == 7:
    ops.load(71, 1.0312747375054758,0.2635316265885002,-155.3930642237536,0.0)
    ops.remove('sp',71)
if pid == 8:
    ops.load(71, 1.0312747375054758,0.2635316265885002,-155.3930642237536,0.0)
    ops.remove('sp',71)
if pid == 3:
    ops.load(72, 9.078280456214895,-29.08860706647272,-136.6829427356214,0.0)
    ops.remove('sp',72)
if pid == 4:
    ops.load(72, 9.078280456214895,-29.08860706647272,-136.6829427356214,0.0)
    ops.remove('sp',72)
if pid == 8:
    ops.load(72, 9.078280456214895,-29.08860706647272,-136.6829427356214,0.0)
    ops.remove('sp',72)
if pid == 9:
    ops.load(72, 9.078280456214895,-29.08860706647272,-136.6829427356214,0.0)
    ops.remove('sp',72)
if pid == 0:
    ops.load(73, -0.48939887229629553,0.3626716021120304,-118.35509994966385,0.0)
    ops.remove('sp',73)
if pid == 1:
    ops.load(73, -0.48939887229629553,0.3626716021120304,-118.35509994966385,0.0)
    ops.remove('sp',73)
if pid == 5:
    ops.load(73, -0.48939887229629553,0.3626716021120304,-118.35509994966385,0.0)
    ops.remove('sp',73)
if pid == 6:
    ops.load(73, -0.48939887229629553,0.3626716021120304,-118.35509994966385,0.0)
    ops.remove('sp',73)
if pid == 1:
    ops.load(74, 0.664752486103976,0.9397578926293224,-124.15588875715551,0.0)
    ops.remove('sp',74)
if pid == 2:
    ops.load(74, 0.664752486103976,0.9397578926293224,-124.15588875715551,0.0)
    ops.remove('sp',74)
if pid == 6:
    ops.load(74, 0.664752486103976,0.9397578926293224,-124.15588875715551,0.0)
    ops.remove('sp',74)
if pid == 7:
    ops.load(74, 0.664752486103976,0.9397578926293224,-124.15588875715551,0.0)
    ops.remove('sp',74)
if pid == 2:
    ops.load(75, 0.5546832256733041,-0.04735286644550207,-123.63396997767393,0.0)
    ops.remove('sp',75)
if pid == 3:
    ops.load(75, 0.5546832256733041,-0.04735286644550207,-123.63396997767393,0.0)
    ops.remove('sp',75)
if pid == 7:
    ops.load(75, 0.5546832256733041,-0.04735286644550207,-123.63396997767393,0.0)
    ops.remove('sp',75)
if pid == 8:
    ops.load(75, 0.5546832256733041,-0.04735286644550207,-123.63396997767393,0.0)
    ops.remove('sp',75)
if pid == 3:
    ops.load(76, 0.18383140383649862,0.5893984774586853,-122.09923716827424,0.0)
    ops.remove('sp',76)
if pid == 4:
    ops.load(76, 0.18383140383649862,0.5893984774586853,-122.09923716827424,0.0)
    ops.remove('sp',76)
if pid == 8:
    ops.load(76, 0.18383140383649862,0.5893984774586853,-122.09923716827424,0.0)
    ops.remove('sp',76)
if pid == 9:
    ops.load(76, 0.18383140383649862,0.5893984774586853,-122.09923716827424,0.0)
    ops.remove('sp',76)
if pid == 5:
    ops.load(77, -3.9433332503189633,0.8618960538853582,-85.19979135592875,0.0)
    ops.remove('sp',77)
if pid == 6:
    ops.load(77, -3.9433332503189633,0.8618960538853582,-85.19979135592875,0.0)
    ops.remove('sp',77)
if pid == 10:
    ops.load(77, -3.9433332503189633,0.8618960538853582,-85.19979135592875,0.0)
    ops.remove('sp',77)
if pid == 11:
    ops.load(77, -3.9433332503189633,0.8618960538853582,-85.19979135592875,0.0)
    ops.remove('sp',77)
if pid == 6:
    ops.load(78, 2.820353059751009,3.039723120394034,-94.22361997037203,0.0)
    ops.remove('sp',78)
if pid == 7:
    ops.load(78, 2.820353059751009,3.039723120394034,-94.22361997037203,0.0)
    ops.remove('sp',78)
if pid == 11:
    ops.load(78, 2.820353059751009,3.039723120394034,-94.22361997037203,0.0)
    ops.remove('sp',78)
if pid == 12:
    ops.load(78, 2.820353059751009,3.039723120394034,-94.22361997037203,0.0)
    ops.remove('sp',78)
if pid == 7:
    ops.load(79, 2.1882248053482276,0.09659355496617561,-95.82314001963498,0.0)
    ops.remove('sp',79)
if pid == 8:
    ops.load(79, 2.1882248053482276,0.09659355496617561,-95.82314001963498,0.0)
    ops.remove('sp',79)
if pid == 12:
    ops.load(79, 2.1882248053482276,0.09659355496617561,-95.82314001963498,0.0)
    ops.remove('sp',79)
if pid == 13:
    ops.load(79, 2.1882248053482276,0.09659355496617561,-95.82314001963498,0.0)
    ops.remove('sp',79)
if pid == 8:
    ops.load(80, -2.6234005997051963,7.013905342316239,-95.81382881003744,0.0)
    ops.remove('sp',80)
if pid == 9:
    ops.load(80, -2.6234005997051963,7.013905342316239,-95.81382881003744,0.0)
    ops.remove('sp',80)
if pid == 13:
    ops.load(80, -2.6234005997051963,7.013905342316239,-95.81382881003744,0.0)
    ops.remove('sp',80)
if pid == 14:
    ops.load(80, -2.6234005997051963,7.013905342316239,-95.81382881003744,0.0)
    ops.remove('sp',80)
if pid == 10:
    ops.load(81, -6.1036221101181685,8.730919371094904,-44.84876267488011,0.0)
    ops.remove('sp',81)
if pid == 11:
    ops.load(81, -6.1036221101181685,8.730919371094904,-44.84876267488011,0.0)
    ops.remove('sp',81)
if pid == 15:
    ops.load(81, -6.1036221101181685,8.730919371094904,-44.84876267488011,0.0)
    ops.remove('sp',81)
if pid == 16:
    ops.load(81, -6.1036221101181685,8.730919371094904,-44.84876267488011,0.0)
    ops.remove('sp',81)
if pid == 11:
    ops.load(82, 12.254643973207543,3.617286520212202,-52.11313310629218,0.0)
    ops.remove('sp',82)
if pid == 12:
    ops.load(82, 12.254643973207543,3.617286520212202,-52.11313310629218,0.0)
    ops.remove('sp',82)
if pid == 16:
    ops.load(82, 12.254643973207543,3.617286520212202,-52.11313310629218,0.0)
    ops.remove('sp',82)
if pid == 17:
    ops.load(82, 12.254643973207543,3.617286520212202,-52.11313310629218,0.0)
    ops.remove('sp',82)
if pid == 12:
    ops.load(83, 10.545466676275991,-0.4086068900077535,-53.07900157365983,0.0)
    ops.remove('sp',83)
if pid == 13:
    ops.load(83, 10.545466676275991,-0.4086068900077535,-53.07900157365983,0.0)
    ops.remove('sp',83)
if pid == 17:
    ops.load(83, 10.545466676275991,-0.4086068900077535,-53.07900157365983,0.0)
    ops.remove('sp',83)
if pid == 18:
    ops.load(83, 10.545466676275991,-0.4086068900077535,-53.07900157365983,0.0)
    ops.remove('sp',83)
if pid == 13:
    ops.load(84, -1.8725287440278362,13.56406055122898,-52.722341019134575,0.0)
    ops.remove('sp',84)
if pid == 14:
    ops.load(84, -1.8725287440278362,13.56406055122898,-52.722341019134575,0.0)
    ops.remove('sp',84)
if pid == 18:
    ops.load(84, -1.8725287440278362,13.56406055122898,-52.722341019134575,0.0)
    ops.remove('sp',84)
if pid == 19:
    ops.load(84, -1.8725287440278362,13.56406055122898,-52.722341019134575,0.0)
    ops.remove('sp',84)
if pid == 15:
    ops.load(85, -14.694232747721044,-20.126921654970985,-209.5322864077901,0.0)
    ops.remove('sp',85)
if pid == 16:
    ops.load(85, -14.694232747721044,-20.126921654970985,-209.5322864077901,0.0)
    ops.remove('sp',85)
if pid == 20:
    ops.load(85, -14.694232747721044,-20.126921654970985,-209.5322864077901,0.0)
    ops.remove('sp',85)
if pid == 21:
    ops.load(85, -14.694232747721044,-20.126921654970985,-209.5322864077901,0.0)
    ops.remove('sp',85)
if pid == 16:
    ops.load(86, 31.300728555022275,3.5968323077641857,-196.49644438192706,0.0)
    ops.remove('sp',86)
if pid == 17:
    ops.load(86, 31.300728555022275,3.5968323077641857,-196.49644438192706,0.0)
    ops.remove('sp',86)
if pid == 21:
    ops.load(86, 31.300728555022275,3.5968323077641857,-196.49644438192706,0.0)
    ops.remove('sp',86)
if pid == 22:
    ops.load(86, 31.300728555022275,3.5968323077641857,-196.49644438192706,0.0)
    ops.remove('sp',86)
if pid == 17:
    ops.load(87, 32.58319773549808,-4.067034921377909,-202.90798152016504,0.0)
    ops.remove('sp',87)
if pid == 18:
    ops.load(87, 32.58319773549808,-4.067034921377909,-202.90798152016504,0.0)
    ops.remove('sp',87)
if pid == 22:
    ops.load(87, 32.58319773549808,-4.067034921377909,-202.90798152016504,0.0)
    ops.remove('sp',87)
if pid == 23:
    ops.load(87, 32.58319773549808,-4.067034921377909,-202.90798152016504,0.0)
    ops.remove('sp',87)
if pid == 18:
    ops.load(88, 12.729317844975151,19.274090017555384,-207.69173704560566,0.0)
    ops.remove('sp',88)
if pid == 19:
    ops.load(88, 12.729317844975151,19.274090017555384,-207.69173704560566,0.0)
    ops.remove('sp',88)
if pid == 23:
    ops.load(88, 12.729317844975151,19.274090017555384,-207.69173704560566,0.0)
    ops.remove('sp',88)
if pid == 24:
    ops.load(88, 12.729317844975151,19.274090017555384,-207.69173704560566,0.0)
    ops.remove('sp',88)
if pid == 20:
    ops.load(217, 159.91012633889292,-71.73818706559463,-97.94814619594585)
    ops.remove('sp',217)
if pid == 15:
    ops.load(218, 146.5071584965945,1.179817089105656,21.516246136348084)
    ops.remove('sp',218)
if pid == 10:
    ops.load(219, 137.7082034203873,0.4946731557396607,33.315355943202846)
    ops.remove('sp',219)
if pid == 5:
    ops.load(220, 92.56847414335449,3.8267196069783282,33.49324777242226)
    ops.remove('sp',220)
if pid == 0:
    ops.load(221, 33.67744347251769,1.7458431329260535,37.61378648084451)
    ops.remove('sp',221)
if pid == 0:
    ops.load(222, 14.996868811088962,-1.2515482446433897,35.69275849774216)
    ops.remove('sp',222)
if pid == 1:
    ops.load(223, 29.253106537107342,-1.2310953465182444,36.42733631474778)
    ops.remove('sp',223)
if pid == 2:
    ops.load(224, 35.74622301904576,0.3452459681804889,37.16454778745618)
    ops.remove('sp',224)
if pid == 3:
    ops.load(225, 32.88788842533891,1.2054327373431708,35.75017855296975)
    ops.remove('sp',225)
if pid == 4:
    ops.load(226, 16.795406332811254,0.9979674202772834,35.75528585976636)
    ops.remove('sp',226)
if pid == 24:
    ops.load(227, 366.226691403418,-11.264237946846956,48.945726511037236)
    ops.remove('sp',227)
if pid == 19:
    ops.load(228, 184.8081632934078,-1.355739675023302,19.787010272975703)
    ops.remove('sp',228)
if pid == 14:
    ops.load(229, 151.93132762989572,-3.8657667637369877,34.39057850905118)
    ops.remove('sp',229)
if pid == 9:
    ops.load(230, 100.45878580845077,-4.0287643086033285,32.72472141391178)
    ops.remove('sp',230)
if pid == 4:
    ops.load(231, 35.14303086044998,-1.5840546602972163,39.81465677421932)
    ops.remove('sp',231)
if pid == 20:
    ops.load(232, 351.6151936108378,-16.357964252820242,224.635708575271)
    ops.remove('sp',232)
if pid == 21:
    ops.load(233, 390.6318150081987,-14.854479154185213,322.75736804599387)
    ops.remove('sp',233)
if pid == 22:
    ops.load(234, 16.26796991598096,-14.355159561032133,86.59882747627944)
    ops.remove('sp',234)
if pid == 23:
    ops.load(235, 18.632977806174765,-4.890437121216932,80.14791694131887)
    ops.remove('sp',235)
if pid == 24:
    ops.load(236, -1.1880714318165015,124.47860144600192,67.45778620270393)
    ops.remove('sp',236)
if pid == 20:
    ops.load(237, -29.730939949541177,16.917561578710778,109.21515060554849)
    ops.remove('sp',237)
if pid == 15:
    ops.load(238, 5.2682370788388315,-8.339785488602056,8.599856202194669)
    ops.remove('sp',238)
if pid == 10:
    ops.load(239, 2.330609092994418,-5.814745011950936,9.31328089750872)
    ops.remove('sp',239)
if pid == 5:
    ops.load(240, 1.8618559319807515,2.5460165701714335,21.236027586245086)
    ops.remove('sp',240)
if pid == 0:
    ops.load(241, 0.06295793335084832,-0.059025738755566354,47.82005732856919)
    ops.remove('sp',241)
if pid == 0:
    ops.load(242, 0.026285910383911634,0.03294472854139395,47.78701255147382)
    ops.remove('sp',242)
if pid == 1:
    ops.load(243, 0.042028428646448776,-0.0017914650754986717,47.834036657403004)
    ops.remove('sp',243)
if pid == 2:
    ops.load(244, 0.06070845228251782,-0.0034063739614558306,47.854484253259116)
    ops.remove('sp',244)
if pid == 3:
    ops.load(245, 0.003081372264928439,-0.0013524448370419062,47.679878919669555)
    ops.remove('sp',245)
if pid == 4:
    ops.load(246, 0.037642427113079524,0.050848168631521584,47.60061403422269)
    ops.remove('sp',246)
if pid == 24:
    ops.load(247, -41.38578665819876,-88.50792553412218,190.71880566097124)
    ops.remove('sp',247)
if pid == 19:
    ops.load(248, 4.679813453366041,-23.20793092063005,12.32473371239836)
    ops.remove('sp',248)
if pid == 14:
    ops.load(249, 3.3888954262863167,-9.645273553970823,24.88182099511524)
    ops.remove('sp',249)
if pid == 9:
    ops.load(250, 0.7397191831783984,-2.380644019579504,32.37412364232544)
    ops.remove('sp',250)
if pid == 4:
    ops.load(251, 0.06461668995021608,0.01356880932132818,47.46079383079437)
    ops.remove('sp',251)
if pid == 20:
    ops.load(252, -23.217498734972864,-29.953429276843924,129.46240827870466)
    ops.remove('sp',252)
if pid == 21:
    ops.load(253, -64.34668924132089,14.831229208510694,229.39977902467953)
    ops.remove('sp',253)
if pid == 22:
    ops.load(254, -58.32366999638791,0.4194003315970688,216.21049978492997)
    ops.remove('sp',254)
if pid == 23:
    ops.load(255, -63.699692736853216,-1.0173065342843142,232.9305904966324)
    ops.remove('sp',255)
if pid == 24:
    ops.load(256, -48.474668368549175,-22.129306133317314,203.07371023833198)
    ops.remove('sp',256)
if pid == 15:
    ops.load(277, -23.836288887906296,-105.67974959678237,-75.94543639262454)
    ops.remove('sp',277)
if pid == 20:
    ops.load(277, -23.836288887906296,-105.67974959678237,-75.94543639262454)
    ops.remove('sp',277)
if pid == 20:
    ops.load(278, -69.04758769150646,-19.282817118796174,-223.94597336529174)
    ops.remove('sp',278)
if pid == 21:
    ops.load(278, -69.04758769150646,-19.282817118796174,-223.94597336529174)
    ops.remove('sp',278)
if pid == 16:
    ops.load(279, 1.3384582880346947,-10.282589229981916,-88.75048748466449)
    ops.remove('sp',279)
if pid == 21:
    ops.load(279, 1.3384582880346947,-10.282589229981916,-88.75048748466449)
    ops.remove('sp',279)
if pid == 21:
    ops.load(280, 12.649735620283625,-79.04852890226519,-2.1631872647920005)
    ops.remove('sp',280)
if pid == 22:
    ops.load(280, 12.649735620283625,-79.04852890226519,-2.1631872647920005)
    ops.remove('sp',280)
if pid == 17:
    ops.load(281, 11.449722760354497,-5.814315201885958,50.14349012664522)
    ops.remove('sp',281)
if pid == 22:
    ops.load(281, 11.449722760354497,-5.814315201885958,50.14349012664522)
    ops.remove('sp',281)
if pid == 22:
    ops.load(282, 54.65268483960349,3.4729814684917315,166.09619075660578)
    ops.remove('sp',282)
if pid == 23:
    ops.load(282, 54.65268483960349,3.4729814684917315,166.09619075660578)
    ops.remove('sp',282)
if pid == 18:
    ops.load(283, 12.22276296595984,-0.8581901653618677,45.35711451279148)
    ops.remove('sp',283)
if pid == 23:
    ops.load(283, 12.22276296595984,-0.8581901653618677,45.35711451279148)
    ops.remove('sp',283)
if pid == 23:
    ops.load(284, 56.19797383387997,47.0906015040512,148.17813621544207)
    ops.remove('sp',284)
if pid == 24:
    ops.load(284, 56.19797383387997,47.0906015040512,148.17813621544207)
    ops.remove('sp',284)
if pid == 19:
    ops.load(285, -20.568915777922495,128.12474498479804,3.128617225221518)
    ops.remove('sp',285)
if pid == 24:
    ops.load(285, -20.568915777922495,128.12474498479804,3.128617225221518)
    ops.remove('sp',285)
if pid == 10:
    ops.load(286, -17.19223165515772,-89.29185862114373,73.37461247507083)
    ops.remove('sp',286)
if pid == 15:
    ops.load(286, -17.19223165515772,-89.29185862114373,73.37461247507083)
    ops.remove('sp',286)
if pid == 15:
    ops.load(287, 1.082592807493623,-36.701942310890324,48.849360880204)
    ops.remove('sp',287)
if pid == 16:
    ops.load(287, 1.082592807493623,-36.701942310890324,48.849360880204)
    ops.remove('sp',287)
if pid == 11:
    ops.load(288, -0.07410198352406196,-3.639531458217205,90.93862052648208)
    ops.remove('sp',288)
if pid == 16:
    ops.load(288, -0.07410198352406196,-3.639531458217205,90.93862052648208)
    ops.remove('sp',288)
if pid == 16:
    ops.load(289, -1.0844618541827342,-1.9619842583564409,92.53594405062918)
    ops.remove('sp',289)
if pid == 17:
    ops.load(289, -1.0844618541827342,-1.9619842583564409,92.53594405062918)
    ops.remove('sp',289)
if pid == 12:
    ops.load(290, -0.3621620780105439,-0.19619059473652375,94.99279917256248)
    ops.remove('sp',290)
if pid == 17:
    ops.load(290, -0.3621620780105439,-0.19619059473652375,94.99279917256248)
    ops.remove('sp',290)
if pid == 17:
    ops.load(291, -0.3709497137086972,-0.3391196283137516,94.74985638133988)
    ops.remove('sp',291)
if pid == 18:
    ops.load(291, -0.3709497137086972,-0.3391196283137516,94.74985638133988)
    ops.remove('sp',291)
if pid == 13:
    ops.load(292, -0.1815645121522208,0.5886897797482791,96.07813557055209)
    ops.remove('sp',292)
if pid == 18:
    ops.load(292, -0.1815645121522208,0.5886897797482791,96.07813557055209)
    ops.remove('sp',292)
if pid == 18:
    ops.load(293, 3.4479486173444482,46.62828231078977,63.94491185207292)
    ops.remove('sp',293)
if pid == 19:
    ops.load(293, 3.4479486173444482,46.62828231078977,63.94491185207292)
    ops.remove('sp',293)
if pid == 14:
    ops.load(294, -22.75162385319227,108.97065534836261,72.13838366187147)
    ops.remove('sp',294)
if pid == 19:
    ops.load(294, -22.75162385319227,108.97065534836261,72.13838366187147)
    ops.remove('sp',294)
if pid == 5:
    ops.load(295, -14.940521910158989,-75.59865878626121,77.5027604128048)
    ops.remove('sp',295)
if pid == 10:
    ops.load(295, -14.940521910158989,-75.59865878626121,77.5027604128048)
    ops.remove('sp',295)
if pid == 10:
    ops.load(296, 2.4360026854089547,-28.471682342970293,84.66797836175007)
    ops.remove('sp',296)
if pid == 11:
    ops.load(296, 2.4360026854089547,-28.471682342970293,84.66797836175007)
    ops.remove('sp',296)
if pid == 6:
    ops.load(297, -0.13428944569461915,-0.5589351016997001,95.6851374516369)
    ops.remove('sp',297)
if pid == 11:
    ops.load(297, -0.13428944569461915,-0.5589351016997001,95.6851374516369)
    ops.remove('sp',297)
if pid == 11:
    ops.load(298, -0.28930734319226525,-0.09001949316467137,95.96295885714073)
    ops.remove('sp',298)
if pid == 12:
    ops.load(298, -0.28930734319226525,-0.09001949316467137,95.96295885714073)
    ops.remove('sp',298)
if pid == 7:
    ops.load(299, -0.294591113267244,0.002879961475635506,95.95900578725755)
    ops.remove('sp',299)
if pid == 12:
    ops.load(299, -0.294591113267244,0.002879961475635506,95.95900578725755)
    ops.remove('sp',299)
if pid == 12:
    ops.load(300, -0.2737107413929346,0.1808388166236716,95.84870132482469)
    ops.remove('sp',300)
if pid == 13:
    ops.load(300, -0.2737107413929346,0.1808388166236716,95.84870132482469)
    ops.remove('sp',300)
if pid == 8:
    ops.load(301, -0.1608099322514361,0.5933569408309795,95.58922831753453)
    ops.remove('sp',301)
if pid == 13:
    ops.load(301, -0.1608099322514361,0.5933569408309795,95.58922831753453)
    ops.remove('sp',301)
if pid == 13:
    ops.load(302, 2.1803140885003804,29.750857639428734,87.72781575460829)
    ops.remove('sp',302)
if pid == 14:
    ops.load(302, 2.1803140885003804,29.750857639428734,87.72781575460829)
    ops.remove('sp',302)
if pid == 9:
    ops.load(303, -16.617671588060638,79.30361961928865,77.93485753405815)
    ops.remove('sp',303)
if pid == 14:
    ops.load(303, -16.617671588060638,79.30361961928865,77.93485753405815)
    ops.remove('sp',303)
if pid == 0:
    ops.load(304, -7.959295679829382,-44.25546985449891,81.74117343880405)
    ops.remove('sp',304)
if pid == 5:
    ops.load(304, -7.959295679829382,-44.25546985449891,81.74117343880405)
    ops.remove('sp',304)
if pid == 5:
    ops.load(305, 0.7507408137290155,-17.612565270112313,84.5955258265679)
    ops.remove('sp',305)
if pid == 6:
    ops.load(305, 0.7507408137290155,-17.612565270112313,84.5955258265679)
    ops.remove('sp',305)
if pid == 1:
    ops.load(306, 0.31571479448953943,0.0873783850951779,99.45113722438364)
    ops.remove('sp',306)
if pid == 6:
    ops.load(306, 0.31571479448953943,0.0873783850951779,99.45113722438364)
    ops.remove('sp',306)
if pid == 6:
    ops.load(307, -0.2811494886146805,-0.05200755383398957,95.91545839870487)
    ops.remove('sp',307)
if pid == 7:
    ops.load(307, -0.2811494886146805,-0.05200755383398957,95.91545839870487)
    ops.remove('sp',307)
if pid == 2:
    ops.load(308, 0.8162979651395602,0.09586030698132533,100.29822337297924)
    ops.remove('sp',308)
if pid == 7:
    ops.load(308, 0.8162979651395602,0.09586030698132533,100.29822337297924)
    ops.remove('sp',308)
if pid == 7:
    ops.load(309, -0.28760766578287744,0.05637341902812314,95.9332018348004)
    ops.remove('sp',309)
if pid == 8:
    ops.load(309, -0.28760766578287744,0.05637341902812314,95.9332018348004)
    ops.remove('sp',309)
if pid == 3:
    ops.load(310, 0.4397264151069958,-0.0095801769059492,99.60718902559418)
    ops.remove('sp',310)
if pid == 8:
    ops.load(310, 0.4397264151069958,-0.0095801769059492,99.60718902559418)
    ops.remove('sp',310)
if pid == 8:
    ops.load(311, 1.2886623332275227,19.94768067663127,83.27548309641307)
    ops.remove('sp',311)
if pid == 9:
    ops.load(311, 1.2886623332275227,19.94768067663127,83.27548309641307)
    ops.remove('sp',311)
if pid == 4:
    ops.load(312, -6.6051057832483036,45.92771201070737,80.82025654460004)
    ops.remove('sp',312)
if pid == 9:
    ops.load(312, -6.6051057832483036,45.92771201070737,80.82025654460004)
    ops.remove('sp',312)
if pid == 0:
    ops.load(313, 0.41315387933996794,-5.828255500991327,104.19120525906607)
    ops.remove('sp',313)
if pid == 1:
    ops.load(313, 0.41315387933996794,-5.828255500991327,104.19120525906607)
    ops.remove('sp',313)
if pid == 1:
    ops.load(314, 3.0232542596787564,1.3634893977404874,111.67889205714197)
    ops.remove('sp',314)
if pid == 2:
    ops.load(314, 3.0232542596787564,1.3634893977404874,111.67889205714197)
    ops.remove('sp',314)
if pid == 2:
    ops.load(315, 3.25297210702165,-0.7195372042073065,112.13760216254997)
    ops.remove('sp',315)
if pid == 3:
    ops.load(315, 3.25297210702165,-0.7195372042073065,112.13760216254997)
    ops.remove('sp',315)
if pid == 3:
    ops.load(316, -0.17624057035119922,7.13408114181137,103.13703922614147)
    ops.remove('sp',316)
if pid == 4:
    ops.load(316, -0.17624057035119922,7.13408114181137,103.13703922614147)
    ops.remove('sp',316)
if pid == 0:
    ops.load(317, 0.7378125781958853,0.7346372710774132,82.59892680171528)
    ops.remove('sp',317)
if pid == 5:
    ops.load(317, 0.7378125781958853,0.7346372710774132,82.59892680171528)
    ops.remove('sp',317)
if pid == 0:
    ops.load(318, 0.3827824071140885,0.004899097034483683,95.85943361276452)
    ops.remove('sp',318)
if pid == 1:
    ops.load(318, 0.3827824071140885,0.004899097034483683,95.85943361276452)
    ops.remove('sp',318)
if pid == 1:
    ops.load(319, -0.6864981609995815,-0.6065540312314186,84.9194408807876)
    ops.remove('sp',319)
if pid == 6:
    ops.load(319, -0.6864981609995815,-0.6065540312314186,84.9194408807876)
    ops.remove('sp',319)
if pid == 1:
    ops.load(320, 0.4198878579502705,0.007288025238715816,95.91941737031561)
    ops.remove('sp',320)
if pid == 2:
    ops.load(320, 0.4198878579502705,0.007288025238715816,95.91941737031561)
    ops.remove('sp',320)
if pid == 2:
    ops.load(321, -0.3825504740599584,-0.4401923364218173,85.82010215068834)
    ops.remove('sp',321)
if pid == 7:
    ops.load(321, -0.3825504740599584,-0.4401923364218173,85.82010215068834)
    ops.remove('sp',321)
if pid == 2:
    ops.load(322, 0.46094962901268005,0.05148779602374715,96.087886462574)
    ops.remove('sp',322)
if pid == 3:
    ops.load(322, 0.46094962901268005,0.05148779602374715,96.087886462574)
    ops.remove('sp',322)
if pid == 3:
    ops.load(323, -0.4687747632126146,0.5519445400897397,84.4022219909825)
    ops.remove('sp',323)
if pid == 8:
    ops.load(323, -0.4687747632126146,0.5519445400897397,84.4022219909825)
    ops.remove('sp',323)
if pid == 3:
    ops.load(324, 0.4034162403845577,0.10099048458472566,95.66536490793949)
    ops.remove('sp',324)
if pid == 4:
    ops.load(324, 0.4034162403845577,0.10099048458472566,95.66536490793949)
    ops.remove('sp',324)
if pid == 4:
    ops.load(325, -0.0869048693069844,-0.7950586896647324,86.91117904534369)
    ops.remove('sp',325)
if pid == 9:
    ops.load(325, -0.0869048693069844,-0.7950586896647324,86.91117904534369)
    ops.remove('sp',325)
if pid == 5:
    ops.load(326, -10.873969982451715,3.00711767514553,69.7977956630368)
    ops.remove('sp',326)
if pid == 10:
    ops.load(326, -10.873969982451715,3.00711767514553,69.7977956630368)
    ops.remove('sp',326)
if pid == 5:
    ops.load(327, -1.9469489629554262,-0.6130019145876338,54.33915605478178)
    ops.remove('sp',327)
if pid == 6:
    ops.load(327, -1.9469489629554262,-0.6130019145876338,54.33915605478178)
    ops.remove('sp',327)
if pid == 6:
    ops.load(328, -9.896050724504581,-3.249809920022293,56.82104622334825)
    ops.remove('sp',328)
if pid == 11:
    ops.load(328, -9.896050724504581,-3.249809920022293,56.82104622334825)
    ops.remove('sp',328)
if pid == 6:
    ops.load(329, -2.999365565750348,-2.1545253884920568,66.91252876923103)
    ops.remove('sp',329)
if pid == 7:
    ops.load(329, -2.999365565750348,-2.1545253884920568,66.91252876923103)
    ops.remove('sp',329)
if pid == 7:
    ops.load(330, -7.885762378565534,-1.2397442573188882,63.413769587160985)
    ops.remove('sp',330)
if pid == 12:
    ops.load(330, -7.885762378565534,-1.2397442573188882,63.413769587160985)
    ops.remove('sp',330)
if pid == 7:
    ops.load(331, -2.6079677801234302,0.42675359176147065,66.65824297591023)
    ops.remove('sp',331)
if pid == 8:
    ops.load(331, -2.6079677801234302,0.42675359176147065,66.65824297591023)
    ops.remove('sp',331)
if pid == 8:
    ops.load(332, -7.620418515021158,2.263983392963327,61.393120161794904)
    ops.remove('sp',332)
if pid == 13:
    ops.load(332, -7.620418515021158,2.263983392963327,61.393120161794904)
    ops.remove('sp',332)
if pid == 8:
    ops.load(333, -1.4487334892879622,-2.851938632009368,59.49454020367091)
    ops.remove('sp',333)
if pid == 9:
    ops.load(333, -1.4487334892879622,-2.851938632009368,59.49454020367091)
    ops.remove('sp',333)
if pid == 9:
    ops.load(334, -7.34065566230246,-11.689614384710948,72.24486465985309)
    ops.remove('sp',334)
if pid == 14:
    ops.load(334, -7.34065566230246,-11.689614384710948,72.24486465985309)
    ops.remove('sp',334)
if pid == 10:
    ops.load(335, -34.11363607888009,-2.578653758346613,45.09956343623297)
    ops.remove('sp',335)
if pid == 15:
    ops.load(335, -34.11363607888009,-2.578653758346613,45.09956343623297)
    ops.remove('sp',335)
if pid == 10:
    ops.load(336, -11.299336246203538,2.3620446161027573,51.85743599067119)
    ops.remove('sp',336)
if pid == 11:
    ops.load(336, -11.299336246203538,2.3620446161027573,51.85743599067119)
    ops.remove('sp',336)
if pid == 11:
    ops.load(337, -36.92532174669488,-6.575765119552155,34.71603793016109)
    ops.remove('sp',337)
if pid == 16:
    ops.load(337, -36.92532174669488,-6.575765119552155,34.71603793016109)
    ops.remove('sp',337)
if pid == 11:
    ops.load(338, -15.941771660788701,-4.28763056467778,58.21252691034995)
    ops.remove('sp',338)
if pid == 12:
    ops.load(338, -15.941771660788701,-4.28763056467778,58.21252691034995)
    ops.remove('sp',338)
if pid == 12:
    ops.load(339, -28.760825200983895,-1.6650783637633926,39.5806431840985)
    ops.remove('sp',339)
if pid == 17:
    ops.load(339, -28.760825200983895,-1.6650783637633926,39.5806431840985)
    ops.remove('sp',339)
if pid == 12:
    ops.load(340, -13.696443679619868,1.2368611257505755,59.48645888312143)
    ops.remove('sp',340)
if pid == 13:
    ops.load(340, -13.696443679619868,1.2368611257505755,59.48645888312143)
    ops.remove('sp',340)
if pid == 13:
    ops.load(341, -29.990707726498478,3.879769625817024,37.315783169797776)
    ops.remove('sp',341)
if pid == 18:
    ops.load(341, -29.990707726498478,3.879769625817024,37.315783169797776)
    ops.remove('sp',341)
if pid == 13:
    ops.load(342, -8.721889212019187,-8.994350367294423,56.00388072681751)
    ops.remove('sp',342)
if pid == 14:
    ops.load(342, -8.721889212019187,-8.994350367294423,56.00388072681751)
    ops.remove('sp',342)
if pid == 14:
    ops.load(343, -24.838112900199604,-21.03495324636288,49.03351997639106)
    ops.remove('sp',343)
if pid == 19:
    ops.load(343, -24.838112900199604,-21.03495324636288,49.03351997639106)
    ops.remove('sp',343)
if pid == 15:
    ops.load(344, -83.7997423640372,28.60910057485035,98.99147228643663)
    ops.remove('sp',344)
if pid == 20:
    ops.load(344, -83.7997423640372,28.60910057485035,98.99147228643663)
    ops.remove('sp',344)
if pid == 15:
    ops.load(345, -41.387484709552325,-14.192759668605632,-6.5962118613469976)
    ops.remove('sp',345)
if pid == 16:
    ops.load(345, -41.387484709552325,-14.192759668605632,-6.5962118613469976)
    ops.remove('sp',345)
if pid == 16:
    ops.load(346, -29.170028838359286,-4.07781354643274,12.370226403358515)
    ops.remove('sp',346)
if pid == 21:
    ops.load(346, -29.170028838359286,-4.07781354643274,12.370226403358515)
    ops.remove('sp',346)
if pid == 16:
    ops.load(347, -47.20869593962797,-3.2126610435830614,14.913076486646933)
    ops.remove('sp',347)
if pid == 17:
    ops.load(347, -47.20869593962797,-3.2126610435830614,14.913076486646933)
    ops.remove('sp',347)
if pid == 17:
    ops.load(348, -24.41525342292314,1.2088874118186723,26.679380342507102)
    ops.remove('sp',348)
if pid == 22:
    ops.load(348, -24.41525342292314,1.2088874118186723,26.679380342507102)
    ops.remove('sp',348)
if pid == 17:
    ops.load(349, -43.54690581063167,1.8834496520177737,15.907171339300378)
    ops.remove('sp',349)
if pid == 18:
    ops.load(349, -43.54690581063167,1.8834496520177737,15.907171339300378)
    ops.remove('sp',349)
if pid == 18:
    ops.load(350, -23.149904282355372,4.3555237350586,16.387746034399413)
    ops.remove('sp',350)
if pid == 23:
    ops.load(350, -23.149904282355372,4.3555237350586,16.387746034399413)
    ops.remove('sp',350)
if pid == 18:
    ops.load(351, -35.8931565235296,-12.365314708821884,4.346837169051945)
    ops.remove('sp',351)
if pid == 19:
    ops.load(351, -35.8931565235296,-12.365314708821884,4.346837169051945)
    ops.remove('sp',351)
if pid == 19:
    ops.load(352, -53.64081994203554,-33.66541448267962,23.33209000941605)
    ops.remove('sp',352)
if pid == 24:
    ops.load(352, -53.64081994203554,-33.66541448267962,23.33209000941605)
    ops.remove('sp',352)
if pid == 20:
    ops.load(353, -204.9322286481193,62.20724450773956,373.5111349653896)
    ops.remove('sp',353)
if pid == 21:
    ops.load(353, -204.9322286481193,62.20724450773956,373.5111349653896)
    ops.remove('sp',353)
if pid == 21:
    ops.load(354, -216.6897869031761,-5.189123087214185,362.97900863815175)
    ops.remove('sp',354)
if pid == 22:
    ops.load(354, -216.6897869031761,-5.189123087214185,362.97900863815175)
    ops.remove('sp',354)
if pid == 22:
    ops.load(355, -210.6661057127455,5.083378701993169,369.3356329996451)
    ops.remove('sp',355)
if pid == 23:
    ops.load(355, -210.6661057127455,5.083378701993169,369.3356329996451)
    ops.remove('sp',355)
if pid == 23:
    ops.load(356, -222.6862314480165,-19.2251166651114,389.8681351905075)
    ops.remove('sp',356)
if pid == 24:
    ops.load(356, -222.6862314480165,-19.2251166651114,389.8681351905075)
    ops.remove('sp',356)
if pid == 0:
    DOF = [1, 2]
    equalDOF(1, 1, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(1, 3, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(1, 5, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(1, 7, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(1, 13, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(1, 14, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(1, 15, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(1, 16, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(1, 29, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(1, 30, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(1, 31, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(1, 32, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(2, 2, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(2, 4, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(2, 6, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(2, 8, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(2, 21, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(2, 22, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(2, 23, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(2, 24, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(2, 37, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(2, 38, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(2, 39, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(2, 40, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(3, 1, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(3, 3, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(3, 5, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(3, 7, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(3, 13, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(3, 14, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(3, 15, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(3, 16, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(3, 29, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(3, 30, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(3, 31, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(3, 32, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(4, 2, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(4, 4, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(4, 6, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(4, 8, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(4, 21, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(4, 22, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(4, 23, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(4, 24, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(4, 37, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(4, 38, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(4, 39, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(4, 40, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(5, 1, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(5, 3, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(5, 5, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(5, 7, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(5, 13, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(5, 14, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(5, 15, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(5, 16, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(5, 29, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(5, 30, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(5, 31, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(5, 32, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(6, 2, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(6, 4, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(6, 6, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(6, 8, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(6, 21, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(6, 22, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(6, 23, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(6, 24, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(6, 37, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(6, 38, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(6, 39, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(6, 40, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(7, 1, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(7, 3, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(7, 5, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(7, 7, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(7, 13, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(7, 14, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(7, 15, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(7, 16, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(7, 29, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(7, 30, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(7, 31, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(7, 32, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(8, 2, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(8, 4, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(8, 6, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(8, 8, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(8, 21, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(8, 22, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(8, 23, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(8, 24, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(8, 37, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(8, 38, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(8, 39, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(8, 40, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(9, 9, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(9, 9, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(9, 17, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(9, 17, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(9, 25, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(9, 25, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(9, 33, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(9, 33, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(9, 57, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(9, 57, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(9, 58, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(9, 58, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(9, 59, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(9, 59, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(9, 60, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(9, 60, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(9, 85, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(9, 85, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(9, 86, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(9, 86, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(9, 87, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(9, 87, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(9, 88, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(9, 88, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(10, 10, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(10, 10, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(10, 18, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(10, 18, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(10, 26, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(10, 26, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(10, 34, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(10, 34, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(10, 62, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(10, 62, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(10, 63, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(10, 63, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(10, 64, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(10, 64, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(10, 82, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(10, 82, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(10, 83, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(10, 83, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(10, 84, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(10, 84, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(11, 11, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(11, 11, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(11, 19, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(11, 19, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(11, 27, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(11, 27, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(11, 35, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(11, 35, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(11, 65, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(11, 65, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(11, 66, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(11, 66, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(11, 67, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(11, 67, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(11, 68, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(11, 68, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(11, 77, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(11, 77, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(11, 78, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(11, 78, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(11, 79, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(11, 79, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(11, 80, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(11, 80, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(12, 12, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(12, 12, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(12, 20, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(12, 20, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(12, 28, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(12, 28, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(12, 36, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(12, 36, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(12, 70, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(12, 70, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(12, 71, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(12, 71, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(12, 72, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(12, 72, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(12, 74, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(12, 74, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(12, 75, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(12, 75, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(12, 76, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(12, 76, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(13, 1, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(13, 1, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(13, 3, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(13, 3, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(13, 5, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(13, 5, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(13, 7, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(13, 7, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(13, 13, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(13, 13, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(13, 14, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(13, 14, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(13, 15, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(13, 15, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(13, 16, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(13, 16, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(13, 29, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(13, 29, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(13, 30, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(13, 30, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(13, 31, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(13, 31, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(13, 32, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(13, 32, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(14, 1, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(14, 1, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(14, 3, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(14, 3, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(14, 5, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(14, 5, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(14, 7, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(14, 7, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(14, 13, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(14, 13, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(14, 14, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(14, 14, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(14, 15, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(14, 15, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(14, 16, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(14, 16, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(14, 29, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(14, 29, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(14, 30, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(14, 30, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(14, 31, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(14, 31, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(14, 32, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(14, 32, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(15, 1, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(15, 1, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(15, 3, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(15, 3, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(15, 5, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(15, 5, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(15, 7, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(15, 7, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(15, 13, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(15, 13, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(15, 14, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(15, 14, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(15, 15, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(15, 15, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(15, 16, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(15, 16, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(15, 29, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(15, 29, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(15, 30, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(15, 30, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(15, 31, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(15, 31, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(15, 32, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(15, 32, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(16, 1, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(16, 1, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(16, 3, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(16, 3, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(16, 5, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(16, 5, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(16, 7, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(16, 7, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(16, 13, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(16, 13, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(16, 14, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(16, 14, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(16, 15, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(16, 15, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(16, 16, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(16, 16, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(16, 29, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(16, 29, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(16, 30, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(16, 30, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(16, 31, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(16, 31, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(16, 32, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(16, 32, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(17, 9, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(17, 9, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(17, 17, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(17, 17, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(17, 25, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(17, 25, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(17, 33, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(17, 33, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(17, 57, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(17, 57, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(17, 58, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(17, 58, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(17, 59, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(17, 59, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(17, 60, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(17, 60, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(17, 85, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(17, 85, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(17, 86, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(17, 86, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(17, 87, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(17, 87, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(17, 88, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(17, 88, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(18, 10, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(18, 10, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(18, 18, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(18, 18, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(18, 26, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(18, 26, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(18, 34, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(18, 34, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(18, 62, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(18, 62, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(18, 63, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(18, 63, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(18, 64, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(18, 64, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(18, 82, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(18, 82, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(18, 83, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(18, 83, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(18, 84, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(18, 84, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(19, 11, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(19, 11, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(19, 19, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(19, 19, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(19, 27, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(19, 27, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(19, 35, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(19, 35, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(19, 65, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(19, 65, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(19, 66, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(19, 66, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(19, 67, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(19, 67, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(19, 68, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(19, 68, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(19, 77, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(19, 77, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(19, 78, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(19, 78, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(19, 79, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(19, 79, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(19, 80, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(19, 80, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(20, 12, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(20, 12, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(20, 20, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(20, 20, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(20, 28, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(20, 28, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(20, 36, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(20, 36, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(20, 70, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(20, 70, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(20, 71, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(20, 71, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(20, 72, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(20, 72, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(20, 74, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(20, 74, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(20, 75, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(20, 75, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(20, 76, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(20, 76, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(21, 2, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(21, 2, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(21, 4, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(21, 4, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(21, 6, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(21, 6, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(21, 8, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(21, 8, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(21, 21, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(21, 21, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(21, 22, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(21, 22, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(21, 23, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(21, 23, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(21, 24, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(21, 24, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(21, 37, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(21, 37, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(21, 38, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(21, 38, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(21, 39, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(21, 39, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(21, 40, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(21, 40, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(22, 2, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(22, 2, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(22, 4, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(22, 4, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(22, 6, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(22, 6, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(22, 8, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(22, 8, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(22, 21, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(22, 21, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(22, 22, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(22, 22, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(22, 23, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(22, 23, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(22, 24, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(22, 24, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(22, 37, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(22, 37, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(22, 38, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(22, 38, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(22, 39, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(22, 39, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(22, 40, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(22, 40, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(23, 2, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(23, 2, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(23, 4, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(23, 4, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(23, 6, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(23, 6, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(23, 8, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(23, 8, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(23, 21, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(23, 21, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(23, 22, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(23, 22, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(23, 23, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(23, 23, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(23, 24, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(23, 24, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(23, 37, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(23, 37, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(23, 38, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(23, 38, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(23, 39, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(23, 39, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(23, 40, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(23, 40, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(24, 2, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(24, 2, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(24, 4, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(24, 4, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(24, 6, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(24, 6, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(24, 8, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(24, 8, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(24, 21, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(24, 21, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(24, 22, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(24, 22, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(24, 23, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(24, 23, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(24, 24, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(24, 24, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(24, 37, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(24, 37, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(24, 38, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(24, 38, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(24, 39, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(24, 39, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(24, 40, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(24, 40, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(25, 9, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(25, 9, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(25, 17, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(25, 17, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(25, 25, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(25, 25, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(25, 33, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(25, 33, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(25, 57, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(25, 57, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(25, 58, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(25, 58, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(25, 59, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(25, 59, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(25, 60, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(25, 60, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(25, 85, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(25, 85, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(25, 86, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(25, 86, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(25, 87, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(25, 87, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(25, 88, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(25, 88, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(26, 10, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(26, 10, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(26, 18, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(26, 18, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(26, 26, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(26, 26, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(26, 34, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(26, 34, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(26, 62, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(26, 62, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(26, 63, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(26, 63, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(26, 64, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(26, 64, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(26, 82, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(26, 82, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(26, 83, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(26, 83, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(26, 84, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(26, 84, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(27, 11, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(27, 11, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(27, 19, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(27, 19, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(27, 27, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(27, 27, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(27, 35, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(27, 35, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(27, 65, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(27, 65, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(27, 66, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(27, 66, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(27, 67, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(27, 67, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(27, 68, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(27, 68, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(27, 77, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(27, 77, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(27, 78, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(27, 78, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(27, 79, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(27, 79, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(27, 80, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(27, 80, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(28, 12, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(28, 12, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(28, 20, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(28, 20, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(28, 28, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(28, 28, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(28, 36, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(28, 36, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(28, 70, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(28, 70, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(28, 71, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(28, 71, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(28, 72, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(28, 72, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(28, 74, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(28, 74, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(28, 75, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(28, 75, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(28, 76, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(28, 76, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(29, 1, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(29, 1, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(29, 3, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(29, 3, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(29, 5, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(29, 5, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(29, 7, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(29, 7, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(29, 13, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(29, 13, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(29, 14, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(29, 14, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(29, 15, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(29, 15, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(29, 16, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(29, 16, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(29, 29, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(29, 29, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(29, 30, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(29, 30, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(29, 31, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(29, 31, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(29, 32, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(29, 32, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(30, 1, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(30, 1, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(30, 3, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(30, 3, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(30, 5, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(30, 5, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(30, 7, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(30, 7, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(30, 13, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(30, 13, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(30, 14, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(30, 14, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(30, 15, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(30, 15, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(30, 16, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(30, 16, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(30, 29, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(30, 29, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(30, 30, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(30, 30, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(30, 31, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(30, 31, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(30, 32, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(30, 32, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(31, 1, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(31, 1, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(31, 3, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(31, 3, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(31, 5, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(31, 5, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(31, 7, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(31, 7, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(31, 13, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(31, 13, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(31, 14, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(31, 14, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(31, 15, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(31, 15, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(16)[0][0]
    y = gmsh.model.mesh.getNode(16)[0][1]
    z = gmsh.model.mesh.getNode(16)[0][2]
    coord_l=[x,y,z]
    ops.node(16,*coord_l)
    equalDOF(31, 16, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(31, 16, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(31, 29, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(31, 29, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(31, 30, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(31, 30, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(31, 31, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(31, 31, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(32)[0][0]
    y = gmsh.model.mesh.getNode(32)[0][1]
    z = gmsh.model.mesh.getNode(32)[0][2]
    coord_l=[x,y,z]
    ops.node(32,*coord_l)
    equalDOF(31, 32, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(31, 32, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(32, 1, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(1)[0][0]
    y = gmsh.model.mesh.getNode(1)[0][1]
    z = gmsh.model.mesh.getNode(1)[0][2]
    coord_l=[x,y,z]
    ops.node(1,*coord_l)
    equalDOF(32, 1, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(3)[0][0]
    y = gmsh.model.mesh.getNode(3)[0][1]
    z = gmsh.model.mesh.getNode(3)[0][2]
    coord_l=[x,y,z]
    ops.node(3,*coord_l)
    equalDOF(32, 3, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(32, 3, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(32, 5, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(5)[0][0]
    y = gmsh.model.mesh.getNode(5)[0][1]
    z = gmsh.model.mesh.getNode(5)[0][2]
    coord_l=[x,y,z]
    ops.node(5,*coord_l)
    equalDOF(32, 5, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(7)[0][0]
    y = gmsh.model.mesh.getNode(7)[0][1]
    z = gmsh.model.mesh.getNode(7)[0][2]
    coord_l=[x,y,z]
    ops.node(7,*coord_l)
    equalDOF(32, 7, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(32, 7, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(32, 13, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(13)[0][0]
    y = gmsh.model.mesh.getNode(13)[0][1]
    z = gmsh.model.mesh.getNode(13)[0][2]
    coord_l=[x,y,z]
    ops.node(13,*coord_l)
    equalDOF(32, 13, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(32, 14, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(14)[0][0]
    y = gmsh.model.mesh.getNode(14)[0][1]
    z = gmsh.model.mesh.getNode(14)[0][2]
    coord_l=[x,y,z]
    ops.node(14,*coord_l)
    equalDOF(32, 14, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(32, 15, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(15)[0][0]
    y = gmsh.model.mesh.getNode(15)[0][1]
    z = gmsh.model.mesh.getNode(15)[0][2]
    coord_l=[x,y,z]
    ops.node(15,*coord_l)
    equalDOF(32, 15, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(32, 16, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(32, 16, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(32, 29, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(29)[0][0]
    y = gmsh.model.mesh.getNode(29)[0][1]
    z = gmsh.model.mesh.getNode(29)[0][2]
    coord_l=[x,y,z]
    ops.node(29,*coord_l)
    equalDOF(32, 29, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(32, 30, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(30)[0][0]
    y = gmsh.model.mesh.getNode(30)[0][1]
    z = gmsh.model.mesh.getNode(30)[0][2]
    coord_l=[x,y,z]
    ops.node(30,*coord_l)
    equalDOF(32, 30, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(32, 31, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(31)[0][0]
    y = gmsh.model.mesh.getNode(31)[0][1]
    z = gmsh.model.mesh.getNode(31)[0][2]
    coord_l=[x,y,z]
    ops.node(31,*coord_l)
    equalDOF(32, 31, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(32, 32, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(32, 32, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(33, 9, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(33, 9, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(33, 17, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(33, 17, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(33, 25, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(33, 25, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(33, 33, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(33, 33, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(33, 57, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(33, 57, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(33, 58, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(33, 58, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(33, 59, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(33, 59, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(33, 60, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(33, 60, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(33, 85, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(33, 85, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(33, 86, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(33, 86, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(33, 87, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(33, 87, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(33, 88, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(33, 88, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(34, 10, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(34, 10, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(34, 18, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(34, 18, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(34, 26, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(34, 26, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(34, 34, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(34, 34, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(34, 62, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(34, 62, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(34, 63, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(34, 63, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(34, 64, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(34, 64, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(34, 82, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(34, 82, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(34, 83, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(34, 83, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(34, 84, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(34, 84, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(35, 11, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(35, 11, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(35, 19, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(35, 19, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(35, 27, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(35, 27, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(35, 35, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(35, 35, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(35, 65, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(35, 65, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(35, 66, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(35, 66, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(35, 67, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(35, 67, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(35, 68, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(35, 68, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(35, 77, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(35, 77, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(35, 78, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(35, 78, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(35, 79, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(35, 79, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(35, 80, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(35, 80, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(36, 12, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(36, 12, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(36, 20, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(36, 20, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(36, 28, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(36, 28, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(36, 36, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(36, 36, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(36, 70, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(36, 70, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(36, 71, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(36, 71, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(36, 72, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(36, 72, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(36, 74, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(36, 74, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(36, 75, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(36, 75, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(36, 76, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(36, 76, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(37, 2, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(37, 2, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(37, 4, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(37, 4, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(37, 6, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(37, 6, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(37, 8, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(37, 8, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(37, 21, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(37, 21, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(37, 22, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(37, 22, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(37, 23, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(37, 23, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(37, 24, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(37, 24, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(37, 37, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(37, 37, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(37, 38, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(37, 38, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(37, 39, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(37, 39, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(37, 40, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(37, 40, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(38, 2, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(38, 2, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(38, 4, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(38, 4, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(38, 6, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(38, 6, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(38, 8, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(38, 8, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(38, 21, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(38, 21, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(38, 22, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(38, 22, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(38, 23, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(38, 23, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(38, 24, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(38, 24, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(38, 37, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(38, 37, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(38, 38, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(38, 38, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(38, 39, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(38, 39, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(38, 40, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(38, 40, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(39, 2, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(39, 2, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(39, 4, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(39, 4, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(39, 6, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(39, 6, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(39, 8, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(39, 8, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(39, 21, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(39, 21, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(39, 22, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(39, 22, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(39, 23, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(39, 23, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(24)[0][0]
    y = gmsh.model.mesh.getNode(24)[0][1]
    z = gmsh.model.mesh.getNode(24)[0][2]
    coord_l=[x,y,z]
    ops.node(24,*coord_l)
    equalDOF(39, 24, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(39, 24, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(39, 37, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(39, 37, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(39, 38, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(39, 38, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(39, 39, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(39, 39, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(40)[0][0]
    y = gmsh.model.mesh.getNode(40)[0][1]
    z = gmsh.model.mesh.getNode(40)[0][2]
    coord_l=[x,y,z]
    ops.node(40,*coord_l)
    equalDOF(39, 40, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(39, 40, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(40, 2, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(2)[0][0]
    y = gmsh.model.mesh.getNode(2)[0][1]
    z = gmsh.model.mesh.getNode(2)[0][2]
    coord_l=[x,y,z]
    ops.node(2,*coord_l)
    equalDOF(40, 2, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(4)[0][0]
    y = gmsh.model.mesh.getNode(4)[0][1]
    z = gmsh.model.mesh.getNode(4)[0][2]
    coord_l=[x,y,z]
    ops.node(4,*coord_l)
    equalDOF(40, 4, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(40, 4, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(40, 6, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(6)[0][0]
    y = gmsh.model.mesh.getNode(6)[0][1]
    z = gmsh.model.mesh.getNode(6)[0][2]
    coord_l=[x,y,z]
    ops.node(6,*coord_l)
    equalDOF(40, 6, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(8)[0][0]
    y = gmsh.model.mesh.getNode(8)[0][1]
    z = gmsh.model.mesh.getNode(8)[0][2]
    coord_l=[x,y,z]
    ops.node(8,*coord_l)
    equalDOF(40, 8, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(40, 8, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(40, 21, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(21)[0][0]
    y = gmsh.model.mesh.getNode(21)[0][1]
    z = gmsh.model.mesh.getNode(21)[0][2]
    coord_l=[x,y,z]
    ops.node(21,*coord_l)
    equalDOF(40, 21, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(40, 22, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(22)[0][0]
    y = gmsh.model.mesh.getNode(22)[0][1]
    z = gmsh.model.mesh.getNode(22)[0][2]
    coord_l=[x,y,z]
    ops.node(22,*coord_l)
    equalDOF(40, 22, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(40, 23, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(23)[0][0]
    y = gmsh.model.mesh.getNode(23)[0][1]
    z = gmsh.model.mesh.getNode(23)[0][2]
    coord_l=[x,y,z]
    ops.node(23,*coord_l)
    equalDOF(40, 23, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(40, 24, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(40, 24, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(40, 37, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(37)[0][0]
    y = gmsh.model.mesh.getNode(37)[0][1]
    z = gmsh.model.mesh.getNode(37)[0][2]
    coord_l=[x,y,z]
    ops.node(37,*coord_l)
    equalDOF(40, 37, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(40, 38, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(38)[0][0]
    y = gmsh.model.mesh.getNode(38)[0][1]
    z = gmsh.model.mesh.getNode(38)[0][2]
    coord_l=[x,y,z]
    ops.node(38,*coord_l)
    equalDOF(40, 38, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(40, 39, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(39)[0][0]
    y = gmsh.model.mesh.getNode(39)[0][1]
    z = gmsh.model.mesh.getNode(39)[0][2]
    coord_l=[x,y,z]
    ops.node(39,*coord_l)
    equalDOF(40, 39, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(40, 40, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(40, 40, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(57, 9, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(57, 9, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(57, 9, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(57, 9, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(57, 17, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(57, 17, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(57, 17, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(57, 17, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(57, 25, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(57, 25, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(57, 25, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(57, 25, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(57, 33, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(57, 33, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(57, 33, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(57, 33, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(57, 57, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(57, 57, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(57, 57, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(57, 57, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(57, 58, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(57, 58, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(57, 58, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(57, 58, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(57, 59, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(57, 59, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(57, 59, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(57, 59, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(57, 60, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(57, 60, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(57, 60, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(57, 60, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(57, 85, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(57, 85, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(57, 85, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(57, 85, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(57, 86, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(57, 86, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(57, 86, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(57, 86, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(57, 87, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(57, 87, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(57, 87, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(57, 87, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(57, 88, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(57, 88, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(57, 88, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(57, 88, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(58, 9, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(58, 9, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(58, 9, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(58, 9, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(58, 17, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(58, 17, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(58, 17, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(58, 17, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(58, 25, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(58, 25, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(58, 25, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(58, 25, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(58, 33, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(58, 33, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(58, 33, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(58, 33, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(58, 57, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(58, 57, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(58, 57, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(58, 57, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(58, 58, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(58, 58, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(58, 58, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(58, 58, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(58, 59, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(58, 59, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(58, 59, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(58, 59, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(58, 60, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(58, 60, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(58, 60, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(58, 60, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(58, 85, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(58, 85, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(58, 85, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(58, 85, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(58, 86, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(58, 86, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(58, 86, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(58, 86, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(58, 87, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(58, 87, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(58, 87, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(58, 87, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(58, 88, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(58, 88, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(58, 88, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(58, 88, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(59, 9, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(59, 9, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(59, 9, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(59, 9, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(59, 17, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(59, 17, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(59, 17, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(59, 17, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(59, 25, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(59, 25, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(59, 25, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(59, 25, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(59, 33, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(59, 33, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(59, 33, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(59, 33, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(59, 57, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(59, 57, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(59, 57, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(59, 57, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(59, 58, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(59, 58, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(59, 58, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(59, 58, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(59, 59, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(59, 59, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(59, 59, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(59, 59, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(59, 60, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(59, 60, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(59, 60, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(59, 60, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(59, 85, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(59, 85, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(59, 85, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(59, 85, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(59, 86, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(59, 86, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(59, 86, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(59, 86, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(59, 87, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(59, 87, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(59, 87, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(59, 87, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(59, 88, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(59, 88, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(59, 88, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(59, 88, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(60, 9, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(60, 9, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(60, 9, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(60, 9, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(60, 17, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(60, 17, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(60, 17, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(60, 17, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(60, 25, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(60, 25, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(60, 25, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(60, 25, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(60, 33, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(60, 33, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(60, 33, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(60, 33, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(60, 57, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(60, 57, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(60, 57, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(60, 57, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(60, 58, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(60, 58, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(60, 58, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(60, 58, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(60, 59, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(60, 59, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(60, 59, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(60, 59, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(60, 60, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(60, 60, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(60, 60, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(60, 60, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(60, 85, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(60, 85, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(60, 85, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(60, 85, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(60, 86, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(60, 86, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(60, 86, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(60, 86, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(60, 87, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(60, 87, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(60, 87, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(60, 87, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(60, 88, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(60, 88, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(60, 88, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(60, 88, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(61, 61, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(61, 61, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(61, 61, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(61, 61, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(61, 81, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(61, 81, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(61, 81, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(61, 81, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(62, 10, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(62, 10, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(62, 10, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(62, 10, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(62, 18, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(62, 18, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(62, 18, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(62, 18, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(62, 26, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(62, 26, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(62, 26, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(62, 26, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(62, 34, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(62, 34, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(62, 34, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(62, 34, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(62, 62, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(62, 62, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(62, 62, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(62, 62, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(62, 63, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(62, 63, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(62, 63, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(62, 63, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(62, 64, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(62, 64, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(62, 64, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(62, 64, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(62, 82, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(62, 82, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(62, 82, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(62, 82, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(62, 83, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(62, 83, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(62, 83, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(62, 83, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(62, 84, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(62, 84, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(62, 84, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(62, 84, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(63, 10, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(63, 10, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(63, 10, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(63, 10, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(63, 18, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(63, 18, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(63, 18, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(63, 18, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(63, 26, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(63, 26, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(63, 26, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(63, 26, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(63, 34, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(63, 34, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(63, 34, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(63, 34, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(63, 62, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(63, 62, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(63, 62, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(63, 62, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(63, 63, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(63, 63, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(63, 63, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(63, 63, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(63, 64, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(63, 64, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(63, 64, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(63, 64, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(63, 82, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(63, 82, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(63, 82, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(63, 82, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(63, 83, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(63, 83, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(63, 83, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(63, 83, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(63, 84, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(63, 84, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(63, 84, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(63, 84, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(64, 10, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(64, 10, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(64, 10, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(64, 10, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(64, 18, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(64, 18, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(64, 18, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(64, 18, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(64, 26, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(64, 26, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(64, 26, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(64, 26, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(64, 34, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(64, 34, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(64, 34, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(64, 34, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(64, 62, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(64, 62, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(64, 62, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(64, 62, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(64, 63, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(64, 63, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(64, 63, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(64, 63, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(64, 64, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(64, 64, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(64, 64, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(64, 64, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(64, 82, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(64, 82, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(64, 82, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(64, 82, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(64, 83, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(64, 83, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(64, 83, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(64, 83, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(64, 84, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(64, 84, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(64, 84, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(64, 84, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(65, 11, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(65, 11, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(65, 11, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(65, 11, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(65, 19, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(65, 19, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(65, 19, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(65, 19, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(65, 27, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(65, 27, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(65, 27, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(65, 27, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(65, 35, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(65, 35, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(65, 35, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(65, 35, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(65, 65, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(65, 65, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(65, 65, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(65, 65, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(65, 66, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(65, 66, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(65, 66, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(65, 66, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(65, 67, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(65, 67, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(65, 67, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(65, 67, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(65, 68, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(65, 68, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(65, 68, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(65, 68, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(65, 77, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(65, 77, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(65, 77, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(65, 77, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(65, 78, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(65, 78, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(65, 78, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(65, 78, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(65, 79, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(65, 79, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(65, 79, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(65, 79, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(65, 80, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(65, 80, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(65, 80, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(65, 80, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(66, 11, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(66, 11, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(66, 11, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(66, 11, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(66, 19, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(66, 19, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(66, 19, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(66, 19, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(66, 27, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(66, 27, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(66, 27, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(66, 27, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(66, 35, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(66, 35, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(66, 35, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(66, 35, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(66, 65, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(66, 65, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(66, 65, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(66, 65, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(66, 66, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(66, 66, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(66, 66, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(66, 66, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(66, 67, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(66, 67, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(66, 67, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(66, 67, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(66, 68, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(66, 68, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(66, 68, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(66, 68, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(66, 77, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(66, 77, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(66, 77, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(66, 77, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(66, 78, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(66, 78, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(66, 78, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(66, 78, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(66, 79, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(66, 79, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(66, 79, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(66, 79, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(66, 80, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(66, 80, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(66, 80, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(66, 80, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(67, 11, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(67, 11, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(67, 11, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(67, 11, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(67, 19, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(67, 19, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(67, 19, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(67, 19, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(67, 27, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(67, 27, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(67, 27, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(67, 27, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(67, 35, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(67, 35, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(67, 35, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(67, 35, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(67, 65, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(67, 65, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(67, 65, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(67, 65, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(67, 66, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(67, 66, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(67, 66, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(67, 66, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(67, 67, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(67, 67, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(67, 67, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(67, 67, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(67, 68, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(67, 68, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(67, 68, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(67, 68, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(67, 77, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(67, 77, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(67, 77, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(67, 77, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(67, 78, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(67, 78, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(67, 78, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(67, 78, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(67, 79, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(67, 79, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(67, 79, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(67, 79, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(67, 80, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(67, 80, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(67, 80, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(67, 80, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(68, 11, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(68, 11, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(68, 11, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(68, 11, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(68, 19, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(68, 19, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(68, 19, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(68, 19, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(68, 27, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(68, 27, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(68, 27, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(68, 27, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(68, 35, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(68, 35, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(68, 35, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(68, 35, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(68, 65, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(68, 65, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(68, 65, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(68, 65, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(68, 66, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(68, 66, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(68, 66, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(68, 66, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(68, 67, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(68, 67, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(68, 67, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(68, 67, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(68, 68, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(68, 68, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(68, 68, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(68, 68, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(68, 77, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(68, 77, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(68, 77, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(68, 77, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(68, 78, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(68, 78, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(68, 78, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(68, 78, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(68, 79, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(68, 79, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(68, 79, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(68, 79, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(68, 80, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(68, 80, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(68, 80, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(68, 80, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(69, 69, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(69, 69, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(69, 69, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(69, 69, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(69, 73, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(69, 73, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(69, 73, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(69, 73, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(70, 12, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(70, 12, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(70, 12, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(70, 12, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(70, 20, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(70, 20, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(70, 20, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(70, 20, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(70, 28, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(70, 28, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(70, 28, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(70, 28, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(70, 36, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(70, 36, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(70, 36, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(70, 36, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(70, 70, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(70, 70, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(70, 70, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(70, 70, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(70, 71, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(70, 71, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(70, 71, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(70, 71, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(70, 72, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(70, 72, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(70, 72, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(70, 72, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(70, 74, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(70, 74, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(70, 74, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(70, 74, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(70, 75, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(70, 75, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(70, 75, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(70, 75, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(70, 76, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(70, 76, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(70, 76, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(70, 76, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(71, 12, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(71, 12, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(71, 12, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(71, 12, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(71, 20, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(71, 20, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(71, 20, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(71, 20, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(71, 28, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(71, 28, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(71, 28, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(71, 28, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(71, 36, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(71, 36, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(71, 36, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(71, 36, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(71, 70, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(71, 70, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(71, 70, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(71, 70, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(71, 71, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(71, 71, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(71, 71, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(71, 71, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(71, 72, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(71, 72, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(71, 72, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(71, 72, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(71, 74, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(71, 74, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(71, 74, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(71, 74, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(71, 75, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(71, 75, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(71, 75, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(71, 75, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(71, 76, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(71, 76, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(71, 76, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(71, 76, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(72, 12, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(72, 12, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(72, 12, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(72, 12, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(72, 20, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(72, 20, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(72, 20, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(72, 20, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(72, 28, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(72, 28, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(72, 28, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(72, 28, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(72, 36, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(72, 36, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(72, 36, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(72, 36, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(72, 70, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(72, 70, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(72, 70, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(72, 70, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(72, 71, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(72, 71, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(72, 71, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(72, 71, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(72, 72, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(72, 72, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(72, 72, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(72, 72, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(72, 74, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(72, 74, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(72, 74, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(72, 74, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(72, 75, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(72, 75, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(72, 75, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(72, 75, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(72, 76, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(72, 76, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(72, 76, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(72, 76, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(73, 69, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(73, 69, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(73, 69, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(73, 69, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(73, 73, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(73, 73, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(73, 73, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(73, 73, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(74, 12, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(74, 12, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(74, 12, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(74, 12, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(74, 20, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(74, 20, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(74, 20, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(74, 20, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(74, 28, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(74, 28, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(74, 28, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(74, 28, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(74, 36, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(74, 36, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(74, 36, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(74, 36, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(74, 70, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(74, 70, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(74, 70, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(74, 70, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(74, 71, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(74, 71, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(74, 71, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(74, 71, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(74, 72, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(74, 72, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(74, 72, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(74, 72, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(74, 74, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(74, 74, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(74, 74, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(74, 74, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(74, 75, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(74, 75, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(74, 75, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(74, 75, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(74, 76, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(74, 76, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(74, 76, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(74, 76, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(75, 12, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(75, 12, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(75, 12, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(75, 12, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(75, 20, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(75, 20, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(75, 20, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(75, 20, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(75, 28, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(75, 28, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(75, 28, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(75, 28, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(75, 36, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(75, 36, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(75, 36, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(75, 36, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(75, 70, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(75, 70, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(75, 70, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(75, 70, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(75, 71, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(75, 71, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(75, 71, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(75, 71, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(75, 72, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(75, 72, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(72)[0][0]
    y = gmsh.model.mesh.getNode(72)[0][1]
    z = gmsh.model.mesh.getNode(72)[0][2]
    coord_l=[x,y,z]
    ops.node(72,*coord_l)
    equalDOF(75, 72, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(75, 72, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(75, 74, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(75, 74, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(75, 74, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(75, 74, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(75, 75, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(75, 75, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(75, 75, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(75, 75, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(75, 76, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(75, 76, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(76)[0][0]
    y = gmsh.model.mesh.getNode(76)[0][1]
    z = gmsh.model.mesh.getNode(76)[0][2]
    coord_l=[x,y,z]
    ops.node(76,*coord_l)
    equalDOF(75, 76, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(75, 76, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(76, 12, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(76, 12, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(76, 12, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(12)[0][0]
    y = gmsh.model.mesh.getNode(12)[0][1]
    z = gmsh.model.mesh.getNode(12)[0][2]
    coord_l=[x,y,z]
    ops.node(12,*coord_l)
    equalDOF(76, 12, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(76, 20, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(76, 20, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(20)[0][0]
    y = gmsh.model.mesh.getNode(20)[0][1]
    z = gmsh.model.mesh.getNode(20)[0][2]
    coord_l=[x,y,z]
    ops.node(20,*coord_l)
    equalDOF(76, 20, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(76, 20, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(76, 28, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(76, 28, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(76, 28, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(28)[0][0]
    y = gmsh.model.mesh.getNode(28)[0][1]
    z = gmsh.model.mesh.getNode(28)[0][2]
    coord_l=[x,y,z]
    ops.node(28,*coord_l)
    equalDOF(76, 28, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(76, 36, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(76, 36, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(36)[0][0]
    y = gmsh.model.mesh.getNode(36)[0][1]
    z = gmsh.model.mesh.getNode(36)[0][2]
    coord_l=[x,y,z]
    ops.node(36,*coord_l)
    equalDOF(76, 36, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(76, 36, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(76, 70, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(76, 70, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(76, 70, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(70)[0][0]
    y = gmsh.model.mesh.getNode(70)[0][1]
    z = gmsh.model.mesh.getNode(70)[0][2]
    coord_l=[x,y,z]
    ops.node(70,*coord_l)
    equalDOF(76, 70, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(76, 71, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(76, 71, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(76, 71, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(71)[0][0]
    y = gmsh.model.mesh.getNode(71)[0][1]
    z = gmsh.model.mesh.getNode(71)[0][2]
    coord_l=[x,y,z]
    ops.node(71,*coord_l)
    equalDOF(76, 71, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(76, 72, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(76, 72, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(76, 72, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(76, 72, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(76, 74, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(76, 74, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(76, 74, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(74)[0][0]
    y = gmsh.model.mesh.getNode(74)[0][1]
    z = gmsh.model.mesh.getNode(74)[0][2]
    coord_l=[x,y,z]
    ops.node(74,*coord_l)
    equalDOF(76, 74, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(76, 75, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(76, 75, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(76, 75, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(75)[0][0]
    y = gmsh.model.mesh.getNode(75)[0][1]
    z = gmsh.model.mesh.getNode(75)[0][2]
    coord_l=[x,y,z]
    ops.node(75,*coord_l)
    equalDOF(76, 75, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(76, 76, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(76, 76, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(76, 76, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(76, 76, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(77, 11, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(77, 11, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(77, 11, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(77, 11, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(77, 19, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(77, 19, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(77, 19, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(77, 19, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(77, 27, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(77, 27, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(77, 27, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(77, 27, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(77, 35, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(77, 35, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(77, 35, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(77, 35, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(77, 65, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(77, 65, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(77, 65, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(77, 65, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(77, 66, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(77, 66, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(77, 66, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(77, 66, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(77, 67, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(77, 67, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(77, 67, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(77, 67, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(77, 68, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(77, 68, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(77, 68, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(77, 68, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(77, 77, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(77, 77, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(77, 77, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(77, 77, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(77, 78, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(77, 78, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(77, 78, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(77, 78, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(77, 79, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(77, 79, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(77, 79, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(77, 79, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(77, 80, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(77, 80, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(77, 80, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(77, 80, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(78, 11, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(78, 11, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(78, 11, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(78, 11, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(78, 19, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(78, 19, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(78, 19, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(78, 19, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(78, 27, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(78, 27, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(78, 27, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(78, 27, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(78, 35, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(78, 35, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(78, 35, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(78, 35, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(78, 65, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(78, 65, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(78, 65, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(78, 65, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(78, 66, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(78, 66, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(78, 66, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(78, 66, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(78, 67, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(78, 67, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(78, 67, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(78, 67, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(78, 68, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(78, 68, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(78, 68, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(78, 68, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(78, 77, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(78, 77, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(78, 77, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(78, 77, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(78, 78, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(78, 78, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(78, 78, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(78, 78, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(78, 79, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(78, 79, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(78, 79, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(78, 79, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(78, 80, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(78, 80, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(78, 80, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(78, 80, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(79, 11, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(79, 11, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(79, 11, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(79, 11, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(79, 19, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(79, 19, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(79, 19, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(79, 19, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(79, 27, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(79, 27, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(79, 27, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(79, 27, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(79, 35, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(79, 35, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(79, 35, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(79, 35, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(79, 65, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(79, 65, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(79, 65, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(79, 65, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(79, 66, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(79, 66, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(79, 66, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(79, 66, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(79, 67, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(79, 67, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(79, 67, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(79, 67, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(79, 68, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(79, 68, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(68)[0][0]
    y = gmsh.model.mesh.getNode(68)[0][1]
    z = gmsh.model.mesh.getNode(68)[0][2]
    coord_l=[x,y,z]
    ops.node(68,*coord_l)
    equalDOF(79, 68, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(79, 68, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(79, 77, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(79, 77, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(79, 77, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(79, 77, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(79, 78, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(79, 78, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(79, 78, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(79, 78, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(79, 79, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(79, 79, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(79, 79, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(79, 79, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(79, 80, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(79, 80, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(80)[0][0]
    y = gmsh.model.mesh.getNode(80)[0][1]
    z = gmsh.model.mesh.getNode(80)[0][2]
    coord_l=[x,y,z]
    ops.node(80,*coord_l)
    equalDOF(79, 80, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(79, 80, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(80, 11, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(80, 11, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(80, 11, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(11)[0][0]
    y = gmsh.model.mesh.getNode(11)[0][1]
    z = gmsh.model.mesh.getNode(11)[0][2]
    coord_l=[x,y,z]
    ops.node(11,*coord_l)
    equalDOF(80, 11, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(80, 19, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(80, 19, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(19)[0][0]
    y = gmsh.model.mesh.getNode(19)[0][1]
    z = gmsh.model.mesh.getNode(19)[0][2]
    coord_l=[x,y,z]
    ops.node(19,*coord_l)
    equalDOF(80, 19, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(80, 19, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(80, 27, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(80, 27, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(80, 27, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(27)[0][0]
    y = gmsh.model.mesh.getNode(27)[0][1]
    z = gmsh.model.mesh.getNode(27)[0][2]
    coord_l=[x,y,z]
    ops.node(27,*coord_l)
    equalDOF(80, 27, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(80, 35, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(80, 35, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(35)[0][0]
    y = gmsh.model.mesh.getNode(35)[0][1]
    z = gmsh.model.mesh.getNode(35)[0][2]
    coord_l=[x,y,z]
    ops.node(35,*coord_l)
    equalDOF(80, 35, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(80, 35, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(80, 65, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(80, 65, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(80, 65, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(65)[0][0]
    y = gmsh.model.mesh.getNode(65)[0][1]
    z = gmsh.model.mesh.getNode(65)[0][2]
    coord_l=[x,y,z]
    ops.node(65,*coord_l)
    equalDOF(80, 65, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(80, 66, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(80, 66, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(80, 66, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(66)[0][0]
    y = gmsh.model.mesh.getNode(66)[0][1]
    z = gmsh.model.mesh.getNode(66)[0][2]
    coord_l=[x,y,z]
    ops.node(66,*coord_l)
    equalDOF(80, 66, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(80, 67, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(80, 67, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(80, 67, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(67)[0][0]
    y = gmsh.model.mesh.getNode(67)[0][1]
    z = gmsh.model.mesh.getNode(67)[0][2]
    coord_l=[x,y,z]
    ops.node(67,*coord_l)
    equalDOF(80, 67, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(80, 68, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(80, 68, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(80, 68, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(80, 68, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(80, 77, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(80, 77, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(80, 77, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(77)[0][0]
    y = gmsh.model.mesh.getNode(77)[0][1]
    z = gmsh.model.mesh.getNode(77)[0][2]
    coord_l=[x,y,z]
    ops.node(77,*coord_l)
    equalDOF(80, 77, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(80, 78, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(80, 78, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(80, 78, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(78)[0][0]
    y = gmsh.model.mesh.getNode(78)[0][1]
    z = gmsh.model.mesh.getNode(78)[0][2]
    coord_l=[x,y,z]
    ops.node(78,*coord_l)
    equalDOF(80, 78, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(80, 79, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(80, 79, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(80, 79, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(79)[0][0]
    y = gmsh.model.mesh.getNode(79)[0][1]
    z = gmsh.model.mesh.getNode(79)[0][2]
    coord_l=[x,y,z]
    ops.node(79,*coord_l)
    equalDOF(80, 79, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(80, 80, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(80, 80, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(80, 80, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(80, 80, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(81, 61, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(81, 61, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(81, 61, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(81, 61, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(81, 81, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(81, 81, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(81, 81, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(81, 81, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(82, 10, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(82, 10, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(82, 10, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(82, 10, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(82, 18, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(82, 18, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(82, 18, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(82, 18, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(82, 26, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(82, 26, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(82, 26, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(82, 26, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(82, 34, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(82, 34, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(82, 34, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(82, 34, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(82, 62, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(82, 62, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(82, 62, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(82, 62, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(82, 63, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(82, 63, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(82, 63, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(82, 63, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(82, 64, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(82, 64, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(82, 64, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(82, 64, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(82, 82, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(82, 82, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(82, 82, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(82, 82, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(82, 83, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(82, 83, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(82, 83, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(82, 83, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(82, 84, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(82, 84, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(82, 84, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(82, 84, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(83, 10, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(83, 10, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(83, 10, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(83, 10, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(83, 18, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(83, 18, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(83, 18, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(83, 18, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(83, 26, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(83, 26, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(83, 26, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(83, 26, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(83, 34, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(83, 34, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(83, 34, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(83, 34, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(83, 62, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(83, 62, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(83, 62, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(83, 62, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(83, 63, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(83, 63, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(83, 63, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(83, 63, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(83, 64, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(83, 64, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(64)[0][0]
    y = gmsh.model.mesh.getNode(64)[0][1]
    z = gmsh.model.mesh.getNode(64)[0][2]
    coord_l=[x,y,z]
    ops.node(64,*coord_l)
    equalDOF(83, 64, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(83, 64, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(83, 82, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(83, 82, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(83, 82, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(83, 82, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(83, 83, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(83, 83, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(83, 83, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(83, 83, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(83, 84, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(83, 84, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(84)[0][0]
    y = gmsh.model.mesh.getNode(84)[0][1]
    z = gmsh.model.mesh.getNode(84)[0][2]
    coord_l=[x,y,z]
    ops.node(84,*coord_l)
    equalDOF(83, 84, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(83, 84, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(84, 10, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(84, 10, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(84, 10, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(10)[0][0]
    y = gmsh.model.mesh.getNode(10)[0][1]
    z = gmsh.model.mesh.getNode(10)[0][2]
    coord_l=[x,y,z]
    ops.node(10,*coord_l)
    equalDOF(84, 10, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(84, 18, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(84, 18, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(18)[0][0]
    y = gmsh.model.mesh.getNode(18)[0][1]
    z = gmsh.model.mesh.getNode(18)[0][2]
    coord_l=[x,y,z]
    ops.node(18,*coord_l)
    equalDOF(84, 18, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(84, 18, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(84, 26, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(84, 26, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(84, 26, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(26)[0][0]
    y = gmsh.model.mesh.getNode(26)[0][1]
    z = gmsh.model.mesh.getNode(26)[0][2]
    coord_l=[x,y,z]
    ops.node(26,*coord_l)
    equalDOF(84, 26, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(84, 34, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(84, 34, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(34)[0][0]
    y = gmsh.model.mesh.getNode(34)[0][1]
    z = gmsh.model.mesh.getNode(34)[0][2]
    coord_l=[x,y,z]
    ops.node(34,*coord_l)
    equalDOF(84, 34, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(84, 34, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(84, 62, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(84, 62, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(84, 62, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(62)[0][0]
    y = gmsh.model.mesh.getNode(62)[0][1]
    z = gmsh.model.mesh.getNode(62)[0][2]
    coord_l=[x,y,z]
    ops.node(62,*coord_l)
    equalDOF(84, 62, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(84, 63, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(84, 63, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(84, 63, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(63)[0][0]
    y = gmsh.model.mesh.getNode(63)[0][1]
    z = gmsh.model.mesh.getNode(63)[0][2]
    coord_l=[x,y,z]
    ops.node(63,*coord_l)
    equalDOF(84, 63, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(84, 64, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(84, 64, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(84, 64, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(84, 64, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(84, 82, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(84, 82, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(84, 82, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(82)[0][0]
    y = gmsh.model.mesh.getNode(82)[0][1]
    z = gmsh.model.mesh.getNode(82)[0][2]
    coord_l=[x,y,z]
    ops.node(82,*coord_l)
    equalDOF(84, 82, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(84, 83, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(84, 83, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(84, 83, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(83)[0][0]
    y = gmsh.model.mesh.getNode(83)[0][1]
    z = gmsh.model.mesh.getNode(83)[0][2]
    coord_l=[x,y,z]
    ops.node(83,*coord_l)
    equalDOF(84, 83, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(84, 84, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(84, 84, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(84, 84, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(84, 84, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(85, 9, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(85, 9, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(85, 9, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(85, 9, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(85, 17, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(85, 17, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(85, 17, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(85, 17, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(85, 25, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(85, 25, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(85, 25, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(85, 25, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(85, 33, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(85, 33, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(85, 33, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(85, 33, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(85, 57, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(85, 57, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(85, 57, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(85, 57, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(85, 58, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(85, 58, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(85, 58, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(85, 58, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(85, 59, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(85, 59, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(85, 59, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(85, 59, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(85, 60, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(85, 60, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(85, 60, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(85, 60, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(85, 85, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(85, 85, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(85, 85, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(85, 85, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(85, 86, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(85, 86, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(85, 86, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(85, 86, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(85, 87, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(85, 87, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(85, 87, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(85, 87, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(85, 88, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(85, 88, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(85, 88, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(85, 88, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(86, 9, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(86, 9, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(86, 9, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(86, 9, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(86, 17, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(86, 17, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(86, 17, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(86, 17, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(86, 25, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(86, 25, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(86, 25, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(86, 25, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(86, 33, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(86, 33, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(86, 33, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(86, 33, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(86, 57, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(86, 57, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(86, 57, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(86, 57, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(86, 58, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(86, 58, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(86, 58, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(86, 58, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(86, 59, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(86, 59, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(86, 59, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(86, 59, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(86, 60, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(86, 60, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(86, 60, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(86, 60, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(86, 85, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(86, 85, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(86, 85, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(86, 85, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(86, 86, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(86, 86, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(86, 86, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(86, 86, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(86, 87, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(86, 87, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(86, 87, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(86, 87, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(86, 88, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(86, 88, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(86, 88, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(86, 88, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(87, 9, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(87, 9, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(87, 9, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(87, 9, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(87, 17, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(87, 17, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(87, 17, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(87, 17, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(87, 25, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(87, 25, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(87, 25, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(87, 25, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(87, 33, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(87, 33, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(87, 33, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(87, 33, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(87, 57, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(87, 57, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(87, 57, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(87, 57, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(87, 58, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(87, 58, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(87, 58, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(87, 58, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(87, 59, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(87, 59, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(87, 59, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(87, 59, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(87, 60, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(87, 60, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(60)[0][0]
    y = gmsh.model.mesh.getNode(60)[0][1]
    z = gmsh.model.mesh.getNode(60)[0][2]
    coord_l=[x,y,z]
    ops.node(60,*coord_l)
    equalDOF(87, 60, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(87, 60, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(87, 85, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(87, 85, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(87, 85, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(87, 85, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(87, 86, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(87, 86, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(87, 86, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(87, 86, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(87, 87, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(87, 87, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(87, 87, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(87, 87, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(87, 88, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(87, 88, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(88)[0][0]
    y = gmsh.model.mesh.getNode(88)[0][1]
    z = gmsh.model.mesh.getNode(88)[0][2]
    coord_l=[x,y,z]
    ops.node(88,*coord_l)
    equalDOF(87, 88, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(87, 88, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(88, 9, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(88, 9, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(88, 9, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(9)[0][0]
    y = gmsh.model.mesh.getNode(9)[0][1]
    z = gmsh.model.mesh.getNode(9)[0][2]
    coord_l=[x,y,z]
    ops.node(9,*coord_l)
    equalDOF(88, 9, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(88, 17, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(88, 17, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(17)[0][0]
    y = gmsh.model.mesh.getNode(17)[0][1]
    z = gmsh.model.mesh.getNode(17)[0][2]
    coord_l=[x,y,z]
    ops.node(17,*coord_l)
    equalDOF(88, 17, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(88, 17, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(88, 25, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(88, 25, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(88, 25, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(25)[0][0]
    y = gmsh.model.mesh.getNode(25)[0][1]
    z = gmsh.model.mesh.getNode(25)[0][2]
    coord_l=[x,y,z]
    ops.node(25,*coord_l)
    equalDOF(88, 25, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(88, 33, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(88, 33, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(33)[0][0]
    y = gmsh.model.mesh.getNode(33)[0][1]
    z = gmsh.model.mesh.getNode(33)[0][2]
    coord_l=[x,y,z]
    ops.node(33,*coord_l)
    equalDOF(88, 33, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(88, 33, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(88, 57, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(88, 57, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(88, 57, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(57)[0][0]
    y = gmsh.model.mesh.getNode(57)[0][1]
    z = gmsh.model.mesh.getNode(57)[0][2]
    coord_l=[x,y,z]
    ops.node(57,*coord_l)
    equalDOF(88, 57, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(88, 58, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(88, 58, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(88, 58, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(58)[0][0]
    y = gmsh.model.mesh.getNode(58)[0][1]
    z = gmsh.model.mesh.getNode(58)[0][2]
    coord_l=[x,y,z]
    ops.node(58,*coord_l)
    equalDOF(88, 58, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(88, 59, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(88, 59, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(88, 59, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(59)[0][0]
    y = gmsh.model.mesh.getNode(59)[0][1]
    z = gmsh.model.mesh.getNode(59)[0][2]
    coord_l=[x,y,z]
    ops.node(59,*coord_l)
    equalDOF(88, 59, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(88, 60, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(88, 60, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(88, 60, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(88, 60, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(88, 85, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(88, 85, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(88, 85, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(85)[0][0]
    y = gmsh.model.mesh.getNode(85)[0][1]
    z = gmsh.model.mesh.getNode(85)[0][2]
    coord_l=[x,y,z]
    ops.node(85,*coord_l)
    equalDOF(88, 85, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(88, 86, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(88, 86, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(88, 86, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(86)[0][0]
    y = gmsh.model.mesh.getNode(86)[0][1]
    z = gmsh.model.mesh.getNode(86)[0][2]
    coord_l=[x,y,z]
    ops.node(86,*coord_l)
    equalDOF(88, 86, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(88, 87, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(88, 87, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(88, 87, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(87)[0][0]
    y = gmsh.model.mesh.getNode(87)[0][1]
    z = gmsh.model.mesh.getNode(87)[0][2]
    coord_l=[x,y,z]
    ops.node(87,*coord_l)
    equalDOF(88, 87, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(88, 88, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(88, 88, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(88, 88, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(88, 88, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(217, 217, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(217, 227, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(217, 237, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(217, 247, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(217, 280, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(217, 282, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(217, 284, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(217, 353, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(217, 354, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(217, 355, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(217, 356, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(218, 218, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(218, 228, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(218, 238, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(218, 248, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(218, 289, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(218, 291, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(218, 293, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(218, 345, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(218, 347, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(218, 349, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(218, 351, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(219, 219, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(219, 229, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(219, 239, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(219, 249, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(219, 296, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(219, 298, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(219, 300, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(219, 302, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(219, 336, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(219, 338, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(219, 340, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(219, 342, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(220, 220, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(220, 230, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(220, 240, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(220, 250, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(220, 307, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(220, 309, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(220, 311, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(220, 329, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(220, 331, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(220, 333, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(221, 221, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(221, 231, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(221, 241, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(221, 251, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(221, 313, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(221, 314, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(221, 315, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(221, 316, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(221, 318, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(221, 320, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(221, 322, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(221, 324, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(222, 222, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(222, 223, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(222, 224, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(222, 225, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(222, 226, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(222, 242, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(222, 243, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(222, 244, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(222, 245, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(222, 246, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(223, 222, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(223, 223, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(223, 224, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(223, 225, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(223, 226, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(223, 242, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(223, 243, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(223, 244, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(223, 245, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(223, 246, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(224, 222, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(224, 223, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(224, 224, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(224, 225, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(224, 226, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(224, 242, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(224, 243, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(224, 244, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(224, 245, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(224, 246, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(225, 222, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(225, 223, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(225, 224, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(225, 225, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(225, 226, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(225, 242, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(225, 243, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(225, 244, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(225, 245, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(225, 246, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(226, 222, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(226, 223, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(226, 224, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(226, 225, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(226, 226, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(226, 242, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(226, 243, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(226, 244, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(226, 245, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(226, 246, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(227, 217, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(227, 227, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(227, 237, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(227, 247, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(227, 280, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(227, 282, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(227, 284, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(227, 353, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(227, 354, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(227, 355, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(227, 356, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(228, 218, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(228, 228, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(228, 238, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(228, 248, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(228, 289, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(228, 291, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(228, 293, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(228, 345, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(228, 347, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(228, 349, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(228, 351, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(229, 219, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(229, 229, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(229, 239, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(229, 249, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(229, 296, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(229, 298, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(229, 300, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(229, 302, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(229, 336, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(229, 338, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(229, 340, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(229, 342, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(230, 220, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(230, 230, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(230, 240, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(230, 250, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(230, 307, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(230, 309, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(230, 311, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(230, 329, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(230, 331, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(230, 333, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(231, 221, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(231, 231, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(231, 241, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(231, 251, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(231, 313, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(231, 314, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(231, 315, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(231, 316, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(231, 318, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(231, 320, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(231, 322, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(231, 324, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(232, 232, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(232, 233, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(232, 234, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(232, 235, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(232, 236, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(232, 252, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(232, 253, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(232, 254, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(232, 255, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(232, 256, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(233, 232, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(233, 233, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(233, 234, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(233, 235, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(233, 236, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(233, 252, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(233, 253, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(233, 254, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(233, 255, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(233, 256, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(234, 232, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(234, 233, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(234, 234, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(234, 235, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(234, 236, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(234, 252, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(234, 253, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(234, 254, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(234, 255, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(234, 256, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(235, 232, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(235, 233, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(235, 234, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(235, 235, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(235, 236, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(235, 252, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(235, 253, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(235, 254, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(235, 255, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(235, 256, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(236, 232, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(236, 233, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(236, 234, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(236, 235, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(236, 236, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(236, 252, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(236, 253, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(236, 254, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(236, 255, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(236, 256, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(237, 217, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(237, 227, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(237, 237, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(237, 247, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(237, 280, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(237, 282, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(237, 284, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(237, 353, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(237, 354, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(237, 355, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(237, 356, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(238, 218, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(238, 228, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(238, 238, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(238, 248, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(238, 289, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(238, 291, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(238, 293, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(238, 345, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(238, 347, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(238, 349, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(238, 351, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(239, 219, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(239, 229, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(239, 239, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(239, 249, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(239, 296, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(239, 298, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(239, 300, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(239, 302, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(239, 336, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(239, 338, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(239, 340, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(239, 342, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(240, 220, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(240, 230, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(240, 240, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(240, 250, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(240, 307, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(240, 309, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(240, 311, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(240, 329, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(240, 331, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(240, 333, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(241, 221, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(241, 231, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(241, 241, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(241, 251, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(241, 313, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(241, 314, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(241, 315, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(241, 316, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(241, 318, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(241, 320, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(241, 322, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(241, 324, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(242, 222, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(242, 223, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(242, 224, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(242, 225, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(242, 226, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(242, 242, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(242, 243, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(242, 244, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(242, 245, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(242, 246, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(243, 222, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(243, 223, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(243, 224, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(243, 225, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(243, 226, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(243, 242, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(243, 243, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(243, 244, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(243, 245, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(243, 246, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(244, 222, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(244, 223, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(244, 224, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(244, 225, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(244, 226, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(244, 242, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(244, 243, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(244, 244, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(244, 245, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(244, 246, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(245, 222, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(245, 223, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(245, 224, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(245, 225, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(226)[0][0]
    y = gmsh.model.mesh.getNode(226)[0][1]
    z = gmsh.model.mesh.getNode(226)[0][2]
    coord_l=[x,y,z]
    ops.node(226,*coord_l)
    equalDOF(245, 226, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(245, 242, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(245, 243, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(245, 244, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(245, 245, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(246)[0][0]
    y = gmsh.model.mesh.getNode(246)[0][1]
    z = gmsh.model.mesh.getNode(246)[0][2]
    coord_l=[x,y,z]
    ops.node(246,*coord_l)
    equalDOF(245, 246, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(222)[0][0]
    y = gmsh.model.mesh.getNode(222)[0][1]
    z = gmsh.model.mesh.getNode(222)[0][2]
    coord_l=[x,y,z]
    ops.node(222,*coord_l)
    equalDOF(246, 222, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(223)[0][0]
    y = gmsh.model.mesh.getNode(223)[0][1]
    z = gmsh.model.mesh.getNode(223)[0][2]
    coord_l=[x,y,z]
    ops.node(223,*coord_l)
    equalDOF(246, 223, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(224)[0][0]
    y = gmsh.model.mesh.getNode(224)[0][1]
    z = gmsh.model.mesh.getNode(224)[0][2]
    coord_l=[x,y,z]
    ops.node(224,*coord_l)
    equalDOF(246, 224, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(225)[0][0]
    y = gmsh.model.mesh.getNode(225)[0][1]
    z = gmsh.model.mesh.getNode(225)[0][2]
    coord_l=[x,y,z]
    ops.node(225,*coord_l)
    equalDOF(246, 225, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(246, 226, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(242)[0][0]
    y = gmsh.model.mesh.getNode(242)[0][1]
    z = gmsh.model.mesh.getNode(242)[0][2]
    coord_l=[x,y,z]
    ops.node(242,*coord_l)
    equalDOF(246, 242, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(243)[0][0]
    y = gmsh.model.mesh.getNode(243)[0][1]
    z = gmsh.model.mesh.getNode(243)[0][2]
    coord_l=[x,y,z]
    ops.node(243,*coord_l)
    equalDOF(246, 243, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(244)[0][0]
    y = gmsh.model.mesh.getNode(244)[0][1]
    z = gmsh.model.mesh.getNode(244)[0][2]
    coord_l=[x,y,z]
    ops.node(244,*coord_l)
    equalDOF(246, 244, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(245)[0][0]
    y = gmsh.model.mesh.getNode(245)[0][1]
    z = gmsh.model.mesh.getNode(245)[0][2]
    coord_l=[x,y,z]
    ops.node(245,*coord_l)
    equalDOF(246, 245, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(246, 246, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(247, 217, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(247, 227, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(247, 237, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(247, 247, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(247, 280, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(247, 282, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(247, 284, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(247, 353, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(247, 354, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(247, 355, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(247, 356, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(248, 218, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(248, 228, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(248, 238, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(248, 248, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(248, 289, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(248, 291, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(248, 293, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(248, 345, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(248, 347, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(248, 349, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(248, 351, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(249, 219, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(249, 229, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(249, 239, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(249, 249, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(249, 296, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(249, 298, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(249, 300, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(249, 302, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(249, 336, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(249, 338, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(249, 340, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(249, 342, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(250, 220, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(250, 230, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(250, 240, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(250, 250, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(250, 307, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(250, 309, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(250, 311, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(250, 329, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(250, 331, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(250, 333, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(251, 221, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(251, 231, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(251, 241, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(251, 251, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(251, 313, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(251, 314, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(251, 315, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(251, 316, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(251, 318, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(251, 320, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(251, 322, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(251, 324, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(252, 232, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(252, 233, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(252, 234, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(252, 235, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(252, 236, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(252, 252, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(252, 253, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(252, 254, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(252, 255, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(252, 256, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(253, 232, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(253, 233, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(253, 234, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(253, 235, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(253, 236, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(253, 252, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(253, 253, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(253, 254, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(253, 255, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(253, 256, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(254, 232, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(254, 233, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(254, 234, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(254, 235, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(254, 236, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(254, 252, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(254, 253, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(254, 254, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(254, 255, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(254, 256, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(255, 232, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(255, 233, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(255, 234, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(255, 235, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(236)[0][0]
    y = gmsh.model.mesh.getNode(236)[0][1]
    z = gmsh.model.mesh.getNode(236)[0][2]
    coord_l=[x,y,z]
    ops.node(236,*coord_l)
    equalDOF(255, 236, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(255, 252, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(255, 253, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(255, 254, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(255, 255, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(256)[0][0]
    y = gmsh.model.mesh.getNode(256)[0][1]
    z = gmsh.model.mesh.getNode(256)[0][2]
    coord_l=[x,y,z]
    ops.node(256,*coord_l)
    equalDOF(255, 256, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(232)[0][0]
    y = gmsh.model.mesh.getNode(232)[0][1]
    z = gmsh.model.mesh.getNode(232)[0][2]
    coord_l=[x,y,z]
    ops.node(232,*coord_l)
    equalDOF(256, 232, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(233)[0][0]
    y = gmsh.model.mesh.getNode(233)[0][1]
    z = gmsh.model.mesh.getNode(233)[0][2]
    coord_l=[x,y,z]
    ops.node(233,*coord_l)
    equalDOF(256, 233, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(234)[0][0]
    y = gmsh.model.mesh.getNode(234)[0][1]
    z = gmsh.model.mesh.getNode(234)[0][2]
    coord_l=[x,y,z]
    ops.node(234,*coord_l)
    equalDOF(256, 234, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(235)[0][0]
    y = gmsh.model.mesh.getNode(235)[0][1]
    z = gmsh.model.mesh.getNode(235)[0][2]
    coord_l=[x,y,z]
    ops.node(235,*coord_l)
    equalDOF(256, 235, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(256, 236, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(252)[0][0]
    y = gmsh.model.mesh.getNode(252)[0][1]
    z = gmsh.model.mesh.getNode(252)[0][2]
    coord_l=[x,y,z]
    ops.node(252,*coord_l)
    equalDOF(256, 252, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(253)[0][0]
    y = gmsh.model.mesh.getNode(253)[0][1]
    z = gmsh.model.mesh.getNode(253)[0][2]
    coord_l=[x,y,z]
    ops.node(253,*coord_l)
    equalDOF(256, 253, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(254)[0][0]
    y = gmsh.model.mesh.getNode(254)[0][1]
    z = gmsh.model.mesh.getNode(254)[0][2]
    coord_l=[x,y,z]
    ops.node(254,*coord_l)
    equalDOF(256, 254, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(255)[0][0]
    y = gmsh.model.mesh.getNode(255)[0][1]
    z = gmsh.model.mesh.getNode(255)[0][2]
    coord_l=[x,y,z]
    ops.node(255,*coord_l)
    equalDOF(256, 255, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(256, 256, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(277, 277, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(277, 277, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(277, 279, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(277, 279, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(277, 281, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(277, 281, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(277, 283, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(277, 283, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(277, 285, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(277, 285, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(277, 344, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(277, 344, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(277, 346, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(277, 346, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(277, 348, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(277, 348, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(277, 350, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(277, 350, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(277, 352, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(277, 352, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(278, 278, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(278, 278, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(279, 277, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(279, 277, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(279, 279, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(279, 279, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(279, 281, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(279, 281, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(279, 283, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(279, 283, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(279, 285, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(279, 285, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(279, 344, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(279, 344, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(279, 346, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(279, 346, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(279, 348, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(279, 348, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(279, 350, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(279, 350, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(279, 352, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(279, 352, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(280, 217, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(280, 217, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(280, 227, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(280, 227, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(280, 237, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(280, 237, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(280, 247, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(280, 247, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(280, 280, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(280, 280, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(280, 282, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(280, 282, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(280, 284, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(280, 284, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(280, 353, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(280, 353, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(280, 354, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(280, 354, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(280, 355, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(280, 355, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(280, 356, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(280, 356, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(281, 277, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(281, 277, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(281, 279, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(281, 279, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(281, 281, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(281, 281, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(281, 283, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(281, 283, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(281, 285, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(281, 285, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(281, 344, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(281, 344, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(281, 346, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(281, 346, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(281, 348, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(281, 348, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(281, 350, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(281, 350, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(281, 352, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(281, 352, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(282, 217, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(282, 217, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(282, 227, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(282, 227, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(282, 237, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(282, 237, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(282, 247, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(282, 247, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(282, 280, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(282, 280, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(282, 282, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(282, 282, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(282, 284, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(282, 284, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(282, 353, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(282, 353, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(282, 354, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(282, 354, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(282, 355, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(282, 355, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(282, 356, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(282, 356, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(283, 277, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(283, 277, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(283, 279, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(283, 279, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(283, 281, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(283, 281, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(283, 283, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(283, 283, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(283, 285, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(283, 285, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(283, 344, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(283, 344, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(283, 346, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(283, 346, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(283, 348, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(283, 348, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(283, 350, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(283, 350, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(283, 352, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(283, 352, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(284, 217, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(284, 217, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(284, 227, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(284, 227, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(284, 237, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(284, 237, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(284, 247, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(284, 247, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(284, 280, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(284, 280, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(284, 282, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(284, 282, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(284, 284, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(284, 284, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(284, 353, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(284, 353, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(284, 354, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(284, 354, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(284, 355, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(284, 355, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(284, 356, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(284, 356, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(285, 277, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(285, 277, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(285, 279, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(285, 279, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(285, 281, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(285, 281, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(285, 283, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(285, 283, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(285, 285, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(285, 285, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(285, 344, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(285, 344, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(285, 346, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(285, 346, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(285, 348, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(285, 348, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(285, 350, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(285, 350, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(285, 352, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(285, 352, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(286, 286, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(286, 286, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(286, 288, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(286, 288, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(286, 290, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(286, 290, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(286, 292, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(286, 292, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(286, 294, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(286, 294, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(286, 335, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(286, 335, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(286, 337, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(286, 337, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(286, 339, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(286, 339, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(286, 341, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(286, 341, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(286, 343, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(286, 343, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(287, 287, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(287, 287, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(288, 286, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(288, 286, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(288, 288, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(288, 288, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(288, 290, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(288, 290, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(288, 292, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(288, 292, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(288, 294, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(288, 294, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(288, 335, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(288, 335, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(288, 337, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(288, 337, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(288, 339, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(288, 339, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(288, 341, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(288, 341, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(288, 343, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(288, 343, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(289, 218, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(289, 218, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(289, 228, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(289, 228, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(289, 238, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(289, 238, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(289, 248, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(289, 248, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(289, 289, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(289, 289, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(289, 291, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(289, 291, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(289, 293, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(289, 293, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(289, 345, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(289, 345, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(289, 347, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(289, 347, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(289, 349, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(289, 349, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(289, 351, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(289, 351, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(290, 286, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(290, 286, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(290, 288, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(290, 288, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(290, 290, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(290, 290, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(290, 292, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(290, 292, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(290, 294, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(290, 294, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(290, 335, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(290, 335, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(290, 337, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(290, 337, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(290, 339, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(290, 339, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(290, 341, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(290, 341, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(290, 343, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(290, 343, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(291, 218, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(291, 218, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(291, 228, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(291, 228, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(291, 238, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(291, 238, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(291, 248, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(291, 248, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(291, 289, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(291, 289, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(291, 291, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(291, 291, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(291, 293, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(291, 293, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(291, 345, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(291, 345, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(291, 347, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(291, 347, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(291, 349, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(291, 349, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(291, 351, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(291, 351, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(292, 286, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(292, 286, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(292, 288, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(292, 288, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(292, 290, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(292, 290, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(292, 292, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(292, 292, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(292, 294, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(292, 294, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(292, 335, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(292, 335, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(292, 337, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(292, 337, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(292, 339, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(292, 339, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(292, 341, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(292, 341, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(292, 343, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(292, 343, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(293, 218, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(293, 218, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(293, 228, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(293, 228, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(293, 238, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(293, 238, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(293, 248, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(293, 248, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(293, 289, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(293, 289, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(293, 291, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(293, 291, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(293, 293, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(293, 293, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(293, 345, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(293, 345, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(293, 347, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(293, 347, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(293, 349, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(293, 349, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(293, 351, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(293, 351, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(294, 286, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(294, 286, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(294, 288, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(294, 288, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(294, 290, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(294, 290, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(294, 292, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(294, 292, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(294, 294, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(294, 294, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(294, 335, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(294, 335, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(294, 337, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(294, 337, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(294, 339, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(294, 339, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(294, 341, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(294, 341, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(294, 343, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(294, 343, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(295, 295, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(295, 295, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(295, 297, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(295, 297, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(295, 299, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(295, 299, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(295, 301, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(295, 301, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(295, 303, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(295, 303, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(295, 326, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(295, 326, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(295, 328, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(295, 328, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(295, 330, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(295, 330, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(295, 332, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(295, 332, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(295, 334, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(295, 334, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(296, 219, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(296, 219, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(296, 229, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(296, 229, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(296, 239, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(296, 239, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(296, 249, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(296, 249, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(296, 296, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(296, 296, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(296, 298, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(296, 298, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(296, 300, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(296, 300, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(296, 302, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(296, 302, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(296, 336, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(296, 336, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(296, 338, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(296, 338, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(296, 340, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(296, 340, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(296, 342, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(296, 342, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(297, 295, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(297, 295, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(297, 297, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(297, 297, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(297, 299, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(297, 299, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(297, 301, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(297, 301, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(297, 303, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(297, 303, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(297, 326, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(297, 326, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(297, 328, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(297, 328, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(297, 330, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(297, 330, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(297, 332, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(297, 332, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(297, 334, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(297, 334, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(298, 219, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(298, 219, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(298, 229, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(298, 229, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(298, 239, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(298, 239, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(298, 249, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(298, 249, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(298, 296, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(298, 296, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(298, 298, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(298, 298, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(298, 300, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(298, 300, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(298, 302, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(298, 302, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(298, 336, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(298, 336, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(298, 338, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(298, 338, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(298, 340, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(298, 340, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(298, 342, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(298, 342, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(299, 295, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(299, 295, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(299, 297, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(299, 297, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(299, 299, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(299, 299, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(299, 301, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(299, 301, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(299, 303, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(299, 303, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(299, 326, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(299, 326, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(299, 328, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(299, 328, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(299, 330, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(299, 330, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(299, 332, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(299, 332, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(299, 334, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(299, 334, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(300, 219, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(300, 219, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(300, 229, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(300, 229, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(300, 239, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(300, 239, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(300, 249, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(300, 249, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(300, 296, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(300, 296, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(300, 298, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(300, 298, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(300, 300, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(300, 300, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(300, 302, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(300, 302, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(300, 336, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(300, 336, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(300, 338, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(300, 338, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(300, 340, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(300, 340, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(300, 342, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(300, 342, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(301, 295, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(301, 295, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(301, 297, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(301, 297, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(301, 299, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(301, 299, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(301, 301, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(301, 301, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(301, 303, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(301, 303, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(301, 326, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(301, 326, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(301, 328, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(301, 328, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(301, 330, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(301, 330, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(301, 332, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(301, 332, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(301, 334, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(301, 334, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(302, 219, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(302, 219, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(302, 229, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(302, 229, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(302, 239, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(302, 239, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(302, 249, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(302, 249, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(302, 296, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(302, 296, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(302, 298, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(302, 298, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(302, 300, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(302, 300, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(302, 302, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(302, 302, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(302, 336, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(302, 336, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(302, 338, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(302, 338, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(302, 340, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(302, 340, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(302, 342, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(302, 342, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(303, 295, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(303, 295, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(303, 297, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(303, 297, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(303, 299, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(303, 299, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(303, 301, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(303, 301, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(303, 303, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(303, 303, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(303, 326, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(303, 326, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(303, 328, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(303, 328, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(303, 330, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(303, 330, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(303, 332, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(303, 332, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(303, 334, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(303, 334, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(304, 304, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(304, 304, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(306)[0][0]
    y = gmsh.model.mesh.getNode(306)[0][1]
    z = gmsh.model.mesh.getNode(306)[0][2]
    coord_l=[x,y,z]
    ops.node(306,*coord_l)
    equalDOF(304, 306, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(306)[0][0]
    y = gmsh.model.mesh.getNode(306)[0][1]
    z = gmsh.model.mesh.getNode(306)[0][2]
    coord_l=[x,y,z]
    ops.node(306,*coord_l)
    equalDOF(304, 306, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(304, 317, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(304, 317, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(319)[0][0]
    y = gmsh.model.mesh.getNode(319)[0][1]
    z = gmsh.model.mesh.getNode(319)[0][2]
    coord_l=[x,y,z]
    ops.node(319,*coord_l)
    equalDOF(304, 319, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(319)[0][0]
    y = gmsh.model.mesh.getNode(319)[0][1]
    z = gmsh.model.mesh.getNode(319)[0][2]
    coord_l=[x,y,z]
    ops.node(319,*coord_l)
    equalDOF(304, 319, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(305, 305, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(305, 305, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(305, 327, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(305, 327, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(304)[0][0]
    y = gmsh.model.mesh.getNode(304)[0][1]
    z = gmsh.model.mesh.getNode(304)[0][2]
    coord_l=[x,y,z]
    ops.node(304,*coord_l)
    equalDOF(306, 304, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(304)[0][0]
    y = gmsh.model.mesh.getNode(304)[0][1]
    z = gmsh.model.mesh.getNode(304)[0][2]
    coord_l=[x,y,z]
    ops.node(304,*coord_l)
    equalDOF(306, 304, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(306, 306, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(306, 306, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(317)[0][0]
    y = gmsh.model.mesh.getNode(317)[0][1]
    z = gmsh.model.mesh.getNode(317)[0][2]
    coord_l=[x,y,z]
    ops.node(317,*coord_l)
    equalDOF(306, 317, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(317)[0][0]
    y = gmsh.model.mesh.getNode(317)[0][1]
    z = gmsh.model.mesh.getNode(317)[0][2]
    coord_l=[x,y,z]
    ops.node(317,*coord_l)
    equalDOF(306, 317, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(306, 319, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(306, 319, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(307, 220, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(307, 220, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(307, 230, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(307, 230, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(307, 240, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(307, 240, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(307, 250, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(307, 250, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(307, 307, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(307, 307, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(307, 309, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(307, 309, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(307, 311, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(307, 311, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(307, 329, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(307, 329, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(307, 331, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(307, 331, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(307, 333, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(307, 333, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(308, 308, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(308, 308, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(308, 310, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(308, 310, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(308, 312, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(308, 312, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(308, 321, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(308, 321, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(308, 323, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(308, 323, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(308, 325, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(308, 325, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(309, 220, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(309, 220, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(309, 230, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(309, 230, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(309, 240, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(309, 240, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(309, 250, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(309, 250, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(309, 307, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(309, 307, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(309, 309, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(309, 309, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(309, 311, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(309, 311, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(309, 329, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(309, 329, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(309, 331, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(309, 331, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(309, 333, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(309, 333, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(310, 308, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(310, 308, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(310, 310, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(310, 310, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(310, 312, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(310, 312, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(310, 321, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(310, 321, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(310, 323, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(310, 323, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(310, 325, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(310, 325, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(311, 220, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(311, 220, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(311, 230, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(311, 230, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(311, 240, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(311, 240, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(311, 250, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(311, 250, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(311, 307, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(311, 307, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(311, 309, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(311, 309, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(311, 311, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(311, 311, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(311, 329, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(311, 329, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(311, 331, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(311, 331, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(311, 333, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(311, 333, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(312, 308, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(312, 308, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(312, 310, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(312, 310, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(312, 312, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(312, 312, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(312, 321, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(312, 321, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(312, 323, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(312, 323, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(312, 325, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(312, 325, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(313, 221, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(313, 221, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(313, 231, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(313, 231, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(313, 241, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(313, 241, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(313, 251, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(313, 251, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(313, 313, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(313, 313, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(313, 314, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(313, 314, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(313, 315, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(313, 315, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(313, 316, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(313, 316, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(313, 318, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(313, 318, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(313, 320, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(313, 320, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(313, 322, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(313, 322, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(313, 324, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(313, 324, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(314, 221, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(314, 221, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(314, 231, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(314, 231, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(314, 241, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(314, 241, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(314, 251, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(314, 251, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(314, 313, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(314, 313, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(314, 314, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(314, 314, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(314, 315, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(314, 315, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(314, 316, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(314, 316, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(314, 318, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(314, 318, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(314, 320, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(314, 320, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(314, 322, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(314, 322, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(314, 324, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(314, 324, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(315, 221, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(315, 221, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(315, 231, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(315, 231, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(315, 241, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(315, 241, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(315, 251, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(315, 251, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(315, 313, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(315, 313, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(315, 314, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(315, 314, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(315, 315, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(315, 315, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(315, 316, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(315, 316, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(315, 318, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(315, 318, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(315, 320, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(315, 320, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(315, 322, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(315, 322, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(315, 324, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(315, 324, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(316, 221, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(316, 221, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(316, 231, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(316, 231, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(316, 241, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(316, 241, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(316, 251, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(316, 251, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(316, 313, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(316, 313, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(316, 314, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(316, 314, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(316, 315, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(316, 315, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(316, 316, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(316, 316, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(316, 318, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(316, 318, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(316, 320, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(316, 320, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(316, 322, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(316, 322, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(316, 324, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(316, 324, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(317, 304, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(317, 304, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(306)[0][0]
    y = gmsh.model.mesh.getNode(306)[0][1]
    z = gmsh.model.mesh.getNode(306)[0][2]
    coord_l=[x,y,z]
    ops.node(306,*coord_l)
    equalDOF(317, 306, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(306)[0][0]
    y = gmsh.model.mesh.getNode(306)[0][1]
    z = gmsh.model.mesh.getNode(306)[0][2]
    coord_l=[x,y,z]
    ops.node(306,*coord_l)
    equalDOF(317, 306, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(317, 317, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(317, 317, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(319)[0][0]
    y = gmsh.model.mesh.getNode(319)[0][1]
    z = gmsh.model.mesh.getNode(319)[0][2]
    coord_l=[x,y,z]
    ops.node(319,*coord_l)
    equalDOF(317, 319, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(319)[0][0]
    y = gmsh.model.mesh.getNode(319)[0][1]
    z = gmsh.model.mesh.getNode(319)[0][2]
    coord_l=[x,y,z]
    ops.node(319,*coord_l)
    equalDOF(317, 319, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(318, 221, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(318, 221, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(318, 231, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(318, 231, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(318, 241, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(318, 241, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(318, 251, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(318, 251, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(318, 313, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(318, 313, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(318, 314, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(318, 314, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(318, 315, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(318, 315, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(318, 316, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(318, 316, *DOF)
if pid == 0:
    DOF = [1, 2]
    equalDOF(318, 318, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(318, 318, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(318, 320, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(318, 320, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(318, 322, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(318, 322, *DOF)
if pid == 0:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(318, 324, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(318, 324, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(304)[0][0]
    y = gmsh.model.mesh.getNode(304)[0][1]
    z = gmsh.model.mesh.getNode(304)[0][2]
    coord_l=[x,y,z]
    ops.node(304,*coord_l)
    equalDOF(319, 304, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(304)[0][0]
    y = gmsh.model.mesh.getNode(304)[0][1]
    z = gmsh.model.mesh.getNode(304)[0][2]
    coord_l=[x,y,z]
    ops.node(304,*coord_l)
    equalDOF(319, 304, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(319, 306, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(319, 306, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(317)[0][0]
    y = gmsh.model.mesh.getNode(317)[0][1]
    z = gmsh.model.mesh.getNode(317)[0][2]
    coord_l=[x,y,z]
    ops.node(317,*coord_l)
    equalDOF(319, 317, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(317)[0][0]
    y = gmsh.model.mesh.getNode(317)[0][1]
    z = gmsh.model.mesh.getNode(317)[0][2]
    coord_l=[x,y,z]
    ops.node(317,*coord_l)
    equalDOF(319, 317, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(319, 319, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(319, 319, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(320, 221, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(320, 221, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(320, 231, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(320, 231, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(320, 241, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(320, 241, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(320, 251, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(320, 251, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(320, 313, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(320, 313, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(320, 314, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(320, 314, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(320, 315, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(320, 315, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(320, 316, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(320, 316, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(320, 318, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(320, 318, *DOF)
if pid == 1:
    DOF = [1, 2]
    equalDOF(320, 320, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(320, 320, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(320, 322, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(320, 322, *DOF)
if pid == 1:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(320, 324, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(320, 324, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(321, 308, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(321, 308, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(321, 310, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(321, 310, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(321, 312, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(321, 312, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(321, 321, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(321, 321, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(321, 323, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(321, 323, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(321, 325, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(321, 325, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(322, 221, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(322, 221, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(322, 231, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(322, 231, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(322, 241, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(322, 241, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(322, 251, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(322, 251, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(322, 313, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(322, 313, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(322, 314, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(322, 314, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(322, 315, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(322, 315, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(316)[0][0]
    y = gmsh.model.mesh.getNode(316)[0][1]
    z = gmsh.model.mesh.getNode(316)[0][2]
    coord_l=[x,y,z]
    ops.node(316,*coord_l)
    equalDOF(322, 316, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(322, 316, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(322, 318, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(322, 318, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(322, 320, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(322, 320, *DOF)
if pid == 2:
    DOF = [1, 2]
    equalDOF(322, 322, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(322, 322, *DOF)
if pid == 2:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(324)[0][0]
    y = gmsh.model.mesh.getNode(324)[0][1]
    z = gmsh.model.mesh.getNode(324)[0][2]
    coord_l=[x,y,z]
    ops.node(324,*coord_l)
    equalDOF(322, 324, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(322, 324, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(323, 308, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(323, 308, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(323, 310, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(323, 310, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(323, 312, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(312)[0][0]
    y = gmsh.model.mesh.getNode(312)[0][1]
    z = gmsh.model.mesh.getNode(312)[0][2]
    coord_l=[x,y,z]
    ops.node(312,*coord_l)
    equalDOF(323, 312, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(323, 321, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(323, 321, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(323, 323, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(323, 323, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(323, 325, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(325)[0][0]
    y = gmsh.model.mesh.getNode(325)[0][1]
    z = gmsh.model.mesh.getNode(325)[0][2]
    coord_l=[x,y,z]
    ops.node(325,*coord_l)
    equalDOF(323, 325, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(324, 221, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(221)[0][0]
    y = gmsh.model.mesh.getNode(221)[0][1]
    z = gmsh.model.mesh.getNode(221)[0][2]
    coord_l=[x,y,z]
    ops.node(221,*coord_l)
    equalDOF(324, 221, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(231)[0][0]
    y = gmsh.model.mesh.getNode(231)[0][1]
    z = gmsh.model.mesh.getNode(231)[0][2]
    coord_l=[x,y,z]
    ops.node(231,*coord_l)
    equalDOF(324, 231, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(324, 231, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(324, 241, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(241)[0][0]
    y = gmsh.model.mesh.getNode(241)[0][1]
    z = gmsh.model.mesh.getNode(241)[0][2]
    coord_l=[x,y,z]
    ops.node(241,*coord_l)
    equalDOF(324, 241, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(251)[0][0]
    y = gmsh.model.mesh.getNode(251)[0][1]
    z = gmsh.model.mesh.getNode(251)[0][2]
    coord_l=[x,y,z]
    ops.node(251,*coord_l)
    equalDOF(324, 251, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(324, 251, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(324, 313, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(313)[0][0]
    y = gmsh.model.mesh.getNode(313)[0][1]
    z = gmsh.model.mesh.getNode(313)[0][2]
    coord_l=[x,y,z]
    ops.node(313,*coord_l)
    equalDOF(324, 313, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(324, 314, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(314)[0][0]
    y = gmsh.model.mesh.getNode(314)[0][1]
    z = gmsh.model.mesh.getNode(314)[0][2]
    coord_l=[x,y,z]
    ops.node(314,*coord_l)
    equalDOF(324, 314, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(324, 315, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(315)[0][0]
    y = gmsh.model.mesh.getNode(315)[0][1]
    z = gmsh.model.mesh.getNode(315)[0][2]
    coord_l=[x,y,z]
    ops.node(315,*coord_l)
    equalDOF(324, 315, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(324, 316, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(324, 316, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(324, 318, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(318)[0][0]
    y = gmsh.model.mesh.getNode(318)[0][1]
    z = gmsh.model.mesh.getNode(318)[0][2]
    coord_l=[x,y,z]
    ops.node(318,*coord_l)
    equalDOF(324, 318, *DOF)
if pid == 3:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(324, 320, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(320)[0][0]
    y = gmsh.model.mesh.getNode(320)[0][1]
    z = gmsh.model.mesh.getNode(320)[0][2]
    coord_l=[x,y,z]
    ops.node(320,*coord_l)
    equalDOF(324, 320, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(324, 322, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(322)[0][0]
    y = gmsh.model.mesh.getNode(322)[0][1]
    z = gmsh.model.mesh.getNode(322)[0][2]
    coord_l=[x,y,z]
    ops.node(322,*coord_l)
    equalDOF(324, 322, *DOF)
if pid == 3:
    DOF = [1, 2]
    equalDOF(324, 324, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(324, 324, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(325, 308, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(308)[0][0]
    y = gmsh.model.mesh.getNode(308)[0][1]
    z = gmsh.model.mesh.getNode(308)[0][2]
    coord_l=[x,y,z]
    ops.node(308,*coord_l)
    equalDOF(325, 308, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(325, 310, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(310)[0][0]
    y = gmsh.model.mesh.getNode(310)[0][1]
    z = gmsh.model.mesh.getNode(310)[0][2]
    coord_l=[x,y,z]
    ops.node(310,*coord_l)
    equalDOF(325, 310, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(325, 312, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(325, 312, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(325, 321, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(321)[0][0]
    y = gmsh.model.mesh.getNode(321)[0][1]
    z = gmsh.model.mesh.getNode(321)[0][2]
    coord_l=[x,y,z]
    ops.node(321,*coord_l)
    equalDOF(325, 321, *DOF)
if pid == 4:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(325, 323, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(323)[0][0]
    y = gmsh.model.mesh.getNode(323)[0][1]
    z = gmsh.model.mesh.getNode(323)[0][2]
    coord_l=[x,y,z]
    ops.node(323,*coord_l)
    equalDOF(325, 323, *DOF)
if pid == 4:
    DOF = [1, 2]
    equalDOF(325, 325, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(325, 325, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(326, 295, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(326, 295, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(326, 297, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(326, 297, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(326, 299, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(326, 299, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(326, 301, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(326, 301, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(326, 303, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(326, 303, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(326, 326, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(326, 326, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(326, 328, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(326, 328, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(326, 330, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(326, 330, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(326, 332, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(326, 332, *DOF)
if pid == 5:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(326, 334, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(326, 334, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(327, 305, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(327, 305, *DOF)
if pid == 5:
    DOF = [1, 2]
    equalDOF(327, 327, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(327, 327, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(328, 295, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(328, 295, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(328, 297, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(328, 297, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(328, 299, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(328, 299, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(328, 301, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(328, 301, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(328, 303, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(328, 303, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(328, 326, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(328, 326, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(328, 328, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(328, 328, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(328, 330, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(328, 330, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(328, 332, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(328, 332, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(328, 334, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(328, 334, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(329, 220, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(329, 220, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(329, 230, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(329, 230, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(329, 240, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(329, 240, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(329, 250, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(329, 250, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(329, 307, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(329, 307, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(329, 309, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(329, 309, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(329, 311, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(329, 311, *DOF)
if pid == 6:
    DOF = [1, 2]
    equalDOF(329, 329, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(329, 329, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(329, 331, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(329, 331, *DOF)
if pid == 6:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(329, 333, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(329, 333, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(330, 295, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(330, 295, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(330, 297, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(330, 297, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(330, 299, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(330, 299, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(330, 301, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(330, 301, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(330, 303, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(330, 303, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(330, 326, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(330, 326, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(330, 328, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(330, 328, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(330, 330, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(330, 330, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(330, 332, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(330, 332, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(330, 334, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(330, 334, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(331, 220, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(331, 220, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(331, 230, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(331, 230, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(331, 240, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(331, 240, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(331, 250, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(331, 250, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(331, 307, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(331, 307, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(331, 309, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(331, 309, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(311)[0][0]
    y = gmsh.model.mesh.getNode(311)[0][1]
    z = gmsh.model.mesh.getNode(311)[0][2]
    coord_l=[x,y,z]
    ops.node(311,*coord_l)
    equalDOF(331, 311, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(331, 311, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(331, 329, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(331, 329, *DOF)
if pid == 7:
    DOF = [1, 2]
    equalDOF(331, 331, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(331, 331, *DOF)
if pid == 7:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(333)[0][0]
    y = gmsh.model.mesh.getNode(333)[0][1]
    z = gmsh.model.mesh.getNode(333)[0][2]
    coord_l=[x,y,z]
    ops.node(333,*coord_l)
    equalDOF(331, 333, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(331, 333, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(332, 295, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(332, 295, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(332, 297, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(332, 297, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(332, 299, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(332, 299, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(332, 301, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(332, 301, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(332, 303, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(303)[0][0]
    y = gmsh.model.mesh.getNode(303)[0][1]
    z = gmsh.model.mesh.getNode(303)[0][2]
    coord_l=[x,y,z]
    ops.node(303,*coord_l)
    equalDOF(332, 303, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(332, 326, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(332, 326, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(332, 328, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(332, 328, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(332, 330, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(332, 330, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(332, 332, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(332, 332, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(332, 334, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(334)[0][0]
    y = gmsh.model.mesh.getNode(334)[0][1]
    z = gmsh.model.mesh.getNode(334)[0][2]
    coord_l=[x,y,z]
    ops.node(334,*coord_l)
    equalDOF(332, 334, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(333, 220, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(220)[0][0]
    y = gmsh.model.mesh.getNode(220)[0][1]
    z = gmsh.model.mesh.getNode(220)[0][2]
    coord_l=[x,y,z]
    ops.node(220,*coord_l)
    equalDOF(333, 220, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(230)[0][0]
    y = gmsh.model.mesh.getNode(230)[0][1]
    z = gmsh.model.mesh.getNode(230)[0][2]
    coord_l=[x,y,z]
    ops.node(230,*coord_l)
    equalDOF(333, 230, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(333, 230, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(333, 240, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(240)[0][0]
    y = gmsh.model.mesh.getNode(240)[0][1]
    z = gmsh.model.mesh.getNode(240)[0][2]
    coord_l=[x,y,z]
    ops.node(240,*coord_l)
    equalDOF(333, 240, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(250)[0][0]
    y = gmsh.model.mesh.getNode(250)[0][1]
    z = gmsh.model.mesh.getNode(250)[0][2]
    coord_l=[x,y,z]
    ops.node(250,*coord_l)
    equalDOF(333, 250, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(333, 250, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(333, 307, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(307)[0][0]
    y = gmsh.model.mesh.getNode(307)[0][1]
    z = gmsh.model.mesh.getNode(307)[0][2]
    coord_l=[x,y,z]
    ops.node(307,*coord_l)
    equalDOF(333, 307, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(333, 309, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(309)[0][0]
    y = gmsh.model.mesh.getNode(309)[0][1]
    z = gmsh.model.mesh.getNode(309)[0][2]
    coord_l=[x,y,z]
    ops.node(309,*coord_l)
    equalDOF(333, 309, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(333, 311, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(333, 311, *DOF)
if pid == 8:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(333, 329, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(329)[0][0]
    y = gmsh.model.mesh.getNode(329)[0][1]
    z = gmsh.model.mesh.getNode(329)[0][2]
    coord_l=[x,y,z]
    ops.node(329,*coord_l)
    equalDOF(333, 329, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(333, 331, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(331)[0][0]
    y = gmsh.model.mesh.getNode(331)[0][1]
    z = gmsh.model.mesh.getNode(331)[0][2]
    coord_l=[x,y,z]
    ops.node(331,*coord_l)
    equalDOF(333, 331, *DOF)
if pid == 8:
    DOF = [1, 2]
    equalDOF(333, 333, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(333, 333, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(334, 295, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(295)[0][0]
    y = gmsh.model.mesh.getNode(295)[0][1]
    z = gmsh.model.mesh.getNode(295)[0][2]
    coord_l=[x,y,z]
    ops.node(295,*coord_l)
    equalDOF(334, 295, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(334, 297, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(297)[0][0]
    y = gmsh.model.mesh.getNode(297)[0][1]
    z = gmsh.model.mesh.getNode(297)[0][2]
    coord_l=[x,y,z]
    ops.node(297,*coord_l)
    equalDOF(334, 297, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(334, 299, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(299)[0][0]
    y = gmsh.model.mesh.getNode(299)[0][1]
    z = gmsh.model.mesh.getNode(299)[0][2]
    coord_l=[x,y,z]
    ops.node(299,*coord_l)
    equalDOF(334, 299, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(334, 301, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(301)[0][0]
    y = gmsh.model.mesh.getNode(301)[0][1]
    z = gmsh.model.mesh.getNode(301)[0][2]
    coord_l=[x,y,z]
    ops.node(301,*coord_l)
    equalDOF(334, 301, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(334, 303, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(334, 303, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(334, 326, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(326)[0][0]
    y = gmsh.model.mesh.getNode(326)[0][1]
    z = gmsh.model.mesh.getNode(326)[0][2]
    coord_l=[x,y,z]
    ops.node(326,*coord_l)
    equalDOF(334, 326, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(334, 328, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(328)[0][0]
    y = gmsh.model.mesh.getNode(328)[0][1]
    z = gmsh.model.mesh.getNode(328)[0][2]
    coord_l=[x,y,z]
    ops.node(328,*coord_l)
    equalDOF(334, 328, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(334, 330, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(330)[0][0]
    y = gmsh.model.mesh.getNode(330)[0][1]
    z = gmsh.model.mesh.getNode(330)[0][2]
    coord_l=[x,y,z]
    ops.node(330,*coord_l)
    equalDOF(334, 330, *DOF)
if pid == 9:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(334, 332, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(332)[0][0]
    y = gmsh.model.mesh.getNode(332)[0][1]
    z = gmsh.model.mesh.getNode(332)[0][2]
    coord_l=[x,y,z]
    ops.node(332,*coord_l)
    equalDOF(334, 332, *DOF)
if pid == 9:
    DOF = [1, 2]
    equalDOF(334, 334, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(334, 334, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(335, 286, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(335, 286, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(335, 288, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(335, 288, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(335, 290, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(335, 290, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(335, 292, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(335, 292, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(335, 294, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(335, 294, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(335, 335, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(335, 335, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(335, 337, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(335, 337, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(335, 339, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(335, 339, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(335, 341, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(335, 341, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(335, 343, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(335, 343, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(336, 219, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(336, 219, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(336, 229, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(336, 229, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(336, 239, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(336, 239, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(336, 249, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(336, 249, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(336, 296, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(336, 296, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(336, 298, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(336, 298, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(336, 300, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(336, 300, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(336, 302, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(336, 302, *DOF)
if pid == 10:
    DOF = [1, 2]
    equalDOF(336, 336, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(336, 336, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(336, 338, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(336, 338, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(336, 340, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(336, 340, *DOF)
if pid == 10:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(336, 342, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(336, 342, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(337, 286, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(337, 286, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(337, 288, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(337, 288, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(337, 290, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(337, 290, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(337, 292, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(337, 292, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(337, 294, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(337, 294, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(337, 335, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(337, 335, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(337, 337, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(337, 337, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(337, 339, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(337, 339, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(337, 341, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(337, 341, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(337, 343, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(337, 343, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(338, 219, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(338, 219, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(338, 229, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(338, 229, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(338, 239, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(338, 239, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(338, 249, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(338, 249, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(338, 296, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(338, 296, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(338, 298, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(338, 298, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(338, 300, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(338, 300, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(338, 302, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(338, 302, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(338, 336, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(338, 336, *DOF)
if pid == 11:
    DOF = [1, 2]
    equalDOF(338, 338, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(338, 338, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(338, 340, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(338, 340, *DOF)
if pid == 11:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(338, 342, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(338, 342, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(339, 286, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(339, 286, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(339, 288, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(339, 288, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(339, 290, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(339, 290, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(339, 292, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(339, 292, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(339, 294, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(339, 294, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(339, 335, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(339, 335, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(339, 337, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(339, 337, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(339, 339, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(339, 339, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(339, 341, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(339, 341, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(339, 343, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(339, 343, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(340, 219, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(340, 219, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(340, 229, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(340, 229, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(340, 239, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(340, 239, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(340, 249, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(340, 249, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(340, 296, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(340, 296, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(340, 298, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(340, 298, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(340, 300, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(340, 300, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(302)[0][0]
    y = gmsh.model.mesh.getNode(302)[0][1]
    z = gmsh.model.mesh.getNode(302)[0][2]
    coord_l=[x,y,z]
    ops.node(302,*coord_l)
    equalDOF(340, 302, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(340, 302, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(340, 336, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(340, 336, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(340, 338, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(340, 338, *DOF)
if pid == 12:
    DOF = [1, 2]
    equalDOF(340, 340, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(340, 340, *DOF)
if pid == 12:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(342)[0][0]
    y = gmsh.model.mesh.getNode(342)[0][1]
    z = gmsh.model.mesh.getNode(342)[0][2]
    coord_l=[x,y,z]
    ops.node(342,*coord_l)
    equalDOF(340, 342, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(340, 342, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(341, 286, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(341, 286, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(341, 288, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(341, 288, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(341, 290, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(341, 290, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(341, 292, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(341, 292, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(341, 294, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(294)[0][0]
    y = gmsh.model.mesh.getNode(294)[0][1]
    z = gmsh.model.mesh.getNode(294)[0][2]
    coord_l=[x,y,z]
    ops.node(294,*coord_l)
    equalDOF(341, 294, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(341, 335, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(341, 335, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(341, 337, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(341, 337, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(341, 339, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(341, 339, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(341, 341, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(341, 341, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(341, 343, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(343)[0][0]
    y = gmsh.model.mesh.getNode(343)[0][1]
    z = gmsh.model.mesh.getNode(343)[0][2]
    coord_l=[x,y,z]
    ops.node(343,*coord_l)
    equalDOF(341, 343, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(342, 219, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(219)[0][0]
    y = gmsh.model.mesh.getNode(219)[0][1]
    z = gmsh.model.mesh.getNode(219)[0][2]
    coord_l=[x,y,z]
    ops.node(219,*coord_l)
    equalDOF(342, 219, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(229)[0][0]
    y = gmsh.model.mesh.getNode(229)[0][1]
    z = gmsh.model.mesh.getNode(229)[0][2]
    coord_l=[x,y,z]
    ops.node(229,*coord_l)
    equalDOF(342, 229, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(342, 229, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(342, 239, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(239)[0][0]
    y = gmsh.model.mesh.getNode(239)[0][1]
    z = gmsh.model.mesh.getNode(239)[0][2]
    coord_l=[x,y,z]
    ops.node(239,*coord_l)
    equalDOF(342, 239, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(249)[0][0]
    y = gmsh.model.mesh.getNode(249)[0][1]
    z = gmsh.model.mesh.getNode(249)[0][2]
    coord_l=[x,y,z]
    ops.node(249,*coord_l)
    equalDOF(342, 249, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(342, 249, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(342, 296, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(296)[0][0]
    y = gmsh.model.mesh.getNode(296)[0][1]
    z = gmsh.model.mesh.getNode(296)[0][2]
    coord_l=[x,y,z]
    ops.node(296,*coord_l)
    equalDOF(342, 296, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(342, 298, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(298)[0][0]
    y = gmsh.model.mesh.getNode(298)[0][1]
    z = gmsh.model.mesh.getNode(298)[0][2]
    coord_l=[x,y,z]
    ops.node(298,*coord_l)
    equalDOF(342, 298, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(342, 300, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(300)[0][0]
    y = gmsh.model.mesh.getNode(300)[0][1]
    z = gmsh.model.mesh.getNode(300)[0][2]
    coord_l=[x,y,z]
    ops.node(300,*coord_l)
    equalDOF(342, 300, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(342, 302, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(342, 302, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(342, 336, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(336)[0][0]
    y = gmsh.model.mesh.getNode(336)[0][1]
    z = gmsh.model.mesh.getNode(336)[0][2]
    coord_l=[x,y,z]
    ops.node(336,*coord_l)
    equalDOF(342, 336, *DOF)
if pid == 13:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(342, 338, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(338)[0][0]
    y = gmsh.model.mesh.getNode(338)[0][1]
    z = gmsh.model.mesh.getNode(338)[0][2]
    coord_l=[x,y,z]
    ops.node(338,*coord_l)
    equalDOF(342, 338, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(342, 340, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(340)[0][0]
    y = gmsh.model.mesh.getNode(340)[0][1]
    z = gmsh.model.mesh.getNode(340)[0][2]
    coord_l=[x,y,z]
    ops.node(340,*coord_l)
    equalDOF(342, 340, *DOF)
if pid == 13:
    DOF = [1, 2]
    equalDOF(342, 342, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(342, 342, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(343, 286, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(286)[0][0]
    y = gmsh.model.mesh.getNode(286)[0][1]
    z = gmsh.model.mesh.getNode(286)[0][2]
    coord_l=[x,y,z]
    ops.node(286,*coord_l)
    equalDOF(343, 286, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(343, 288, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(288)[0][0]
    y = gmsh.model.mesh.getNode(288)[0][1]
    z = gmsh.model.mesh.getNode(288)[0][2]
    coord_l=[x,y,z]
    ops.node(288,*coord_l)
    equalDOF(343, 288, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(343, 290, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(290)[0][0]
    y = gmsh.model.mesh.getNode(290)[0][1]
    z = gmsh.model.mesh.getNode(290)[0][2]
    coord_l=[x,y,z]
    ops.node(290,*coord_l)
    equalDOF(343, 290, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(343, 292, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(292)[0][0]
    y = gmsh.model.mesh.getNode(292)[0][1]
    z = gmsh.model.mesh.getNode(292)[0][2]
    coord_l=[x,y,z]
    ops.node(292,*coord_l)
    equalDOF(343, 292, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(343, 294, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(343, 294, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(343, 335, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(335)[0][0]
    y = gmsh.model.mesh.getNode(335)[0][1]
    z = gmsh.model.mesh.getNode(335)[0][2]
    coord_l=[x,y,z]
    ops.node(335,*coord_l)
    equalDOF(343, 335, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(343, 337, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(337)[0][0]
    y = gmsh.model.mesh.getNode(337)[0][1]
    z = gmsh.model.mesh.getNode(337)[0][2]
    coord_l=[x,y,z]
    ops.node(337,*coord_l)
    equalDOF(343, 337, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(343, 339, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(339)[0][0]
    y = gmsh.model.mesh.getNode(339)[0][1]
    z = gmsh.model.mesh.getNode(339)[0][2]
    coord_l=[x,y,z]
    ops.node(339,*coord_l)
    equalDOF(343, 339, *DOF)
if pid == 14:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(343, 341, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(341)[0][0]
    y = gmsh.model.mesh.getNode(341)[0][1]
    z = gmsh.model.mesh.getNode(341)[0][2]
    coord_l=[x,y,z]
    ops.node(341,*coord_l)
    equalDOF(343, 341, *DOF)
if pid == 14:
    DOF = [1, 2]
    equalDOF(343, 343, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(343, 343, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(344, 277, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(344, 277, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(344, 279, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(344, 279, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(344, 281, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(344, 281, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(344, 283, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(344, 283, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(344, 285, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(344, 285, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(344, 344, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(344, 344, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(344, 346, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(344, 346, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(344, 348, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(344, 348, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(344, 350, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(344, 350, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(344, 352, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(344, 352, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(345, 218, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(345, 218, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(345, 228, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(345, 228, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(345, 238, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(345, 238, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(345, 248, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(345, 248, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(345, 289, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(345, 289, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(345, 291, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(345, 291, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(345, 293, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(345, 293, *DOF)
if pid == 15:
    DOF = [1, 2]
    equalDOF(345, 345, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(345, 345, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(345, 347, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(345, 347, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(345, 349, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(345, 349, *DOF)
if pid == 15:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(345, 351, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(345, 351, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(346, 277, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(346, 277, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(346, 279, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(346, 279, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(346, 281, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(346, 281, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(346, 283, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(346, 283, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(346, 285, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(346, 285, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(346, 344, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(346, 344, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(346, 346, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(346, 346, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(346, 348, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(346, 348, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(346, 350, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(346, 350, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(346, 352, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(346, 352, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(347, 218, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(347, 218, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(347, 228, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(347, 228, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(347, 238, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(347, 238, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(347, 248, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(347, 248, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(347, 289, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(347, 289, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(347, 291, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(347, 291, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(347, 293, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(347, 293, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(347, 345, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(347, 345, *DOF)
if pid == 16:
    DOF = [1, 2]
    equalDOF(347, 347, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(347, 347, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(347, 349, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(347, 349, *DOF)
if pid == 16:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(347, 351, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(347, 351, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(348, 277, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(348, 277, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(348, 279, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(348, 279, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(348, 281, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(348, 281, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(348, 283, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(348, 283, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(348, 285, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(348, 285, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(348, 344, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(348, 344, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(348, 346, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(348, 346, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(348, 348, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(348, 348, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(348, 350, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(348, 350, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(348, 352, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(348, 352, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(349, 218, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(349, 218, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(349, 228, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(349, 228, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(349, 238, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(349, 238, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(349, 248, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(349, 248, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(349, 289, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(349, 289, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(349, 291, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(349, 291, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(293)[0][0]
    y = gmsh.model.mesh.getNode(293)[0][1]
    z = gmsh.model.mesh.getNode(293)[0][2]
    coord_l=[x,y,z]
    ops.node(293,*coord_l)
    equalDOF(349, 293, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(349, 293, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(349, 345, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(349, 345, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(349, 347, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(349, 347, *DOF)
if pid == 17:
    DOF = [1, 2]
    equalDOF(349, 349, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(349, 349, *DOF)
if pid == 17:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(351)[0][0]
    y = gmsh.model.mesh.getNode(351)[0][1]
    z = gmsh.model.mesh.getNode(351)[0][2]
    coord_l=[x,y,z]
    ops.node(351,*coord_l)
    equalDOF(349, 351, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(349, 351, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(350, 277, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(350, 277, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(350, 279, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(350, 279, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(350, 281, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(350, 281, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(350, 283, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(350, 283, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(350, 285, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(285)[0][0]
    y = gmsh.model.mesh.getNode(285)[0][1]
    z = gmsh.model.mesh.getNode(285)[0][2]
    coord_l=[x,y,z]
    ops.node(285,*coord_l)
    equalDOF(350, 285, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(350, 344, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(350, 344, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(350, 346, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(350, 346, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(350, 348, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(350, 348, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(350, 350, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(350, 350, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(350, 352, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(352)[0][0]
    y = gmsh.model.mesh.getNode(352)[0][1]
    z = gmsh.model.mesh.getNode(352)[0][2]
    coord_l=[x,y,z]
    ops.node(352,*coord_l)
    equalDOF(350, 352, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(351, 218, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(218)[0][0]
    y = gmsh.model.mesh.getNode(218)[0][1]
    z = gmsh.model.mesh.getNode(218)[0][2]
    coord_l=[x,y,z]
    ops.node(218,*coord_l)
    equalDOF(351, 218, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(228)[0][0]
    y = gmsh.model.mesh.getNode(228)[0][1]
    z = gmsh.model.mesh.getNode(228)[0][2]
    coord_l=[x,y,z]
    ops.node(228,*coord_l)
    equalDOF(351, 228, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(351, 228, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(351, 238, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(238)[0][0]
    y = gmsh.model.mesh.getNode(238)[0][1]
    z = gmsh.model.mesh.getNode(238)[0][2]
    coord_l=[x,y,z]
    ops.node(238,*coord_l)
    equalDOF(351, 238, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(248)[0][0]
    y = gmsh.model.mesh.getNode(248)[0][1]
    z = gmsh.model.mesh.getNode(248)[0][2]
    coord_l=[x,y,z]
    ops.node(248,*coord_l)
    equalDOF(351, 248, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(351, 248, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(351, 289, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(289)[0][0]
    y = gmsh.model.mesh.getNode(289)[0][1]
    z = gmsh.model.mesh.getNode(289)[0][2]
    coord_l=[x,y,z]
    ops.node(289,*coord_l)
    equalDOF(351, 289, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(351, 291, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(291)[0][0]
    y = gmsh.model.mesh.getNode(291)[0][1]
    z = gmsh.model.mesh.getNode(291)[0][2]
    coord_l=[x,y,z]
    ops.node(291,*coord_l)
    equalDOF(351, 291, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(351, 293, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(351, 293, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(351, 345, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(345)[0][0]
    y = gmsh.model.mesh.getNode(345)[0][1]
    z = gmsh.model.mesh.getNode(345)[0][2]
    coord_l=[x,y,z]
    ops.node(345,*coord_l)
    equalDOF(351, 345, *DOF)
if pid == 18:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(351, 347, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(347)[0][0]
    y = gmsh.model.mesh.getNode(347)[0][1]
    z = gmsh.model.mesh.getNode(347)[0][2]
    coord_l=[x,y,z]
    ops.node(347,*coord_l)
    equalDOF(351, 347, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(351, 349, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(349)[0][0]
    y = gmsh.model.mesh.getNode(349)[0][1]
    z = gmsh.model.mesh.getNode(349)[0][2]
    coord_l=[x,y,z]
    ops.node(349,*coord_l)
    equalDOF(351, 349, *DOF)
if pid == 18:
    DOF = [1, 2]
    equalDOF(351, 351, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(351, 351, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(352, 277, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(277)[0][0]
    y = gmsh.model.mesh.getNode(277)[0][1]
    z = gmsh.model.mesh.getNode(277)[0][2]
    coord_l=[x,y,z]
    ops.node(277,*coord_l)
    equalDOF(352, 277, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(352, 279, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(279)[0][0]
    y = gmsh.model.mesh.getNode(279)[0][1]
    z = gmsh.model.mesh.getNode(279)[0][2]
    coord_l=[x,y,z]
    ops.node(279,*coord_l)
    equalDOF(352, 279, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(352, 281, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(281)[0][0]
    y = gmsh.model.mesh.getNode(281)[0][1]
    z = gmsh.model.mesh.getNode(281)[0][2]
    coord_l=[x,y,z]
    ops.node(281,*coord_l)
    equalDOF(352, 281, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(352, 283, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(283)[0][0]
    y = gmsh.model.mesh.getNode(283)[0][1]
    z = gmsh.model.mesh.getNode(283)[0][2]
    coord_l=[x,y,z]
    ops.node(283,*coord_l)
    equalDOF(352, 283, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(352, 285, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(352, 285, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(352, 344, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(344)[0][0]
    y = gmsh.model.mesh.getNode(344)[0][1]
    z = gmsh.model.mesh.getNode(344)[0][2]
    coord_l=[x,y,z]
    ops.node(344,*coord_l)
    equalDOF(352, 344, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(352, 346, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(346)[0][0]
    y = gmsh.model.mesh.getNode(346)[0][1]
    z = gmsh.model.mesh.getNode(346)[0][2]
    coord_l=[x,y,z]
    ops.node(346,*coord_l)
    equalDOF(352, 346, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(352, 348, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(348)[0][0]
    y = gmsh.model.mesh.getNode(348)[0][1]
    z = gmsh.model.mesh.getNode(348)[0][2]
    coord_l=[x,y,z]
    ops.node(348,*coord_l)
    equalDOF(352, 348, *DOF)
if pid == 19:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(352, 350, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(350)[0][0]
    y = gmsh.model.mesh.getNode(350)[0][1]
    z = gmsh.model.mesh.getNode(350)[0][2]
    coord_l=[x,y,z]
    ops.node(350,*coord_l)
    equalDOF(352, 350, *DOF)
if pid == 19:
    DOF = [1, 2]
    equalDOF(352, 352, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(352, 352, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(353, 217, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(353, 217, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(353, 227, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(353, 227, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(353, 237, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(353, 237, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(353, 247, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(353, 247, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(353, 280, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(353, 280, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(353, 282, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(353, 282, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(353, 284, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(353, 284, *DOF)
if pid == 20:
    DOF = [1, 2]
    equalDOF(353, 353, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(353, 353, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(353, 354, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(353, 354, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(353, 355, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(353, 355, *DOF)
if pid == 20:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(353, 356, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(353, 356, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(354, 217, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(354, 217, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(354, 227, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(354, 227, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(354, 237, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(354, 237, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(354, 247, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(354, 247, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(354, 280, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(354, 280, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(354, 282, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(354, 282, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(354, 284, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(354, 284, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(354, 353, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(354, 353, *DOF)
if pid == 21:
    DOF = [1, 2]
    equalDOF(354, 354, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(354, 354, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(354, 355, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(354, 355, *DOF)
if pid == 21:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(354, 356, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(354, 356, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(355, 217, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(355, 217, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(355, 227, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(355, 227, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(355, 237, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(355, 237, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(355, 247, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(355, 247, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(355, 280, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(355, 280, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(355, 282, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(355, 282, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(284)[0][0]
    y = gmsh.model.mesh.getNode(284)[0][1]
    z = gmsh.model.mesh.getNode(284)[0][2]
    coord_l=[x,y,z]
    ops.node(284,*coord_l)
    equalDOF(355, 284, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(355, 284, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(355, 353, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(355, 353, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(355, 354, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(355, 354, *DOF)
if pid == 22:
    DOF = [1, 2]
    equalDOF(355, 355, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(355, 355, *DOF)
if pid == 22:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(356)[0][0]
    y = gmsh.model.mesh.getNode(356)[0][1]
    z = gmsh.model.mesh.getNode(356)[0][2]
    coord_l=[x,y,z]
    ops.node(356,*coord_l)
    equalDOF(355, 356, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(355, 356, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(356, 217, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(217)[0][0]
    y = gmsh.model.mesh.getNode(217)[0][1]
    z = gmsh.model.mesh.getNode(217)[0][2]
    coord_l=[x,y,z]
    ops.node(217,*coord_l)
    equalDOF(356, 217, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(227)[0][0]
    y = gmsh.model.mesh.getNode(227)[0][1]
    z = gmsh.model.mesh.getNode(227)[0][2]
    coord_l=[x,y,z]
    ops.node(227,*coord_l)
    equalDOF(356, 227, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(356, 227, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(356, 237, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(237)[0][0]
    y = gmsh.model.mesh.getNode(237)[0][1]
    z = gmsh.model.mesh.getNode(237)[0][2]
    coord_l=[x,y,z]
    ops.node(237,*coord_l)
    equalDOF(356, 237, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(247)[0][0]
    y = gmsh.model.mesh.getNode(247)[0][1]
    z = gmsh.model.mesh.getNode(247)[0][2]
    coord_l=[x,y,z]
    ops.node(247,*coord_l)
    equalDOF(356, 247, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(356, 247, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(356, 280, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(280)[0][0]
    y = gmsh.model.mesh.getNode(280)[0][1]
    z = gmsh.model.mesh.getNode(280)[0][2]
    coord_l=[x,y,z]
    ops.node(280,*coord_l)
    equalDOF(356, 280, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(356, 282, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(282)[0][0]
    y = gmsh.model.mesh.getNode(282)[0][1]
    z = gmsh.model.mesh.getNode(282)[0][2]
    coord_l=[x,y,z]
    ops.node(282,*coord_l)
    equalDOF(356, 282, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(356, 284, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(356, 284, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(356, 353, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(353)[0][0]
    y = gmsh.model.mesh.getNode(353)[0][1]
    z = gmsh.model.mesh.getNode(353)[0][2]
    coord_l=[x,y,z]
    ops.node(353,*coord_l)
    equalDOF(356, 353, *DOF)
if pid == 23:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(356, 354, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(354)[0][0]
    y = gmsh.model.mesh.getNode(354)[0][1]
    z = gmsh.model.mesh.getNode(354)[0][2]
    coord_l=[x,y,z]
    ops.node(354,*coord_l)
    equalDOF(356, 354, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(356, 355, *DOF)
if pid == 24:
    DOF = [1, 2]
    x = gmsh.model.mesh.getNode(355)[0][0]
    y = gmsh.model.mesh.getNode(355)[0][1]
    z = gmsh.model.mesh.getNode(355)[0][2]
    coord_l=[x,y,z]
    ops.node(355,*coord_l)
    equalDOF(356, 355, *DOF)
if pid == 23:
    DOF = [1, 2]
    equalDOF(356, 356, *DOF)
if pid == 24:
    DOF = [1, 2]
    equalDOF(356, 356, *DOF)
cFactor = 1200000.0
ops.model('basic', '-ndm', 3, '-ndf', 4)
ops.setTime(0.0)
ops.wipeAnalysis()
ops.remove('recorders')
velocityFile = 'yerbaNSvelocity'
data_gm = nup.loadtxt('yerbaNSvelocity.out')
ops.timeSeries('Path', 2, '-dt', 0.005, '-filePath', velocityFile +'.out', '-factor', 1200000.0)
ops.pattern('Plain', 10, 2)
ops.load(458, 1.0,0.0, 0.0)
if pid == 0:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',1,519,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',1,519,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',1,519,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',45,522,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',45,522,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',45,522,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',46,525,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',46,525,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',46,525,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',47,528,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',47,528,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',47,528,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',5,529,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',5,529,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',5,529,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 211,215,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 211,215,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 211,215,'material','1','strain')
if pid == 1:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',13,532,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',13,532,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',13,532,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',145,535,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',145,535,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',145,535,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',146,538,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',146,538,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',146,538,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',147,541,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',147,541,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',147,541,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',29,542,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',29,542,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',29,542,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 216,220,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 216,220,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 216,220,'material','1','strain')
if pid == 2:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',14,545,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',14,545,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',14,545,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',141,548,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',141,548,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',141,548,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',142,551,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',142,551,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',142,551,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',143,554,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',143,554,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',143,554,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',30,555,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',30,555,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',30,555,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 221,225,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 221,225,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 221,225,'material','1','strain')
if pid == 3:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',15,558,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',15,558,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',15,558,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',137,561,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',137,561,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',137,561,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',138,564,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',138,564,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',138,564,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',139,567,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',139,567,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',139,567,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',31,568,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',31,568,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',31,568,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 226,230,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 226,230,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 226,230,'material','1','strain')
if pid == 4:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',3,569,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',3,569,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',3,569,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',53,570,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',53,570,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',53,570,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',54,571,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',54,571,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',54,571,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',55,572,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',55,572,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',55,572,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',7,572,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',7,572,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',7,572,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 231,235,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 231,235,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 231,235,'material','1','strain')
if pid == 5:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',11,575,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',11,575,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',11,575,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',91,578,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',91,578,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',91,578,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',95,581,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',95,581,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',95,581,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',99,584,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',99,584,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',99,584,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',27,585,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',27,585,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',27,585,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 236,240,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 236,240,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 236,240,'material','1','strain')
if pid == 6:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',65,588,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',65,588,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',65,588,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',153,591,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',153,591,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',153,591,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',154,594,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',154,594,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',154,594,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',155,597,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',155,597,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',155,597,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',73,598,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',73,598,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',73,598,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 241,245,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 241,245,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 241,245,'material','1','strain')
if pid == 7:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',66,601,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',66,601,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',66,601,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',157,604,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',157,604,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',157,604,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',158,607,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',158,607,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',158,607,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',159,610,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',159,610,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',159,610,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',74,611,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',74,611,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',74,611,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 246,250,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 246,250,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 246,250,'material','1','strain')
if pid == 8:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',67,614,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',67,614,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',67,614,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',161,617,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',161,617,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',161,617,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',162,620,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',162,620,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',162,620,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',163,623,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',163,623,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',163,623,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',75,624,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',75,624,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',75,624,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 251,255,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 251,255,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 251,255,'material','1','strain')
if pid == 9:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',19,625,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',19,625,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',19,625,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',115,626,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',115,626,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',115,626,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',111,627,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',111,627,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',111,627,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',107,628,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',107,628,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',107,628,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',35,628,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',35,628,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',35,628,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 256,260,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 256,260,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 256,260,'material','1','strain')
if pid == 10:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',10,631,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',10,631,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',10,631,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',90,634,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',90,634,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',90,634,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',94,637,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',94,637,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',94,637,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',98,640,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',98,640,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',98,640,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',26,641,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',26,641,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',26,641,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 261,265,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 261,265,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 261,265,'material','1','strain')
if pid == 11:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',61,644,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',61,644,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',61,644,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',169,647,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',169,647,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',169,647,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',170,650,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',170,650,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',170,650,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',171,653,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',171,653,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',171,653,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',77,654,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',77,654,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',77,654,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 266,270,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 266,270,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 266,270,'material','1','strain')
if pid == 12:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',62,657,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',62,657,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',62,657,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',173,660,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',173,660,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',173,660,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',174,663,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',174,663,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',174,663,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',175,666,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',175,666,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',175,666,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',78,667,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',78,667,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',78,667,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 271,275,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 271,275,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 271,275,'material','1','strain')
if pid == 13:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',63,670,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',63,670,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',63,670,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',177,673,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',177,673,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',177,673,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',178,676,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',178,676,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',178,676,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',179,679,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',179,679,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',179,679,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',79,680,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',79,680,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',79,680,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 276,280,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 276,280,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 276,280,'material','1','strain')
if pid == 14:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',18,681,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',18,681,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',18,681,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',114,682,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',114,682,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',114,682,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',110,683,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',110,683,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',110,683,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',106,684,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',106,684,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',106,684,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',34,684,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',34,684,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',34,684,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 281,285,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 281,285,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 281,285,'material','1','strain')
if pid == 15:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',9,687,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',9,687,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',9,687,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',89,690,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',89,690,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',89,690,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',93,693,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',93,693,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',93,693,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',97,696,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',97,696,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',97,696,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',25,697,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',25,697,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',25,697,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 286,290,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 286,290,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 286,290,'material','1','strain')
if pid == 16:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',57,700,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',57,700,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',57,700,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',185,703,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',185,703,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',185,703,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',186,706,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',186,706,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',186,706,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',187,709,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',187,709,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',187,709,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',81,710,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',81,710,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',81,710,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 291,295,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 291,295,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 291,295,'material','1','strain')
if pid == 17:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',58,713,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',58,713,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',58,713,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',189,716,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',189,716,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',189,716,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',190,719,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',190,719,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',190,719,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',191,722,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',191,722,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',191,722,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',82,723,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',82,723,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',82,723,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 296,300,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 296,300,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 296,300,'material','1','strain')
if pid == 18:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',59,726,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',59,726,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',59,726,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',193,729,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',193,729,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',193,729,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',194,732,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',194,732,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',194,732,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',195,735,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',195,735,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',195,735,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',83,736,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',83,736,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',83,736,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 301,305,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 301,305,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 301,305,'material','1','strain')
if pid == 19:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',17,737,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',17,737,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',17,737,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',113,738,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',113,738,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',113,738,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',109,739,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',109,739,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',109,739,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',105,740,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',105,740,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',105,740,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',33,740,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',33,740,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',33,740,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 306,310,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 306,310,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 306,310,'material','1','strain')
if pid == 20:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',2,741,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',2,741,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',2,741,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',41,742,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',41,742,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',41,742,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',42,743,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',42,743,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',42,743,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',43,744,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',43,744,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',43,744,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',6,744,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',6,744,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',6,744,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 311,315,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 311,315,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 311,315,'material','1','strain')
if pid == 21:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',21,745,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',21,745,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',21,745,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',121,746,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',121,746,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',121,746,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',122,747,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',122,747,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',122,747,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',123,748,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',123,748,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',123,748,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',37,748,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',37,748,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',37,748,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 316,320,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 316,320,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 316,320,'material','1','strain')
if pid == 22:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',22,749,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',22,749,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',22,749,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',125,750,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',125,750,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',125,750,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',126,751,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',126,751,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',126,751,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',127,752,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',127,752,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',127,752,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',38,752,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',38,752,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',38,752,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 321,325,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 321,325,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 321,325,'material','1','strain')
if pid == 23:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',23,753,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',23,753,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',23,753,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',129,754,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',129,754,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',129,754,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',130,755,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',130,755,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',130,755,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',131,756,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',131,756,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',131,756,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',39,756,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',39,756,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',39,756,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 326,330,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 326,330,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 326,330,'material','1','strain')
if pid == 24:
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',4,753,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',4,753,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',4,753,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',49,754,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',49,754,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',49,754,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',50,755,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',50,755,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',50,755,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',51,756,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',51,756,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',51,756,'-dof', 4, 'vel')
    ops.recorder('Node','-file','displacement.out','-time', '-dT',recDT,'-nodeRange',8,756,'-dof', 1, 2,3, 'disp')
    ops.recorder('Node','-file','acceleration.out','-time', '-dT',recDT,'-nodeRange',8,756,'-dof', 1, 2,3, 'accel')
    ops.recorder('Node','-file','porePressure.out','-time', '-dT',recDT,'-nodeRange',8,756,'-dof', 4, 'vel')
    ops.recorder('Element','-file','stress.out','-time','-eleRange', 331,335,'material','1','stress')
    ops.recorder('Element','-file','gauss.out','-time','-eleRange', 331,335,'material','1','gausspoint')
    ops.recorder('Element','-file','strain.out','-time','-eleRange', 331,335,'material','1','strain')
ops.barrier()
ops.partition('-ncuts',36)
ops.domainChange()
ops.constraints('Penalty', 1.0E16, 1.0E16)
ops.test('NormDispIncr', 1e-3, 100, 1)
ops.algorithm('KrylovNewton')
ops.numberer('ParallelRCM')
ops.system('Mumps')
ops.integrator('Newmark', 1.5, 1.0)
ops.rayleigh(0.049767804413303654, 0.000315158303152268, 0.0, 0.0)
ops.analysis('Transient')
